{"version":3,"file":"esperanto.js","sources":["../../../../src/utils/hasNamedImports.js","../../../../src/utils/hasNamedExports.js","../../../../src/utils/ast/walk.js","../../../../src/utils/mappers.js","../../../../src/utils/ast/annotate.js","../../../../src/utils/ast/findImportsAndExports.js","../../../../src/utils/hasOwnProp.js","../../../../src/utils/ast/getUnscopedNames.js","../../../../src/utils/disallowConflictingImports.js","../../../../src/utils/sanitize.js","../../../../src/standalone/getModule.js","../../../../src/utils/resolveId.js","../../../../src/bundler/utils/sortModules.js","../../../../src/bundler/utils/resolveChains.js","../../../../src/utils/builtins.js","../../../../src/bundler/combine/populateModuleNames.js","../../../../src/bundler/combine/populateExternalModuleImports.js","../../../../src/bundler/combine/getRenamedImports.js","../../../../src/bundler/combine/topLevelScopeConflicts.js","../../../../src/bundler/combine/populateIdentifierReplacements.js","../../../../src/bundler/combine/resolveExports.js","../../../../src/utils/getReadOnlyIdentifiers.js","../../../../src/utils/ast/disallowIllegalReassignment.js","../../../../src/utils/ast/replaceIdentifiers.js","../../../../src/utils/ast/rewriteExportAssignments.js","../../../../src/utils/ast/traverse.js","../../../../src/bundler/combine/transformBody.js","../../../../src/bundler/combine/index.js","../../../../src/bundler/getModule.js","../../../../src/bundler/getBundle.js","../../../../src/standalone/builders/defaultsMode/utils/transformExportDeclaration.js","../../../../src/utils/packageResult.js","../../../../src/utils/amd/getImportSummary.js","../../../../src/utils/amd/processName.js","../../../../src/utils/amd/processIds.js","../../../../src/utils/amd/amdIntro.js","../../../../src/standalone/builders/defaultsMode/amd.js","../../../../src/standalone/builders/defaultsMode/cjs.js","../../../../src/utils/umd/umdIntro.js","../../../../src/utils/EsperantoError.js","../../../../src/utils/umd/requireName.js","../../../../src/standalone/builders/defaultsMode/umd.js","../../../../src/standalone/builders/defaultsMode/index.js","../../../../src/standalone/builders/strictMode/utils/gatherImports.js","../../../../src/standalone/builders/strictMode/utils/getExportNames.js","../../../../src/standalone/builders/strictMode/utils/transformBody.js","../../../../src/standalone/builders/strictMode/amd.js","../../../../src/standalone/builders/strictMode/cjs.js","../../../../src/standalone/builders/strictMode/umd.js","../../../../src/standalone/builders/strictMode/index.js","../../../../src/standalone/builders/index.js","../../../../src/bundler/builders/defaultsMode/amd.js","../../../../src/bundler/builders/defaultsMode/cjs.js","../../../../src/bundler/builders/defaultsMode/umd.js","../../../../src/bundler/builders/defaultsMode/index.js","../../../../src/bundler/builders/strictMode/utils/getExportBlock.js","../../../../src/bundler/builders/strictMode/amd.js","../../../../src/bundler/builders/strictMode/cjs.js","../../../../src/bundler/builders/strictMode/umd.js","../../../../src/bundler/builders/strictMode/index.js","../../../../src/bundler/builders/index.js","../../../../src/bundler/builders/concat.js","../../../../src/esperanto.js"],"sourcesContent":["export default function hasNamedImports ( mod ) {\n\tvar i = mod.imports.length;\n\n\twhile ( i-- ) {\n\t\tif ( mod.imports[i].isNamed ) {\n\t\t\treturn true;\n\t\t}\n\t}\n}\n","export default function hasNamedExports ( mod ) {\n\tvar i = mod.exports.length;\n\n\twhile ( i-- ) {\n\t\tif ( !mod.exports[i].isDefault ) {\n\t\t\treturn true;\n\t\t}\n\t}\n}\n","let shouldSkip;\nlet shouldAbort;\n\nexport default function walk ( ast, { enter, leave }) {\n\tshouldAbort = false;\n\tvisit( ast, null, enter, leave );\n}\n\nlet context = {\n\tskip: () => shouldSkip = true,\n\tabort: () => shouldAbort = true\n};\n\nlet childKeys = {};\n\nlet toString = Object.prototype.toString;\n\nfunction isArray ( thing ) {\n\treturn toString.call( thing ) === '[object Array]';\n}\n\nfunction visit ( node, parent, enter, leave ) {\n\tif ( !node || shouldAbort ) return;\n\n\tif ( enter ) {\n\t\tshouldSkip = false;\n\t\tenter.call( context, node, parent );\n\t\tif ( shouldSkip || shouldAbort ) return;\n\t}\n\n\tlet keys = childKeys[ node.type ] || (\n\t\tchildKeys[ node.type ] = Object.keys( node ).filter( key => typeof node[ key ] === 'object' )\n\t);\n\n\tlet key, value, i, j;\n\n\ti = keys.length;\n\twhile ( i-- ) {\n\t\tkey = keys[i];\n\t\tvalue = node[ key ];\n\n\t\tif ( isArray( value ) ) {\n\t\t\tj = value.length;\n\t\t\twhile ( j-- ) {\n\t\t\t\tvisit( value[j], node, enter, leave );\n\t\t\t}\n\t\t}\n\n\t\telse if ( value && value.type ) {\n\t\t\tvisit( value, node, enter, leave );\n\t\t}\n\t}\n\n\tif ( leave && !shouldAbort ) {\n\t\tleave( node, parent );\n\t}\n}","export function getId ( m ) {\n\treturn m.id;\n}\n\nexport function getName ( m ) {\n\treturn m.name;\n}\n\nexport function quote ( str ) {\n\treturn \"'\" + JSON.stringify(str).slice(1, -1).replace(/'/g, \"\\\\'\") + \"'\";\n}\n\nexport function req ( path ) {\n\treturn `require(${quote(path)})`;\n}\n\nexport function globalify ( name ) {\n  \tif ( /^__dep\\d+__$/.test( name ) ) {\n\t\treturn 'undefined';\n\t} else {\n\t\treturn `global.${name}`;\n\t}\n}\n","/*\n\tThis module traverse a module's AST, attaching scope information\n\tto nodes as it goes, which is later used to determine which\n\tidentifiers need to be rewritten to avoid collisions\n*/\n\nimport walk from './walk';\nimport { getName } from '../mappers';\n\nfunction Scope ( options ) {\n\toptions = options || {};\n\n\tthis.parent = options.parent;\n\tthis.names = options.params || [];\n}\n\nScope.prototype = {\n\tadd: function ( name ) {\n\t\tthis.names.push( name );\n\t},\n\n\tcontains: function ( name, ignoreTopLevel ) {\n\t\tif ( ignoreTopLevel && !this.parent ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( ~this.names.indexOf( name ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif ( this.parent ) {\n\t\t\treturn this.parent.contains( name, ignoreTopLevel );\n\t\t}\n\n\t\treturn false;\n\t}\n};\n\nexport default function annotateAst ( ast ) {\n\tlet scope = new Scope();\n\tlet blockScope = new Scope();\n\tlet declared = {};\n\tlet topLevelFunctionNames = [];\n\tlet templateLiteralRanges = [];\n\n\tlet envDepth = 0;\n\n\twalk( ast, {\n\t\tenter ( node ) {\n\t\t\tif ( node.type === 'ImportDeclaration' || node.type === 'ExportSpecifier' ) {\n\t\t\t\tnode._skip = true;\n\t\t\t}\n\n\t\t\tif ( node._skip ) {\n\t\t\t\treturn this.skip();\n\t\t\t}\n\n\t\t\tswitch ( node.type ) {\n\t\t\t\tcase 'FunctionExpression':\n\t\t\t\tcase 'FunctionDeclaration':\n\n\t\t\t\t\tenvDepth += 1;\n\n\t\t\t\t\t// fallthrough\n\n\t\t\t\tcase 'ArrowFunctionExpression':\n\t\t\t\t\tif ( node.id ) {\n\t\t\t\t\t\taddToScope( node );\n\n\t\t\t\t\t\t// If this is the root scope, this may need to be\n\t\t\t\t\t\t// exported early, so we make a note of it\n\t\t\t\t\t\tif ( !scope.parent && node.type === 'FunctionDeclaration' ) {\n\t\t\t\t\t\t\ttopLevelFunctionNames.push( node.id.name );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tlet names = node.params.map( getName );\n\n\t\t\t\t\tnames.forEach( name => declared[ name ] = true );\n\n\t\t\t\t\tscope = node._scope = new Scope({\n\t\t\t\t\t\tparent: scope,\n\t\t\t\t\t\tparams: names // TODO rest params?\n\t\t\t\t\t});\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'BlockStatement':\n\t\t\t\t\tblockScope = node._blockScope = new Scope({\n\t\t\t\t\t\tparent: blockScope\n\t\t\t\t\t});\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'VariableDeclaration':\n\t\t\t\t\tnode.declarations.forEach( node.kind === 'let' ? addToBlockScope : addToScope );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ClassExpression':\n\t\t\t\tcase 'ClassDeclaration':\n\t\t\t\t\taddToScope( node );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'MemberExpression':\n\t\t\t\t\tif ( envDepth === 0 && node.object.type === 'ThisExpression' ) {\n\t\t\t\t\t\tthrow new Error('`this` at the top level is undefined');\n\t\t\t\t\t}\n\t\t\t\t\t!node.computed && ( node.property._skip = true );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Property':\n\t\t\t\t\tnode.key._skip = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'TemplateLiteral':\n\t\t\t\t\ttemplateLiteralRanges.push([ node.start, node.end ]);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ThisExpression':\n\t\t\t\t\tif (envDepth === 0) {\n\t\t\t\t\t\tnode._topLevel = true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\t\tleave ( node ) {\n\t\t\tswitch ( node.type ) {\n\t\t\t\tcase 'FunctionExpression':\n\t\t\t\tcase 'FunctionDeclaration':\n\n\t\t\t\t\tenvDepth -= 1;\n\n\t\t\t\t\t// fallthrough\n\n\t\t\t\tcase 'ArrowFunctionExpression':\n\n\t\t\t\t\tscope = scope.parent;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'BlockStatement':\n\t\t\t\t\tblockScope = blockScope.parent;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t});\n\n\tfunction addToScope ( declarator ) {\n\t\tvar name = declarator.id.name;\n\n\t\tscope.add( name );\n\t\tdeclared[ name ] = true;\n\t}\n\n\tfunction addToBlockScope ( declarator ) {\n\t\tvar name = declarator.id.name;\n\n\t\tblockScope.add( name );\n\t\tdeclared[ name ] = true;\n\t}\n\n\tast._scope = scope;\n\tast._blockScope = blockScope;\n\tast._topLevelNames = ast._scope.names.concat( ast._blockScope.names );\n\tast._topLevelFunctionNames = topLevelFunctionNames;\n\tast._declared = declared;\n\tast._templateLiteralRanges = templateLiteralRanges;\n}\n","/**\n * Inspects a module and discovers/categorises import & export declarations\n * @param {object} mod - the module object\n * @param {string} source - the module's original source code\n * @param {object} ast - the result of parsing `source` with acorn\n * @returns {array} - [ imports, exports ]\n */\nexport default function findImportsAndExports ( mod, source, ast ) {\n\tvar imports = [], exports = [], previousDeclaration;\n\n\tast.body.forEach( node => {\n\t\tvar passthrough, declaration;\n\n\t\tif ( previousDeclaration ) {\n\t\t\tpreviousDeclaration.next = node.start;\n\n\t\t\tif ( node.type !== 'EmptyStatement' ) {\n\t\t\t\tpreviousDeclaration = null;\n\t\t\t}\n\t\t}\n\n\t\tif ( node.type === 'ImportDeclaration' ) {\n\t\t\tdeclaration = processImport( node );\n\t\t\timports.push( declaration );\n\t\t}\n\n\t\telse if ( node.type === 'ExportDefaultDeclaration' ) {\n\t\t\tdeclaration = processDefaultExport( node, source );\n\t\t\texports.push( declaration );\n\n\t\t\tif ( mod.defaultExport ) {\n\t\t\t\tthrow new Error( 'Duplicate default exports' );\n\t\t\t}\n\t\t\tmod.defaultExport = declaration;\n\t\t}\n\n\t\telse if ( node.type === 'ExportNamedDeclaration' ) {\n\t\t\tdeclaration = processExport( node, source );\n\t\t\texports.push( declaration );\n\n\t\t\tif ( node.source ) {\n\t\t\t\t// it's both an import and an export, e.g.\n\t\t\t\t// `export { foo } from './bar';\n\t\t\t\tpassthrough = processImport( node, true );\n\t\t\t\timports.push( passthrough );\n\n\t\t\t\tdeclaration.passthrough = passthrough;\n\t\t\t}\n\t\t}\n\n\t\tif ( declaration ) {\n\t\t\tpreviousDeclaration = declaration;\n\t\t}\n\t});\n\n\t// catch any trailing semicolons\n\tif ( previousDeclaration ) {\n\t\tpreviousDeclaration.next = source.length;\n\t\tpreviousDeclaration.isFinal = true;\n\t}\n\n\treturn [ imports, exports ];\n}\n\n/**\n * Generates a representation of an import declaration\n * @param {object} node - the original AST node\n * @param {boolean} passthrough - `true` if this is an `export { foo } from 'bar'`-style declaration\n * @returns {object}\n */\nfunction processImport ( node, passthrough ) {\n\tvar x = {\n\t\tmodule: null, // used by bundler - filled in later\n\t\tnode: node,\n\t\tstart: node.start,\n\t\tend: node.end,\n\t\tpassthrough: !!passthrough,\n\n\t\tpath: node.source.value,\n\t\tspecifiers: node.specifiers.map( s => {\n\t\t\tif ( s.type === 'ImportNamespaceSpecifier' ) {\n\t\t\t\treturn {\n\t\t\t\t\tisBatch: true,\n\t\t\t\t\tname: s.local.name, // TODO is this line necessary?\n\t\t\t\t\tas: s.local.name\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif ( s.type === 'ImportDefaultSpecifier' ) {\n\t\t\t\treturn {\n\t\t\t\t\tisDefault: true,\n\t\t\t\t\tname: 'default',\n\t\t\t\t\tas: s.local.name\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tname: ( !!passthrough ? s.exported : s.imported ).name,\n\t\t\t\tas: s.local.name\n\t\t\t};\n\t\t})\n\t};\n\n\t// TODO have different types of imports - batch, default, named\n\tif ( x.specifiers.length === 0 ) {\n\t\tx.isEmpty = true;\n\t} else if ( x.specifiers.length === 1 && x.specifiers[0].isDefault ) {\n\t\tx.isDefault = true;\n\t\tx.as = x.specifiers[0].as;\n\n\t} else if ( x.specifiers.length === 1 && x.specifiers[0].isBatch ) {\n\t\tx.isBatch = true;\n\t\tx.as = x.specifiers[0].name;\n\t} else {\n\t\tx.isNamed = true;\n\t}\n\n\treturn x;\n}\n\nfunction processDefaultExport ( node, source ) {\n\tlet result = {\n\t\tisDefault: true,\n\t\tnode: node,\n\t\tstart: node.start,\n\t\tend: node.end\n\t};\n\n\tlet d = node.declaration;\n\n\tif ( d.type === 'FunctionExpression' ) {\n\t\t// Case 1: `export default function () {...}`\n\t\tresult.hasDeclaration = true; // TODO remove in favour of result.type\n\t\tresult.type = 'anonFunction';\n\t}\n\n\telse if ( d.type === 'FunctionDeclaration' ) {\n\t\t// Case 2: `export default function foo () {...}`\n\t\tresult.hasDeclaration = true; // TODO remove in favour of result.type\n\t\tresult.type = 'namedFunction';\n\t\tresult.name = d.id.name;\n\t}\n\n\telse if ( d.type === 'ClassExpression' ) {\n\t\t// Case 3: `export default class {...}`\n\t\tresult.hasDeclaration = true; // TODO remove in favour of result.type\n\t\tresult.type = 'anonClass';\n\t}\n\n\telse if ( d.type === 'ClassDeclaration' ) {\n\t\t// Case 4: `export default class Foo {...}`\n\t\tresult.hasDeclaration = true; // TODO remove in favour of result.type\n\t\tresult.type = 'namedClass';\n\t\tresult.name = d.id.name;\n\t}\n\n\telse {\n\t\tresult.type = 'expression';\n\t\tresult.name = 'default';\n\t}\n\n\tresult.value = source.slice( d.start, d.end );\n\tresult.valueStart = d.start;\n\n\treturn result;\n}\n\n/**\n * Generates a representation of an export declaration\n * @param {object} node - the original AST node\n * @param {string} source - the original source code\n * @returns {object}\n */\nfunction processExport ( node, source ) {\n\tvar result, d;\n\n\tresult = {\n\t\tnode: node,\n\t\tstart: node.start,\n\t\tend: node.end\n\t};\n\n\tif ( d = node.declaration ) {\n\t\tresult.value = source.slice( d.start, d.end );\n\t\tresult.valueStart = d.start;\n\n\t\t// Case 1: `export var foo = 'bar'`\n\t\tif ( d.type === 'VariableDeclaration' ) {\n\t\t\tresult.hasDeclaration = true; // TODO remove in favour of result.type\n\t\t\tresult.type = 'varDeclaration';\n\t\t\tresult.name = d.declarations[0].id.name;\n\t\t}\n\n\t\t// Case 2: `export function foo () {...}`\n\t\telse if ( d.type === 'FunctionDeclaration' ) {\n\t\t\tresult.hasDeclaration = true; // TODO remove in favour of result.type\n\t\t\tresult.type = 'namedFunction';\n\t\t\tresult.name = d.id.name;\n\t\t}\n\n\t\t// Case 3: `export class Foo {...}`\n\t\telse if ( d.type === 'ClassDeclaration' ) {\n\t\t\tresult.hasDeclaration = true; // TODO remove in favour of result.type\n\t\t\tresult.type = 'namedClass';\n\t\t\tresult.name = d.id.name;\n\t\t}\n\t}\n\n\t// Case 9: `export { foo, bar };`\n\telse {\n\t\tresult.type = 'named';\n\t\tresult.specifiers = node.specifiers.map( s => {\n\t\t\treturn {\n\t\t\t\tname: s.local.name,\n\t\t\t\tas: s.exported.name\n\t\t\t};\n\t\t});\n\t}\n\n\treturn result;\n}\n","var hasOwnProp = Object.prototype.hasOwnProperty;\nexport default hasOwnProp;","import walk from './walk';\nimport hasOwnProp from 'utils/hasOwnProp';\n\nexport default function getUnscopedNames ( mod ) {\n\tvar unscoped = [], importedNames, scope;\n\n\tfunction imported ( name ) {\n\t\tif ( !importedNames ) {\n\t\t\timportedNames = {};\n\t\t\tmod.imports.forEach( i => {\n\t\t\t\t!i.passthrough && i.specifiers.forEach( s => {\n\t\t\t\t\timportedNames[ s.as ] = true;\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\treturn hasOwnProp.call( importedNames, name );\n\t}\n\n\twalk( mod.ast, {\n\t\tenter ( node ) {\n\t\t\t// we're only interested in references, not property names etc\n\t\t\tif ( node._skip ) return this.skip();\n\n\t\t\tif ( node._scope ) {\n\t\t\t\tscope = node._scope;\n\t\t\t}\n\n\t\t\tif ( node.type === 'Identifier' &&\n\t\t\t\t\t !scope.contains( node.name ) &&\n\t\t\t\t\t !imported( node.name ) &&\n\t\t\t\t\t !~unscoped.indexOf( node.name ) ) {\n\t\t\t\tunscoped.push( node.name );\n\t\t\t}\n\t\t},\n\n\t\tleave ( node ) {\n\t\t\tif ( node.type === 'Program' ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( node._scope ) {\n\t\t\t\tscope = scope.parent;\n\t\t\t}\n\t\t}\n\t});\n\n\treturn unscoped;\n}","import hasOwnProp from './hasOwnProp';\n\nexport default function disallowConflictingImports ( imports ) {\n\tlet usedNames = {};\n\n\timports.forEach( x => {\n\t\tif ( x.passthrough ) return;\n\n\t\tif ( x.as ) {\n\t\t\tcheckName( x.as );\n\t\t} else {\n\t\t\tx.specifiers.forEach( checkSpecifier );\n\t\t}\n\t});\n\n\tfunction checkSpecifier ( s ) {\n\t\tcheckName( s.as );\n\t}\n\n\tfunction checkName ( name ) {\n\t\tif ( hasOwnProp.call( usedNames, name ) ) {\n\t\t\tthrow new SyntaxError( `Duplicated import ('${name}')` );\n\t\t}\n\n\t\tusedNames[ name ] = true;\n\t}\n}\n","const RESERVED = 'break case class catch const continue debugger default delete do else export extends finally for function if import in instanceof let new return super switch this throw try typeof var void while with yield'.split( ' ' );\nconst INVALID_CHAR = /[^a-zA-Z0-9_$]/g;\nconst INVALID_LEADING_CHAR = /[^a-zA-Z_$]/;\n\n/**\n * Generates a sanitized (i.e. valid identifier) name from a module ID\n * @param {string} id - a module ID, or part thereof\n * @returns {string}\n */\nexport default function sanitize ( name ) {\n\tname = name.replace( INVALID_CHAR, '_' );\n\n\tif ( INVALID_LEADING_CHAR.test( name[0] ) || ~RESERVED.indexOf( name ) ) {\n\t\tname = `_${name}`;\n\t}\n\n\treturn name;\n}\n\nvar pathSplitRE = /\\/|\\\\/;\nexport function splitPath ( path ) {\n\treturn path.split( pathSplitRE );\n}\n","import acorn from 'acorn';\nimport MagicString from 'magic-string';\nimport annotateAst from 'utils/ast/annotate';\nimport findImportsAndExports from 'utils/ast/findImportsAndExports';\nimport getUnscopedNames from 'utils/ast/getUnscopedNames';\nimport disallowConflictingImports from '../utils/disallowConflictingImports';\nimport hasOwnProp from 'utils/hasOwnProp';\nimport { default as sanitize, splitPath } from 'utils/sanitize';\n\nconst SOURCEMAPPINGURL_REGEX = /^# sourceMappingURL=/;\n\nexport default function getStandaloneModule ( options ) {\n\tlet code, ast;\n\n\tif ( typeof options.source === 'object' ) {\n\t\tcode = options.source.code;\n\t\tast = options.source.ast;\n\t} else {\n\t\tcode = options.source;\n\t}\n\n\tlet toRemove = [];\n\n\tlet mod = {\n\t\tbody: new MagicString( code ),\n\t\tast: ast || ( acorn.parse( code, {\n\t\t\tecmaVersion: 6,\n\t\t\tsourceType: 'module',\n\t\t\tonComment ( block, text, start, end ) {\n\t\t\t\t// sourceMappingURL comments should be removed\n\t\t\t\tif ( !block && SOURCEMAPPINGURL_REGEX.test( text ) ) {\n\t\t\t\t\ttoRemove.push({ start, end });\n\t\t\t\t}\n\t\t\t}\n\t\t}))\n\t};\n\n\ttoRemove.forEach( ({ start, end }) => mod.body.remove( start, end ) );\n\n\tlet [ imports, exports ] = findImportsAndExports( mod, code, mod.ast );\n\n\tdisallowConflictingImports( imports );\n\n\tmod.imports = imports;\n\tmod.exports = exports;\n\n\tlet conflicts = {};\n\n\tif ( options.strict ) {\n\t\tannotateAst( mod.ast );\n\n\t\t// TODO there's probably an easier way to get this array\n\t\tObject.keys( mod.ast._declared ).concat( getUnscopedNames( mod ) ).forEach( n => {\n\t\t\tconflicts[n] = true;\n\t\t});\n\t}\n\n\tdetermineImportNames( imports, options.getModuleName, conflicts );\n\n\treturn mod;\n}\n\nfunction determineImportNames ( imports, userFn, usedNames ) {\n\tlet nameById = {};\n\tlet inferredNames = {};\n\n\timports.forEach( x => {\n\t\tlet moduleId = x.path;\n\t\tlet name;\n\n\t\tmoduleId = x.path;\n\n\t\t// use existing value\n\t\tif ( hasOwnProp.call( nameById, moduleId ) ) {\n\t\t\tx.name = nameById[ moduleId ];\n\t\t\treturn;\n\t\t}\n\n\t\t// if user supplied a function, defer to it\n\t\tif ( userFn && ( name = userFn( moduleId ) ) ) {\n\t\t\tname = sanitize( name );\n\n\t\t\tif ( hasOwnProp.call( usedNames, name ) ) {\n\t\t\t\t// TODO write a test for this\n\t\t\t\tthrow new Error( `Naming collision: module ${moduleId} cannot be called ${name}` );\n\t\t\t}\n\t\t}\n\n\t\telse {\n\t\t\tlet parts = splitPath( moduleId );\n\t\t\tlet i;\n\t\t\tlet prefix = '';\n\t\t\tlet candidate;\n\n\t\t\tdo {\n\t\t\t\ti = parts.length;\n\t\t\t\twhile ( i-- > 0 ) {\n\t\t\t\t\tcandidate = prefix + sanitize( parts.slice( i ).join( '__' ) );\n\n\t\t\t\t\tif ( !hasOwnProp.call( usedNames, candidate ) ) {\n\t\t\t\t\t\tname = candidate;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tprefix += '_';\n\t\t\t} while ( !name );\n\t\t}\n\n\t\tusedNames[ name ] = true;\n\t\tnameById[ moduleId ] = name;\n\n\t\tx.name = name;\n\t});\n\n\t// use inferred names for default imports, wherever they\n\t// don't clash with path-based names\n\timports.forEach( x => {\n\t\tif ( x.as && !hasOwnProp.call( usedNames, x.as ) ) {\n\t\t\tinferredNames[ x.path ] = x.as;\n\t\t}\n\t});\n\n\timports.forEach( x => {\n\t\tif ( hasOwnProp.call( inferredNames, x.path ) ) {\n\t\t\tx.name = inferredNames[ x.path ];\n\t\t}\n\t});\n}\n","import { splitPath } from 'utils/sanitize';\n\n/**\n * Resolves an importPath relative to the module that is importing it\n * @param {string} importPath - the (possibly relative) path of an imported module\n * @param {string} importerPath - the (relative to `base`) path of the importing module\n * @returns {string}\n */\nexport default function resolveId ( importPath, importerPath ) {\n\tvar resolved, importerParts, importParts;\n\n\tif ( importPath[0] !== '.' ) {\n\t\tresolved = importPath;\n\t} else {\n\t\timporterParts = splitPath( importerPath );\n\t\timportParts = splitPath( importPath );\n\n\t\tif ( importParts[0] === '.' ) {\n\t\t\timportParts.shift();\n\t\t}\n\n\t\timporterParts.pop(); // get dirname\n\t\twhile ( importParts[0] === '..' ) {\n\t\t\timportParts.shift();\n\t\t\timporterParts.pop();\n\t\t}\n\n\t\twhile ( importParts[0] === '.' ) {\n\t\t\timportParts.shift();\n\t\t}\n\n\t\tresolved = importerParts.concat( importParts ).join( '/' );\n\t}\n\n\treturn resolved;\n}\n\nexport function resolveAgainst ( importerPath ) {\n\treturn function ( importPath ) {\n\t\treturn resolveId( importPath, importerPath );\n\t};\n}\n","import hasOwnProp from 'utils/hasOwnProp';\nimport walk from 'utils/ast/walk';\n\nexport default function sortModules ( entry ) {\n\tlet seen = {};\n\tlet ordered = [];\n\tlet hasCycles;\n\n\tlet strongDeps = {};\n\tlet stronglyDependsOn = {};\n\n\tfunction visit ( mod ) {\n\t\tconst { id } = mod;\n\n\t\tseen[ id ] = true;\n\n\t\tstrongDeps[ id ] = [];\n\t\tstronglyDependsOn[ id ] = {};\n\n\t\tmod.imports.forEach( x => {\n\t\t\tconst imported = x.module;\n\n\t\t\tif ( imported.isExternal || imported.isSkipped ) return;\n\n\t\t\t// if `mod` references a binding from `imported` at the top\n\t\t\t// level (i.e. outside function bodies), we say that `mod`\n\t\t\t// strongly depends on `imported. If two modules depend on\n\t\t\t// each other, this helps us order them such that if a\n\t\t\t// strongly depends on b, and b weakly depends on a, b\n\t\t\t// goes first\n\t\t\tif ( referencesAtTopLevel( mod, imported ) ) {\n\t\t\t\tstrongDeps[ id ].push( imported );\n\t\t\t}\n\n\t\t\tif ( hasOwnProp.call( seen, imported.id ) ) {\n\t\t\t\t// we need to prevent an infinite loop, and note that\n\t\t\t\t// we need to check for strong/weak dependency relationships\n\t\t\t\thasCycles = true;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvisit( imported );\n\t\t});\n\n\t\t// add second (and third...) order dependencies\n\t\tfunction addStrongDependencies ( dependency ) {\n\t\t\tif ( hasOwnProp.call( stronglyDependsOn[ id ], dependency.id ) ) return;\n\n\t\t\tstronglyDependsOn[ id ][ dependency.id ] = true;\n\t\t\tstrongDeps[ dependency.id ].forEach( addStrongDependencies );\n\t\t}\n\n\t\tstrongDeps[ id ].forEach( addStrongDependencies );\n\n\t\tordered.push( mod );\n\t}\n\n\tvisit( entry );\n\n\tlet unordered;\n\n\tif ( hasCycles ) {\n\t\tunordered = ordered;\n\t\tordered = [];\n\n\t\t// unordered is actually semi-ordered, as [ fewer dependencies ... more dependencies ]\n\t\tunordered.forEach( x => {\n\t\t\t// ensure strong dependencies of x that don't strongly depend on x go first\n\t\t\tstrongDeps[ x.id ].forEach( place );\n\n\t\t\tfunction place ( dep ) {\n\t\t\t\tif ( !stronglyDependsOn[ dep.id ][ x.id ] && !~ordered.indexOf( dep ) ) {\n\t\t\t\t\tstrongDeps[ dep.id ].forEach( place );\n\t\t\t\t\tordered.push( dep );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( !~ordered.indexOf( x ) ) {\n\t\t\t\tordered.push( x );\n\t\t\t}\n\t\t});\n\t}\n\n\treturn ordered;\n}\n\nfunction referencesAtTopLevel ( a, b ) {\n\tlet bindings = [];\n\n\t// find out which bindings a imports from b\n\tlet i = a.imports.length;\n\twhile ( i-- ) {\n\t\tif ( a.imports[i].module === b ) {\n\t\t\tbindings.push.apply( bindings, a.imports[i].specifiers.map( x => x.as ) );\n\t\t}\n\t}\n\n\t// see if any of those bindings are referenced at the top level\n\tlet referencedAtTopLevel = false;\n\n\twalk( a.ast, {\n\t\tenter ( node ) {\n\t\t\tif ( /^Import/.test( node.type ) || ( node._scope && node._scope.parent ) ) {\n\t\t\t\treturn this.skip();\n\t\t\t}\n\n\t\t\tif ( node.type === 'Identifier' && ~bindings.indexOf( node.name ) ) {\n\t\t\t\treferencedAtTopLevel = true;\n\t\t\t\tthis.abort();\n\t\t\t}\n\t\t}\n\t});\n\n\treturn referencedAtTopLevel;\n}","import hasOwnProp from 'utils/hasOwnProp';\n\nexport default function resolveChains ( modules, moduleLookup ) {\n\tvar chains = {};\n\n\t// First pass - resolving intra-module chains\n\tmodules.forEach( mod => {\n\t\tvar origin = {};\n\n\t\tmod.imports.forEach( x => {\n\t\t\tconst imported = x.module;\n\n\t\t\tx.specifiers.forEach( s => {\n\t\t\t\tif ( s.isBatch ) {\n\t\t\t\t\t// tell that module that it needs to export an object full of getters\n\t\t\t\t\timported._exportsNamespace = true;\n\t\t\t\t\treturn; // TODO can batch imports be chained?\n\t\t\t\t}\n\n\t\t\t\torigin[ s.as ] = `${s.name}@${imported.id}`;\n\t\t\t});\n\t\t});\n\n\t\tmod.exports.forEach( x => {\n\t\t\tif ( !x.specifiers ) return;\n\n\t\t\tx.specifiers.forEach( s => {\n\t\t\t\tif ( hasOwnProp.call( origin, s.name ) ) {\n\t\t\t\t\tchains[ `${s.name}@${mod.id}` ] = origin[ s.name ];\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t});\n\n\t// Second pass - assigning origins to specifiers\n\tmodules.forEach( mod => {\n\t\tmod.imports.forEach( x => {\n\t\t\tconst imported = x.module;\n\n\t\t\tx.specifiers.forEach( s => {\n\t\t\t\tif ( s.isBatch ) {\n\t\t\t\t\treturn; // TODO can batch imports be chained?\n\t\t\t\t}\n\n\t\t\t\tsetOrigin( s, `${s.name}@${imported.id}`, chains, moduleLookup );\n\t\t\t});\n\t\t});\n\n\t\tmod.exports.forEach( x => {\n\t\t\tif ( !x.specifiers ) return;\n\n\t\t\tx.specifiers.forEach( s => {\n\t\t\t\tsetOrigin( s, `${s.name}@${mod.id}`, chains, moduleLookup );\n\t\t\t});\n\t\t});\n\t});\n}\n\nfunction setOrigin ( specifier, hash, chains, moduleLookup ) {\n\tlet isChained;\n\n\twhile ( hasOwnProp.call( chains, hash ) ) {\n\t\thash = chains[ hash ];\n\t\tisChained = true;\n\t}\n\n\tif ( isChained ) {\n\t\tconst [ name, moduleId ] = hash.split( '@' );\n\t\tspecifier.origin = { module: moduleLookup[ moduleId ], name };\n\t}\n}\n","// from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\n// we add `exports` to this list, to avoid conflicts\nexport default 'Array ArrayBuffer DataView Date Error EvalError Float32Array Float64Array Function Generator GeneratorFunction Infinity Int16Array Int32Array Int8Array InternalError Intl Iterator JSON Map Math NaN Number Object ParallelArray Promise Proxy RangeError ReferenceError Reflect RegExp Set StopIteration String Symbol SyntaxError TypeError TypedArray URIError Uint16Array Uint32Array Uint8Array Uint8ClampedArray WeakMap WeakSet decodeURI decodeURIComponent encodeURI encodeURIComponent escape eval exports isFinite isNaN null parseFloat parseInt undefined unescape uneval'.split( ' ' );","import hasOwnProp from 'utils/hasOwnProp';\nimport builtins from 'utils/builtins';\nimport { default as sanitize, splitPath } from 'utils/sanitize';\n\nexport default function getUniqueNames ( bundle ) {\n\tlet { modules, externalModules } = bundle;\n\tlet userNames = bundle.names;\n\tlet names = {};\n\n\tlet used = modules.reduce( ( declared, mod ) => {\n\t\tObject.keys( mod.ast._declared ).forEach( x => declared[x] = true );\n\t\treturn declared;\n\t}, {} );\n\n\t// copy builtins\n\tbuiltins.forEach( n => used[n] = true );\n\n\t// copy user-specified names\n\tif ( userNames ) {\n\t\tObject.keys( userNames ).forEach( id => {\n\t\t\tnames[ id ] = userNames[ id ];\n\t\t\tused[ userNames[ id ] ] = true;\n\t\t});\n\t}\n\n\t// infer names from default imports - e.g. with `import _ from './utils'`,\n\t// use '_' instead of generating a name from 'utils'\n\tfunction inferName ( x ) {\n\t\tif ( x.isDefault && !hasOwnProp.call( names, x.module.id ) && !hasOwnProp.call( used, x.as ) ) {\n\t\t\tnames[ x.module.id ] = x.as;\n\t\t\tused[ x.as ] = true;\n\t\t}\n\t}\n\tmodules.forEach( mod => {\n\t\tmod.imports.forEach( inferName );\n\t});\n\n\t// for the rest, make names as compact as possible without\n\t// introducing conflicts\n\tmodules.concat( externalModules ).forEach( mod => {\n\t\t// is this already named?\n\t\tif ( hasOwnProp.call( names, mod.id ) ) {\n\t\t\tmod.name = names[ mod.id ];\n\t\t\treturn;\n\t\t}\n\n\t\tlet name;\n\t\tlet parts = splitPath( mod.id );\n\t\tlet i = parts.length;\n\n\t\twhile ( i-- ) {\n\t\t\tname = sanitize( parts.slice( i ).join( '_' ) );\n\n\t\t\tif ( !hasOwnProp.call( used, name ) ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\twhile ( hasOwnProp.call( used, name ) ) {\n\t\t\tname = '_' + name;\n\t\t}\n\n\t\tused[ name ] = true;\n\t\tmod.name = name;\n\t});\n\n\treturn names;\n}\n","export default function populateExternalModuleImports ( bundle ) {\n\tbundle.modules.forEach( mod => {\n\t\tmod.imports.forEach( x => {\n\t\t\tconst externalModule = x.module;\n\n\t\t\tif ( !externalModule.isExternal ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tx.specifiers.forEach( s => {\n\t\t\t\tif ( s.isDefault ) {\n\t\t\t\t\texternalModule.needsDefault = true;\n\t\t\t\t} else {\n\t\t\t\t\texternalModule.needsNamed = true;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t});\n}","export default function getRenamedImports ( mod ) {\n\tvar renamed = [];\n\n\tmod.imports.forEach( x => {\n\t\tif ( x.specifiers ) {\n\t\t\tx.specifiers.forEach( s => {\n\t\t\t\tif ( s.name !== s.as && !~renamed.indexOf( s.name ) ) {\n\t\t\t\t\trenamed.push( s.name );\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n\n\treturn renamed;\n}","import hasOwnProp from 'utils/hasOwnProp';\nimport builtins from 'utils/builtins';\nimport getUnscopedNames from 'utils/ast/getUnscopedNames';\nimport { getName } from 'utils/mappers';\nimport getRenamedImports from './getRenamedImports';\n\nexport default function topLevelScopeConflicts ( bundle ) {\n\tlet conflicts = {};\n\tlet inBundle = {};\n\tlet importNames = bundle.externalModules.map( getName );\n\n\tbundle.modules.forEach( mod => {\n\t\tlet names = builtins\n\n\t\t\t// all top defined identifiers are in top scope\n\t\t\t.concat( mod.ast._topLevelNames )\n\n\t\t\t// all unattributed identifiers could collide with top scope\n\t\t\t.concat( getUnscopedNames( mod ) )\n\n\t\t\t.concat( importNames )\n\n\t\t\t.concat( getRenamedImports( mod ) );\n\n\t\tif ( mod._exportsNamespace ) {\n\t\t\tconflicts[ mod.name ] = true;\n\t\t}\n\n\t\t// merge this module's top scope with bundle top scope\n\t\tnames.forEach( name => {\n\t\t\tif ( hasOwnProp.call( inBundle, name ) ) {\n\t\t\t\tconflicts[ name ] = true;\n\t\t\t} else {\n\t\t\t\tinBundle[ name ] = true;\n\t\t\t}\n\t\t});\n\t});\n\n\treturn conflicts;\n}","import hasOwnProp from 'utils/hasOwnProp';\nimport topLevelScopeConflicts from './topLevelScopeConflicts';\n\n/**\n * Figures out which identifiers need to be rewritten within\n   a bundle to avoid conflicts\n * @param {object} bundle - the bundle\n * @returns {object}\n */\nexport default function populateIdentifierReplacements ( bundle ) {\n\t// first, discover conflicts\n\tlet conflicts = topLevelScopeConflicts( bundle );\n\n\t// then figure out what identifiers need to be created\n\t// for default exports\n\tbundle.modules.forEach( mod => {\n\t\tlet x = mod.defaultExport;\n\n\t\tif ( x ) {\n\t\t\tlet result;\n\n\t\t\tif ( x.hasDeclaration && x.name ) {\n\t\t\t\tresult = hasOwnProp.call( conflicts, x.name ) || otherModulesDeclare( mod, x.name ) ?\n\t\t\t\t\t`${mod.name}__${x.name}` :\n\t\t\t\t\tx.name;\n\t\t\t} else {\n\t\t\t\tresult = hasOwnProp.call( conflicts, mod.name ) || ( x.value !== mod.name && ~mod.ast._topLevelNames.indexOf( mod.name )) || otherModulesDeclare( mod, mod.name ) ?\n\t\t\t\t\t`${mod.name}__default` :\n\t\t\t\t\tmod.name;\n\t\t\t}\n\n\t\t\tmod.identifierReplacements.default = result;\n\t\t}\n\t});\n\n\t// then determine which existing identifiers\n\t// need to be replaced\n\tbundle.modules.forEach( mod => {\n\t\tlet moduleIdentifiers = mod.identifierReplacements;\n\n\t\tmod.ast._topLevelNames.forEach( n => {\n\t\t\tmoduleIdentifiers[n] = hasOwnProp.call( conflicts, n ) ?\n\t\t\t\t`${mod.name}__${n}` :\n\t\t\t\tn;\n\t\t});\n\n\t\tmod.imports.forEach( x => {\n\t\t\tif ( x.passthrough ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst imported = x.module;\n\n\t\t\tx.specifiers.forEach( s => {\n\t\t\t\tlet replacement;\n\n\t\t\t\tif ( s.isBatch ) {\n\t\t\t\t\treplacement = x.module.name;\n\t\t\t\t}\n\n\t\t\t\telse {\n\t\t\t\t\tlet mod;\n\t\t\t\t\tlet specifierName;\n\n\t\t\t\t\tif ( s.origin ) {\n\t\t\t\t\t\t// chained bindings\n\t\t\t\t\t\tmod = s.origin.module;\n\t\t\t\t\t\tspecifierName = s.origin.name;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmod = imported;\n\t\t\t\t\t\tspecifierName = s.name;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst moduleName = mod && mod.name;\n\n\t\t\t\t\tif ( specifierName === 'default' ) {\n\t\t\t\t\t\t// if it's an external module, always use __default if the\n\t\t\t\t\t\t// bundle also uses named imports\n\t\t\t\t\t\tif ( imported.isExternal ) {\n\t\t\t\t\t\t\treplacement = imported.needsNamed ? `${moduleName}__default` : moduleName;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// TODO We currently need to check for the existence of `mod`, because modules\n\t\t\t\t\t\t// can be skipped. Would be better to replace skipped modules with dummies\n\t\t\t\t\t\t// - see https://github.com/Rich-Harris/esperanto/issues/32\n\t\t\t\t\t\telse if ( mod && !mod.isSkipped ) {\n\t\t\t\t\t\t\treplacement = mod.identifierReplacements.default;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if ( !imported.isExternal ) {\n\t\t\t\t\t\treplacement = hasOwnProp.call( conflicts, specifierName ) ?\n\t\t\t\t\t\t\t`${moduleName}__${specifierName}` :\n\t\t\t\t\t\t\tspecifierName;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treplacement = moduleName + '.' + specifierName;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( replacement !== s.as ) {\n\t\t\t\t\tmoduleIdentifiers[ s.as ] = replacement;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t});\n\n\tfunction otherModulesDeclare ( mod, replacement ) {\n\t\tvar i, otherMod;\n\n\t\ti = bundle.modules.length;\n\t\twhile ( i-- ) {\n\t\t\totherMod = bundle.modules[i];\n\n\t\t\tif ( mod === otherMod ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ( hasOwnProp.call( otherMod.ast._declared, replacement ) ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n}\n","export default function resolveExports ( bundle ) {\n\tlet bundleExports = {};\n\n\tbundle.entryModule.exports.forEach( x => {\n\t\tif ( x.specifiers ) {\n\t\t\tx.specifiers.forEach( s => {\n\t\t\t\tlet module;\n\t\t\t\tlet name;\n\n\t\t\t\tif ( s.origin ) {\n\t\t\t\t\tmodule = s.origin.module;\n\t\t\t\t\tname = s.origin.name;\n\t\t\t\t} else {\n\t\t\t\t\tmodule = bundle.entryModule;\n\t\t\t\t\tname = s.name;\n\t\t\t\t}\n\n\t\t\t\taddExport( module, name, s.name );\n\t\t\t});\n\t\t}\n\n\t\telse if ( !x.isDefault && x.name ) {\n\t\t\taddExport( bundle.entryModule, x.name, x.name );\n\t\t}\n\t});\n\n\tfunction addExport ( module, name, as ) {\n\t\tif ( !bundleExports[ module.id ] ) {\n\t\t\tbundleExports[ module.id ] = {};\n\t\t}\n\n\t\tbundleExports[ module.id ][ name ] = as;\n\t}\n\n\treturn bundleExports;\n}","/**\n * Scans an array of imports, and determines which identifiers\n   are readonly, and which cannot be assigned to. For example\n   you cannot `import foo from 'foo'` then do `foo = 42`, nor\n   can you `import * as foo from 'foo'` then do `foo.answer = 42`\n * @param {array} imports - the array of imports\n * @returns {array} [ importedBindings, importedNamespaces ]\n */\nexport default function getReadOnlyIdentifiers ( imports ) {\n\tvar importedBindings = {}, importedNamespaces = {};\n\n\timports.forEach( x => {\n\t\tif ( x.passthrough ) return;\n\n\t\tx.specifiers.forEach( s => {\n\t\t\tif ( s.isBatch ) {\n\t\t\t\timportedNamespaces[ s.as ] = true;\n\t\t\t} else {\n\t\t\t\timportedBindings[ s.as ] = true;\n\t\t\t}\n\t\t});\n\t});\n\n\treturn [ importedBindings, importedNamespaces ];\n}","import hasOwnProp from 'utils/hasOwnProp';\n\nvar bindingMessage = 'Cannot reassign imported binding ',\n\tnamespaceMessage = 'Cannot reassign imported binding of namespace ';\n\nexport default function disallowIllegalReassignment ( node, importedBindings, importedNamespaces, scope ) {\n\tlet assignee, isNamespaceAssignment;\n\n\tif ( node.type === 'AssignmentExpression' ) {\n\t\tassignee = node.left;\n\t} else if ( node.type === 'UpdateExpression' ) {\n\t\tassignee = node.argument;\n\t} else {\n\t\treturn; // not an assignment\n\t}\n\n\tif ( assignee.type === 'MemberExpression' ) {\n\t\tassignee = assignee.object;\n\t\tisNamespaceAssignment = true;\n\t}\n\n\tif ( assignee.type !== 'Identifier' ) {\n\t\treturn; // not assigning to a binding\n\t}\n\n\tlet name = assignee.name;\n\n\tif ( hasOwnProp.call( isNamespaceAssignment ? importedNamespaces : importedBindings, name ) && !scope.contains( name ) ) {\n\t\tthrow new Error( ( isNamespaceAssignment ? namespaceMessage : bindingMessage ) + '`' + name + '`' );\n\t}\n}\n","import hasOwnProp from 'utils/hasOwnProp';\n\nexport default function replaceIdentifiers ( body, node, identifierReplacements, scope ) {\n\tlet name = node.name;\n\tlet replacement = hasOwnProp.call( identifierReplacements, name ) && identifierReplacements[ name ];\n\n\t// TODO unchanged identifiers shouldn't have got this far -\n\t// remove the `replacement !== name` safeguard once that's the case\n\tif ( replacement && replacement !== name && !scope.contains( name, true ) ) {\n\t\t// rewrite\n\t\tbody.replace( node.start, node.end, replacement );\n\t}\n}\n","import hasOwnProp from 'utils/hasOwnProp';\n\nexport default function rewriteExportAssignments ( body, node, parent, exports, scope, capturedUpdates ) {\n\tlet assignee;\n\n\tif ( node.type === 'AssignmentExpression' ) {\n\t\tassignee = node.left;\n\t} else if ( node.type === 'UpdateExpression' ) {\n\t\tassignee = node.argument;\n\t} else {\n\t\treturn; // not an assignment\n\t}\n\n\tif ( assignee.type !== 'Identifier' ) {\n\t\treturn;\n\t}\n\n\tlet name = assignee.name;\n\n\tif ( scope.contains( name, true ) ) {\n\t\treturn; // shadows an export\n\t}\n\n\tif ( exports && hasOwnProp.call( exports, name ) ) {\n\t\tlet exportAs = exports[ name ];\n\n\t\tif ( !!capturedUpdates ) {\n\t\t\tcapturedUpdates.push({ name, exportAs });\n\t\t\treturn;\n\t\t}\n\n\t\t// special case - increment/decrement operators\n\t\tif ( node.operator === '++' || node.operator === '--' ) {\n\t\t\tlet prefix = ``;\n\t\t\tlet suffix = `, exports.${exportAs} = ${name}`;\n\t\t\tif ( parent.type !== 'ExpressionStatement' ) {\n\t\t\t\tif ( !node.prefix ) {\n\t\t\t\t\tsuffix += `, ${name} ${node.operator === '++' ? '-' : '+'} 1`;\n\t\t\t\t}\n\t\t\t\tprefix += `( `;\n\t\t\t\tsuffix += ` )`;\n\t\t\t}\n\t\t\tbody.insert( node.start, prefix );\n\t\t\tbody.insert( node.end, suffix );\n\t\t} else {\n\t\t\tbody.insert( node.start, `exports.${exportAs} = ` );\n\t\t}\n\t}\n}","import walk from './walk';\nimport disallowIllegalReassignment from './disallowIllegalReassignment';\nimport replaceIdentifiers from './replaceIdentifiers';\nimport rewriteExportAssignments from './rewriteExportAssignments';\n\nexport default function traverseAst ( ast, body, identifierReplacements, importedBindings, importedNamespaces, exportNames ) {\n\tlet scope = ast._scope;\n\tlet blockScope = ast._blockScope;\n\tlet capturedUpdates = null;\n\tlet previousCapturedUpdates = null;\n\n\twalk( ast, {\n\t\tenter ( node, parent ) {\n\t\t\t// we're only interested in references, not property names etc\n\t\t\tif ( node._skip ) return this.skip();\n\n\t\t\tif ( node._scope ) {\n\t\t\t\tscope = node._scope;\n\t\t\t} else if ( node._blockScope ) {\n\t\t\t\tblockScope = node._blockScope;\n\t\t\t}\n\n\t\t\t// Special case: if you have a variable declaration that updates existing\n\t\t\t// bindings as a side-effect, e.g. `var a = b++`, where `b` is an exported\n\t\t\t// value, we can't simply append `exports.b = b` to the update (as we\n\t\t\t// normally would) because that would be syntactically invalid. Instead,\n\t\t\t// we capture the change and update the export (and any others) after the\n\t\t\t// variable declaration\n\t\t\tif ( node.type === 'VariableDeclaration' ) {\n\t\t\t\tpreviousCapturedUpdates = capturedUpdates;\n\t\t\t\tcapturedUpdates = [];\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdisallowIllegalReassignment( node, importedBindings, importedNamespaces, scope );\n\n\t\t\t// Rewrite assignments to exports inside functions, to keep bindings live.\n\t\t\t// This call may mutate `capturedUpdates`, which is used elsewhere\n\t\t\tif ( scope !== ast._scope ) {\n\t\t\t\trewriteExportAssignments( body, node, parent, exportNames, scope, capturedUpdates );\n\t\t\t}\n\n\t\t\tif ( node.type === 'Identifier' && parent.type !== 'FunctionExpression' ) {\n\t\t\t\treplaceIdentifiers( body, node, identifierReplacements, scope );\n\t\t\t}\n\n\t\t\t// Replace top-level this with undefined ES6 8.1.1.5.4\n\t\t\tif ( node.type === 'ThisExpression' && node._topLevel ) {\n\t\t\t\tbody.replace( node.start, node.end, 'undefined' );\n\t\t\t}\n\t\t},\n\n\t\tleave ( node ) {\n\t\t\t// Special case - see above\n\t\t\tif ( node.type === 'VariableDeclaration' ) {\n\t\t\t\tif ( capturedUpdates.length ) {\n\t\t\t\t\tbody.insert( node.end, capturedUpdates.map( exportCapturedUpdate ).join( '' ) );\n\t\t\t\t}\n\n\t\t\t\tcapturedUpdates = previousCapturedUpdates;\n\t\t\t}\n\n\t\t\tif ( node._scope ) {\n\t\t\t\tscope = scope.parent;\n\t\t\t} else if ( node._blockScope ) {\n\t\t\t\tblockScope = blockScope.parent;\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction exportCapturedUpdate ( c ) {\n\treturn ` exports.${c.exportAs} = ${c.name};`;\n}\n","import hasOwnProp from 'utils/hasOwnProp';\nimport getReadOnlyIdentifiers from 'utils/getReadOnlyIdentifiers';\nimport traverseAst from 'utils/ast/traverse';\n\nexport default function transformBody ( bundle, mod, body ) {\n\tlet identifierReplacements = mod.identifierReplacements;\n\tlet [ importedBindings, importedNamespaces ] = getReadOnlyIdentifiers( mod.imports );\n\n\tlet exportNames = hasOwnProp.call( bundle.exports, mod.id ) && bundle.exports[ mod.id ];\n\n\ttraverseAst( mod.ast, body, identifierReplacements, importedBindings, importedNamespaces, exportNames );\n\n\t// Remove import statements\n\tmod.imports.forEach( x => {\n\t\tif ( !x.passthrough ) {\n\t\t\tbody.remove( x.start, x.next );\n\t\t}\n\t});\n\n\tlet shouldExportEarly = {};\n\n\t// Remove export statements\n\tmod.exports.forEach( x => {\n\t\tvar name;\n\n\t\tif ( x.isDefault ) {\n\t\t\tif ( x.type === 'namedFunction' || x.type === 'namedClass' ) {\n\t\t\t\t// if you have a default export like\n\t\t\t\t//\n\t\t\t\t//     export default function foo () {...}\n\t\t\t\t//\n\t\t\t\t// you need to rewrite it as\n\t\t\t\t//\n\t\t\t\t//     function foo () {...}\n\t\t\t\t//     exports.default = foo;\n\t\t\t\t//\n\t\t\t\t// as the `foo` reference may be used elsewhere\n\n\t\t\t\t// remove the `export default `, keep the rest\n\t\t\t\tbody.remove( x.start, x.valueStart );\n\t\t\t}\n\n\t\t\telse if ( x.node.declaration && ( name = x.node.declaration.name ) ) {\n\t\t\t\tif ( name === identifierReplacements.default ) {\n\t\t\t\t\tbody.remove( x.start, x.end );\n\t\t\t\t} else {\n\t\t\t\t\tlet original = hasOwnProp.call( identifierReplacements, name ) ? identifierReplacements[ name ] : name;\n\t\t\t\t\tbody.replace( x.start, x.end, `var ${identifierReplacements.default} = ${original};` );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\telse {\n\t\t\t\tbody.replace( x.start, x.valueStart, `var ${identifierReplacements.default} = ` );\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tif ( x.hasDeclaration ) {\n\t\t\tif ( x.type === 'namedFunction' ) {\n\t\t\t\tshouldExportEarly[ x.name ] = true; // TODO what about `function foo () {}; export { foo }`?\n\t\t\t}\n\n\t\t\tbody.remove( x.start, x.valueStart );\n\t\t} else {\n\t\t\tbody.remove( x.start, x.next );\n\t\t}\n\t});\n\n\t// If this module exports a namespace - i.e. another module does\n\t// `import * from 'foo'` - then we need to make all this module's\n\t// exports available, using Object.defineProperty\n\tvar indentStr = body.getIndentString();\n\tif ( mod._exportsNamespace ) {\n\t\tlet namespaceExportBlock = `var ${mod.name} = {\\n`,\n\t\t\tnamespaceExports = [];\n\n\t\tmod.exports.forEach( x => {\n\t\t\tif ( x.hasDeclaration ) {\n\t\t\t\tnamespaceExports.push( indentStr + `get ${x.name} () { return ${identifierReplacements[x.name]}; }` );\n\t\t\t}\n\n\t\t\telse if ( x.isDefault ) {\n\t\t\t\tnamespaceExports.push( indentStr + `get default () { return ${identifierReplacements.default}; }` );\n\t\t\t}\n\n\t\t\telse {\n\t\t\t\tx.specifiers.forEach( s => {\n\t\t\t\t\tnamespaceExports.push( indentStr + `get ${s.name} () { return ${s.name}; }` );\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tnamespaceExportBlock += namespaceExports.join( ',\\n' ) + '\\n};\\n\\n';\n\n\t\tbody.prepend( namespaceExportBlock );\n\t}\n\n\t// If this module is responsible for one of the bundle's exports\n\t// (it doesn't have to be the entry module, which could re-export\n\t// a binding from another module), we write exports here\n\tif ( exportNames ) {\n\t\tlet exportBlock = [];\n\n\t\tObject.keys( exportNames ).forEach( name => {\n\t\t\tvar exportAs = exportNames[ name ];\n\t\t\texportBlock.push( `exports.${exportAs} = ${identifierReplacements[name]};` );\n\t\t});\n\n\t\tif ( exportBlock.length ) {\n\t\t\tbody.trim().append( '\\n\\n' + exportBlock.join( '\\n' ) );\n\t\t}\n\t}\n\n\treturn body.trim();\n}\n","import MagicString from 'magic-string';\nimport populateModuleNames from './populateModuleNames';\nimport populateExternalModuleImports from './populateExternalModuleImports';\nimport populateIdentifierReplacements from './populateIdentifierReplacements';\nimport resolveExports from './resolveExports';\nimport transformBody from './transformBody';\n\nexport default function combine ( bundle ) {\n\tbundle.body = new MagicString.Bundle({\n\t\tseparator: '\\n\\n'\n\t});\n\n\t// give each module in the bundle a unique name\n\tpopulateModuleNames( bundle );\n\n\t// determine which specifiers are imported from\n\t// external modules\n\tpopulateExternalModuleImports( bundle );\n\n\t// determine which identifiers need to be replaced\n\t// inside this bundle\n\tpopulateIdentifierReplacements( bundle );\n\n\tbundle.exports = resolveExports( bundle );\n\n\tbundle.modules.forEach( mod => {\n\t\t// verify that this module doesn't import non-exported identifiers\n\t\tmod.imports.forEach( x => {\n\t\t\tconst imported = x.module;\n\n\t\t\tif ( imported.isExternal || imported.isSkipped || x.isBatch ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tx.specifiers.forEach( s => {\n\t\t\t\tif ( !imported.doesExport[ s.name ] ) {\n\t\t\t\t\tthrow new Error( `Module '${imported.id}' does not export '${s.name}' (imported by '${mod.id}')` );\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tbundle.body.addSource({\n\t\t\tfilename: mod.path,\n\t\t\tcontent: transformBody( bundle, mod, mod.body ),\n\t\t\tindentExclusionRanges: mod.ast._templateLiteralRanges\n\t\t});\n\t});\n}\n","import acorn from 'acorn';\nimport MagicString from 'magic-string';\nimport findImportsAndExports from 'utils/ast/findImportsAndExports';\nimport annotateAst from 'utils/ast/annotate';\nimport disallowConflictingImports from '../utils/disallowConflictingImports';\n\nexport default function getModule ( mod ) {\n\tmod.body = new MagicString( mod.code );\n\n\tlet toRemove = [];\n\n\ttry {\n\t\tmod.ast = mod.ast || ( acorn.parse( mod.code, {\n\t\t\tecmaVersion: 6,\n\t\t\tsourceType: 'module',\n\t\t\tonComment ( block, text, start, end ) {\n\t\t\t\t// sourceMappingURL comments should be removed\n\t\t\t\tif ( !block && /^# sourceMappingURL=/.test( text ) ) {\n\t\t\t\t\ttoRemove.push({ start, end });\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\ttoRemove.forEach( ({ start, end }) => mod.body.remove( start, end ) );\n\t\tannotateAst( mod.ast );\n\t} catch ( err ) {\n\t\t// If there's a parse error, attach file info\n\t\t// before throwing the error\n\t\tif ( err.loc ) {\n\t\t\terr.file = mod.path;\n\t\t}\n\n\t\tthrow err;\n\t}\n\n\tlet [ imports, exports ] = findImportsAndExports( mod, mod.code, mod.ast );\n\n\tdisallowConflictingImports( imports );\n\n\tmod.imports = imports;\n\tmod.exports = exports;\n\n\t// identifiers to replace within this module\n\t// (gets filled in later, once bundle is combined)\n\tmod.identifierReplacements = {};\n\n\t// collect exports by name, for quick lookup when verifying\n\t// that this module exports a given identifier\n\tmod.doesExport = {};\n\n\texports.forEach( x => {\n\t\tif ( x.isDefault ) {\n\t\t\tmod.doesExport.default = true;\n\t\t}\n\n\t\telse if ( x.name ) {\n\t\t\tmod.doesExport[ x.name ] = true;\n\t\t}\n\n\t\telse if ( x.specifiers ) {\n\t\t\tx.specifiers.forEach( s => {\n\t\t\t\tmod.doesExport[ s.name ] = true;\n\t\t\t});\n\t\t}\n\n\t\telse {\n\t\t\tthrow new Error( 'Unexpected export type' );\n\t\t}\n\t});\n\n\treturn mod;\n}\n","import path from 'path';\nimport hasOwnProp from 'utils/hasOwnProp';\nimport resolveId from 'utils/resolveId';\nimport sortModules from './utils/sortModules';\nimport resolveChains from './utils/resolveChains';\nimport combine from './combine';\nimport sander from 'sander';\nimport getModule from './getModule';\n\nconst Promise = sander.Promise;\n\nexport default function getBundle ( options ) {\n\tlet entry = options.entry.replace( /\\.js$/, '' );\n\tlet userModules = options.modules || {};\n\tlet modules = [];\n\tlet moduleLookup = {};\n\tlet promiseByPath = {};\n\tlet skip = options.skip;\n\tlet names = options.names;\n\tlet base = ( options.base ? path.resolve( options.base ) : process.cwd() ) + '/';\n\tlet externalModules = [];\n\tlet externalModuleLookup = {};\n\n\tif ( !entry.indexOf( base ) ) {\n\t\tentry = entry.substring( base.length );\n\t}\n\n\t// resolve user module paths\n\toptions.modules && Object.keys( options.modules ).forEach( relativePath => {\n\t\tuserModules[ path.resolve( base, relativePath ) ] = options.modules[ relativePath ];\n\t});\n\n\tlet cyclicalModules = [];\n\n\treturn resolvePath( base, userModules, entry, null ).then( absolutePath => {\n\t\treturn fetchModule( entry, absolutePath ).then( entryModule => {\n\t\t\treturn Promise.all( cyclicalModules ).then( () => {\n\t\t\t\tmodules = sortModules( entryModule );\n\n\t\t\t\tlet bundle = {\n\t\t\t\t\tentryModule,\n\t\t\t\t\tmodules,\n\t\t\t\t\texternalModules,\n\t\t\t\t\tnames\n\t\t\t\t};\n\n\t\t\t\tresolveChains( modules, moduleLookup );\n\t\t\t\tcombine( bundle );\n\n\t\t\t\treturn bundle;\n\t\t\t});\n\n\t\t});\n\t}, function ( err ) {\n\t\tif ( err.code === 'ENOENT' ) {\n\t\t\tthrow new Error( 'Could not find entry module (' + entry + ')' );\n\t\t}\n\n\t\tthrow err;\n\t});\n\n\tfunction fetchModule ( moduleId, absolutePath ) {\n\t\tif ( !hasOwnProp.call( promiseByPath, absolutePath ) ) {\n\t\t\tpromiseByPath[ absolutePath ] = (\n\t\t\t\thasOwnProp.call( userModules, absolutePath ) ?\n\t\t\t\t\tPromise.resolve( userModules[ absolutePath ] ) :\n\t\t\t\t\tsander.readFile( absolutePath ).then( String )\n\t\t\t).then( function ( source ) {\n\t\t\t\tlet code, ast;\n\n\t\t\t\t// normalise\n\t\t\t\tif ( typeof source === 'object' ) {\n\t\t\t\t\tcode = source.code;\n\t\t\t\t\tast = source.ast;\n\t\t\t\t} else {\n\t\t\t\t\tcode = source;\n\t\t\t\t\tast = null;\n\t\t\t\t}\n\n\t\t\t\tif ( options.transform ) {\n\t\t\t\t\tcode = options.transform( code, absolutePath );\n\n\t\t\t\t\tif ( typeof code !== 'string' && !isThenable( code ) ) {\n\t\t\t\t\t\tthrow new Error( 'transform should return String or Promise' );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet module = getModule({\n\t\t\t\t\tid: moduleId,\n\t\t\t\t\tpath: absolutePath,\n\t\t\t\t\tcode,\n\t\t\t\t\tast,\n\n\t\t\t\t\t// TODO should not need this\n\t\t\t\t\trelativePath: path.relative( base, absolutePath )\n\t\t\t\t});\n\n\t\t\t\tmodules.push( module );\n\t\t\t\tmoduleLookup[ moduleId ] = module;\n\n\t\t\t\tlet promises = module.imports.map( x => {\n\t\t\t\t\t// TODO remove this, use x.module instead. more flexible, no lookups involved\n\t\t\t\t\tconst id = resolveId( x.path, module.relativePath );\n\n\t\t\t\t\tif ( id === moduleId ) {\n\t\t\t\t\t\tthrow new Error( 'A module (' + moduleId + ') cannot import itself' );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Some modules can be skipped\n\t\t\t\t\tif ( skip && ~skip.indexOf( id ) ) {\n\t\t\t\t\t\tconst skippedModule = {\n\t\t\t\t\t\t\tid,\n\t\t\t\t\t\t\tisSkipped: true\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tx.module = skippedModule;\n\t\t\t\t\t\treturn skippedModule;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn resolvePath( base, userModules, id, absolutePath, options.resolvePath ).then( absolutePath => {\n\t\t\t\t\t\tlet promise = hasOwnProp.call( promiseByPath, absolutePath ) && promiseByPath[ absolutePath ];\n\t\t\t\t\t\tlet cyclical = !!promise;\n\n\t\t\t\t\t\tif ( cyclical ) {\n\t\t\t\t\t\t\t// ensure all modules are set before we\n\t\t\t\t\t\t\t// create the bundle...\n\t\t\t\t\t\t\tcyclicalModules.push(\n\t\t\t\t\t\t\t\tpromise.then( module => x.module = module )\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// ...then short-circuit\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn fetchModule( id, absolutePath ).then( module => x.module = module );\n\t\t\t\t\t}, function handleError ( err ) {\n\t\t\t\t\t\tif ( err.code === 'ENOENT' ) {\n\t\t\t\t\t\t\t// Most likely an external module\n\t\t\t\t\t\t\tlet externalModule = hasOwnProp.call( externalModuleLookup, id ) && externalModuleLookup[ id ];\n\n\t\t\t\t\t\t\tif ( !externalModule ) {\n\t\t\t\t\t\t\t\texternalModule = {\n\t\t\t\t\t\t\t\t\tid,\n\t\t\t\t\t\t\t\t\tisExternal: true\n\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\texternalModules.push( externalModule );\n\t\t\t\t\t\t\t\texternalModuleLookup[ id ] = externalModule;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tx.module = externalModule;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow err;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t});\n\n\t\t\t\treturn Promise.all( promises )\n\t\t\t\t\t.then( () => module );\n\t\t\t});\n\t\t}\n\n\t\treturn promiseByPath[ absolutePath ];\n\t}\n}\n\nfunction resolvePath ( base, userModules, moduleId, importerPath, resolver ) {\n\tconst noExt = moduleId.replace( /\\.js$/, '' );\n\n\treturn tryPath( base, noExt + '.js', userModules )\n\t\t.catch( () => tryPath( base, noExt + path.sep + 'index.js', userModules ) )\n\t\t.catch( function ( err ) {\n\t\t\tconst resolvedPromise = resolver && Promise.resolve( resolver( moduleId, importerPath ) );\n\n\t\t\tif ( resolvedPromise ) {\n\t\t\t\treturn resolvedPromise.then( resolvedPath => {\n\t\t\t\t\tif ( !resolvedPath ) {\n\t\t\t\t\t\t// hack but whatevs, it saves handling real ENOENTs differently\n\t\t\t\t\t\tlet err = new Error();\n\t\t\t\t\t\terr.code = 'ENOENT';\n\t\t\t\t\t\tthrow err;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn sander.stat( resolvedPath ).then( () => path.resolve( base, resolvedPath ) );\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t});\n}\n\nfunction tryPath ( base, filename, userModules ) {\n\tconst absolutePath = path.resolve( base, filename );\n\n\tif ( hasOwnProp.call( userModules, absolutePath ) ) {\n\t\treturn Promise.resolve( absolutePath );\n\t}\n\treturn sander.stat( absolutePath ).then( () => absolutePath );\n}\n\nfunction isThenable ( obj ) {\n\treturn obj && typeof obj.then === 'function';\n}\n","export default function transformExportDeclaration ( declaration, body ) {\n\tif ( !declaration ) {\n\t\treturn;\n\t}\n\n\tlet exportedValue;\n\n\tswitch ( declaration.type ) {\n\t\tcase 'namedFunction':\n\t\tcase 'namedClass':\n\t\t\tbody.remove( declaration.start, declaration.valueStart );\n\t\t\texportedValue = declaration.name;\n\t\t\tbreak;\n\n\t\tcase 'anonFunction':\n\t\tcase 'anonClass':\n\t\t\tif ( declaration.isFinal ) {\n\t\t\t\tbody.replace( declaration.start, declaration.valueStart, 'return ' );\n\t\t\t} else {\n\t\t\t\tbody.replace( declaration.start, declaration.valueStart, 'var __export = ' );\n\t\t\t\texportedValue = '__export';\n\t\t\t}\n\n\t\t\t// add semi-colon, if necessary\n\t\t\t// TODO body.original is an implementation detail of magic-string - there\n\t\t\t// should probably be an API for this sort of thing\n\t\t\tif ( body.original[ declaration.end - 1 ] !== ';' ) {\n\t\t\t\tbody.insert( declaration.end, ';' );\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase 'expression':\n\t\t\tbody.remove( declaration.start, declaration.next );\n\t\t\texportedValue = declaration.value;\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tthrow new Error( `Unexpected export type '${declaration.type}'` );\n\t}\n\n\tif ( exportedValue ) {\n\t\tbody.append( `\\nreturn ${exportedValue};` );\n\t}\n}\n","import walk from './ast/walk';\nimport { splitPath } from 'utils/sanitize';\n\nconst ABSOLUTE_PATH = /^(?:[A-Z]:)?[\\/\\\\]/i;\n\nlet warned = {};\n\nexport default function packageResult ( bundleOrModule, body, options, methodName, isBundle ) {\n\t// wrap output\n\tif ( options.banner ) body.prepend( options.banner );\n\tif ( options.footer ) body.append( options.footer );\n\n\tlet code = body.toString();\n\tlet map;\n\n\tif ( !!options.sourceMap ) {\n\t\tif ( options.sourceMap !== 'inline' && !options.sourceMapFile ) {\n\t\t\tthrow new Error( 'You must provide `sourceMapFile` option' );\n\t\t}\n\n\t\tif ( !isBundle && !options.sourceMapSource ) {\n\t\t\tthrow new Error( 'You must provide `sourceMapSource` option' );\n\t\t}\n\n\t\tlet sourceMapFile;\n\t\tif ( options.sourceMap === 'inline' ) {\n\t\t\tsourceMapFile = null;\n\t\t} else {\n\t\t\tsourceMapFile = ABSOLUTE_PATH.test( options.sourceMapFile ) ? options.sourceMapFile : './' + splitPath( options.sourceMapFile ).pop();\n\t\t}\n\n\t\tif ( isBundle ) {\n\t\t\tmarkBundleSourcemapLocations( bundleOrModule );\n\t\t} else {\n\t\t\tmarkModuleSourcemapLocations( bundleOrModule );\n\t\t}\n\n\t\tmap = body.generateMap({\n\t\t\tincludeContent: true,\n\t\t\tfile: sourceMapFile,\n\t\t\tsource: ( sourceMapFile && !isBundle ) ? getRelativePath( sourceMapFile, options.sourceMapSource ) : null\n\t\t});\n\n\t\tif ( options.sourceMap === 'inline' ) {\n\t\t\tcode += '\\n//# sourceMa' + 'ppingURL=' + map.toUrl();\n\t\t\tmap = null;\n\t\t} else {\n\t\t\tcode += '\\n//# sourceMa' + 'ppingURL=' + sourceMapFile + '.map';\n\t\t}\n\t} else {\n\t\tmap = null;\n\t}\n\n\treturn {\n\t\tcode,\n\t\tmap,\n\t\ttoString () {\n\t\t\tif ( !warned[ methodName ] ) {\n\t\t\t\tconsole.log( `Warning: esperanto.${methodName}() returns an object with a 'code' property. You should use this instead of using the returned value directly` );\n\t\t\t\twarned[ methodName ] = true;\n\t\t\t}\n\n\t\t\treturn code;\n\t\t}\n\t};\n}\n\nfunction getRelativePath ( from, to ) {\n\tvar fromParts, toParts, i;\n\n\tfromParts = splitPath( from );\n\ttoParts = splitPath( to );\n\n\tfromParts.pop(); // get dirname\n\n\twhile ( fromParts[0] === '.' ) {\n\t\tfromParts.shift();\n\t}\n\n\twhile ( fromParts[0] === toParts[0] ) {\n\t\tfromParts.shift();\n\t\ttoParts.shift();\n\t}\n\n\tif ( fromParts.length ) {\n\t\ti = fromParts.length;\n\t\twhile ( i-- ) fromParts[i] = '..';\n\n\t\treturn fromParts.concat( toParts ).join( '/' );\n\t} else {\n\t\ttoParts.unshift( '.' );\n\t\treturn toParts.join( '/' );\n\t}\n}\n\nfunction markBundleSourcemapLocations ( bundle ) {\n\tbundle.modules.forEach( mod => {\n\t\twalk( mod.ast, {\n\t\t\tenter: node => {\n\t\t\t\tmod.body.addSourcemapLocation( node.start );\n\t\t\t}\n\t\t});\n\t});\n}\n\nfunction markModuleSourcemapLocations ( mod ) {\n\twalk( mod.ast, {\n\t\tenter: node => {\n\t\t\tmod.body.addSourcemapLocation( node.start );\n\t\t}\n\t});\n}\n","import resolveId from '../resolveId';\n\nexport default function getImportSummary ({ imports, absolutePaths, name }) {\n\tlet paths = [];\n\tlet names = [];\n\tlet seen = {};\n\tlet placeholders = 0;\n\n\timports.forEach( x => {\n\t\tlet path = x.id || x.path; // TODO unify these\n\n\t\tif ( !seen[ path ] ) {\n\t\t\tseen[ path ] = true;\n\n\t\t\tpaths.push( path );\n\n\t\t\t// TODO x could be an external module, or an internal one.\n\t\t\t// they have different shapes, resulting in the confusing\n\t\t\t// code below\n\t\t\tif ( ( x.needsDefault || x.needsNamed ) || ( x.specifiers && x.specifiers.length ) ) {\n\t\t\t\twhile ( placeholders ) {\n\t\t\t\t\tnames.push( `__dep${names.length}__` );\n\t\t\t\t\tplaceholders--;\n\t\t\t\t}\n\t\t\t\tnames.push( x.name );\n\t\t\t} else {\n\t\t\t\tplaceholders++;\n\t\t\t}\n\t\t}\n\t});\n\n\tlet ids = absolutePaths ? paths.map( relativePath => resolveId( relativePath, name ) ) : paths.slice();\n\n\treturn { ids, paths, names };\n}","import { quote } from '../mappers';\n\nexport default function processName ( name ) {\n\treturn name ? quote( name ) + ', ' : '';\n}","import { quote } from '../mappers';\n\nexport default function processIds ( ids ) {\n\treturn ids.length ? '[' + ids.map( quote ).join( ', ' ) + '], ' : '';\n}","import getImportSummary from './getImportSummary';\nimport processName from './processName';\nimport processIds from './processIds';\n\nexport default function amdIntro ({ name, imports, hasExports, indentStr, absolutePaths, useStrict }) {\n\tlet { ids, names } = getImportSummary({ name, imports, absolutePaths });\n\n\tif ( hasExports ) {\n\t\tids.unshift( 'exports' );\n\t\tnames.unshift( 'exports' );\n\t}\n\n\tlet intro = `\ndefine(${processName(name)}${processIds(ids)}function (${names.join( ', ' ) }) {\n\n`;\n\n\tif ( useStrict ) {\n\t\tintro += `${indentStr}'use strict';\\n\\n`;\n\t}\n\n\treturn intro;\n}","import transformExportDeclaration from './utils/transformExportDeclaration';\nimport packageResult from 'utils/packageResult';\nimport amdIntro from '../../../utils/amd/amdIntro';\n\nexport default function amd ( mod, options ) {\n\tmod.imports.forEach( x => {\n\t\tmod.body.remove( x.start, x.next );\n\t});\n\n\ttransformExportDeclaration( mod.exports[0], mod.body );\n\n\tlet intro = amdIntro({\n\t\tname: options.amdName,\n\t\timports: mod.imports,\n\t\tabsolutePaths: options.absolutePaths,\n\t\tindentStr: mod.body.getIndentString(),\n\t\tuseStrict: options.useStrict !== false\n\t});\n\n\tmod.body.trim()\n\t\t.indent()\n\t\t.prepend( intro )\n\t\t.trim()\n\t\t.append( '\\n\\n});' );\n\n\treturn packageResult( mod, mod.body, options, 'toAmd' );\n}\n","import hasOwnProp from 'utils/hasOwnProp';\nimport packageResult from 'utils/packageResult';\nimport { req } from 'utils/mappers';\n\nexport default function cjs ( mod, options ) {\n\tlet seen = {};\n\n\tmod.imports.forEach( x => {\n\t\tif ( !hasOwnProp.call( seen, x.path ) ) {\n\t\t\tlet replacement = x.isEmpty ? `${req(x.path)};` : `var ${x.as} = ${req(x.path)};`;\n\t\t\tmod.body.replace( x.start, x.end, replacement );\n\n\t\t\tseen[ x.path ] = true;\n\t\t} else {\n\t\t\tmod.body.remove( x.start, x.next );\n\t\t}\n\t});\n\n\tlet exportDeclaration = mod.exports[0];\n\n\tif ( exportDeclaration ) {\n\t\tswitch ( exportDeclaration.type ) {\n\t\t\tcase 'namedFunction':\n\t\t\tcase 'namedClass':\n\t\t\t\tmod.body.remove( exportDeclaration.start, exportDeclaration.valueStart );\n\t\t\t\tmod.body.replace( exportDeclaration.end, exportDeclaration.end, `\\nmodule.exports = ${exportDeclaration.node.declaration.id.name};` );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmod.body.replace( exportDeclaration.start, exportDeclaration.valueStart, 'module.exports = ' );\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tif ( options.useStrict !== false ) {\n\t\tmod.body.prepend( \"'use strict';\\n\\n\" ).trimLines();\n\t}\n\n\treturn packageResult( mod, mod.body, options, 'toCjs' );\n}\n","import { globalify, req } from 'utils/mappers';\nimport processName from '../amd/processName';\nimport processIds from '../amd/processIds';\nimport getImportSummary from '../amd/getImportSummary';\n\nexport default function umdIntro ({ amdName, name, hasExports, imports, absolutePaths, externalDefaults, indentStr, strict, useStrict }) {\n\tconst useStrictPragma = useStrict ? ` 'use strict';` : '';\n\tlet intro;\n\n\tif ( !hasExports && !imports.length ) {\n\t\tintro =\n\t\t\t`(function (factory) {\n\t\t\t\t!(typeof exports === 'object' && typeof module !== 'undefined') &&\n\t\t\t\ttypeof define === 'function' && define.amd ? define(${processName(amdName)}factory) :\n\t\t\t\tfactory()\n\t\t\t}(function () {${useStrictPragma}\n\n\t\t\t`;\n\t}\n\n\telse {\n\t\tlet { ids, paths, names } = getImportSummary({ imports, name: amdName, absolutePaths });\n\n\t\tlet amdExport, cjsExport, globalExport, defaultsBlock;\n\n\t\tif ( strict ) {\n\t\t\tcjsExport = `factory(${( hasExports ? [ 'exports' ] : [] ).concat( paths.map( req ) ).join( ', ' )})`;\n\t\t\tlet globalDeps = ( hasExports ? [ `(global.${name} = {})` ] : [] ).concat( names.map( globalify ) ).join( ', ' );\n\t\t\tglobalExport = `factory(${globalDeps})`;\n\n\t\t\tif ( hasExports ) {\n\t\t\t\tids.unshift( 'exports' );\n\t\t\t\tnames.unshift( 'exports' );\n\t\t\t}\n\n\t\t\tamdExport = `define(${processName(amdName)}${processIds(ids)}factory)`;\n\t\t\tdefaultsBlock = '';\n\t\t\tif ( externalDefaults && externalDefaults.length > 0 ) {\n\t\t\t\tdefaultsBlock = externalDefaults.map( x =>\n\t\t\t\t\t'\\t' + ( x.needsNamed ? `var ${x.name}__default` : x.name ) +\n\t\t\t\t\t\t` = ('default' in ${x.name} ? ${x.name}['default'] : ${x.name});`\n\t\t\t\t).join('\\n') + '\\n\\n';\n\t\t\t}\n\t\t} else {\n\t\t\tamdExport = `define(${processName(amdName)}${processIds(ids)}factory)`;\n\t\t\tcjsExport = ( hasExports ? 'module.exports = ' : '' ) + `factory(${paths.map( req ).join( ', ' )})`;\n\t\t\tglobalExport = ( hasExports ? `global.${name} = ` : '' ) + `factory(${names.map( globalify ).join( ', ' )})`;\n\n\t\t\tdefaultsBlock = '';\n\t\t}\n\n\t\tintro =\n\t\t\t`(function (global, factory) {\n\t\t\t\ttypeof exports === 'object' && typeof module !== 'undefined' ? ${cjsExport} :\n\t\t\t\ttypeof define === 'function' && define.amd ? ${amdExport} :\n\t\t\t\t${globalExport}\n\t\t\t}(this, function (${names.join( ', ' )}) {${useStrictPragma}\n\n\t\t\t${defaultsBlock}`;\n\n\t}\n\n\treturn intro.replace( /^\\t\\t\\t/gm, '' ).replace( /\\t/g, indentStr );\n}","var EsperantoError = function ( message, data ) {\n\tvar prop;\n\n\tthis.message = message;\n\tthis.stack = (new Error()).stack;\n\n\tfor ( prop in data ) {\n\t\tif ( data.hasOwnProperty( prop ) ) {\n\t\t\tthis[ prop ] = data[ prop ];\n\t\t}\n\t}\n};\n\nEsperantoError.prototype = new Error();\nEsperantoError.prototype.constructor = EsperantoError;\nEsperantoError.prototype.name = 'EsperantoError';\n\nexport default EsperantoError;","import EsperantoError from 'utils/EsperantoError';\n\nexport default function requireName ( options ) {\n\tif ( !options.name ) {\n\t\tthrow new EsperantoError( 'You must supply a `name` option for UMD modules', {\n\t\t\tcode: 'MISSING_NAME'\n\t\t});\n\t}\n}","import transformExportDeclaration from './utils/transformExportDeclaration';\nimport packageResult from 'utils/packageResult';\nimport umdIntro from 'utils/umd/umdIntro';\nimport requireName from 'utils/umd/requireName';\n\nexport default function umd ( mod, options ) {\n\trequireName( options );\n\n\tmod.imports.forEach( x => {\n\t\tmod.body.remove( x.start, x.next );\n\t});\n\n\tlet intro = umdIntro({\n\t\thasExports: mod.exports.length > 0,\n\t\timports: mod.imports,\n\t\tamdName: options.amdName,\n\t\tabsolutePaths: options.absolutePaths,\n\t\tname: options.name,\n\t\tindentStr: mod.body.getIndentString(),\n\t\tuseStrict: options.useStrict !== false\n\t});\n\n\ttransformExportDeclaration( mod.exports[0], mod.body );\n\n\tmod.body.indent().prepend( intro ).trimLines().append( '\\n\\n}));' );\n\n\treturn packageResult( mod, mod.body, options, 'toUmd' );\n}\n","import amd from './amd';\nimport cjs from './cjs';\nimport umd from './umd';\n\nexport default {\n\tamd: amd,\n\tcjs: cjs,\n\tumd: umd\n};\n","export default function gatherImports ( imports ) {\n\tlet chains = {};\n\tlet identifierReplacements = {};\n\n\timports.forEach( x => {\n\t\tx.specifiers.forEach( s => {\n\t\t\tif ( s.isBatch ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet name = s.as;\n\t\t\tlet replacement = x.name + ( s.isDefault ? `['default']` : `.${s.name}` );\n\n\t\t\tif ( !x.passthrough ) {\n\t\t\t\tidentifierReplacements[ name ] = replacement;\n\t\t\t}\n\n\t\t\tchains[ name ] = replacement;\n\t\t});\n\t});\n\n\treturn [ chains, identifierReplacements ];\n}\n","export default function getExportNames ( exports ) {\n\tvar result = {};\n\n\texports.forEach( x => {\n\t\tif ( x.isDefault ) return;\n\n\t\tif ( x.hasDeclaration ) {\n\t\t\tresult[ x.name ] = x.name;\n\t\t\treturn;\n\t\t}\n\n\t\tx.specifiers.forEach( s => {\n\t\t\tresult[ s.name ] = s.as;\n\t\t});\n\t});\n\n\treturn result;\n}\n","import gatherImports from './gatherImports';\nimport getExportNames from './getExportNames';\nimport getReadOnlyIdentifiers from 'utils/getReadOnlyIdentifiers';\nimport traverseAst from 'utils/ast/traverse';\nimport hasOwnProp from 'utils/hasOwnProp';\n\nexport default function transformBody ( mod, body, options ) {\n\tlet [ chains, identifierReplacements ] = gatherImports( mod.imports );\n\tlet exportNames = getExportNames( mod.exports );\n\n\tlet [ importedBindings, importedNamespaces ] = getReadOnlyIdentifiers( mod.imports );\n\n\t// ensure no conflict with `exports`\n\tidentifierReplacements.exports = deconflict( 'exports', mod.ast._declared );\n\n\ttraverseAst( mod.ast, body, identifierReplacements, importedBindings, importedNamespaces, exportNames );\n\n\t// Remove import statements from the body of the module\n\tmod.imports.forEach( x => {\n\t\tbody.remove( x.start, x.next );\n\t});\n\n\t// Prepend require() statements (CommonJS output only)\n\tif ( options.header ) {\n\t\tbody.prepend( options.header + '\\n\\n' );\n\t}\n\n\t// Remove export statements (but keep declarations)\n\tmod.exports.forEach( x => {\n\t\tif ( x.isDefault ) {\n\t\t\tif ( /^named/.test( x.type ) ) {\n\t\t\t\t// export default function answer () { return 42; }\n\t\t\t\tbody.remove( x.start, x.valueStart );\n\t\t\t\tbody.insert( x.end, `\\nexports['default'] = ${x.name};` );\n\t\t\t} else {\n\t\t\t\t// everything else\n\t\t\t\tbody.replace( x.start, x.valueStart, 'exports[\\'default\\'] = ' );\n\t\t\t}\n\t\t}\n\n\t\telse {\n\t\t\tswitch ( x.type ) {\n\t\t\t\tcase 'varDeclaration': // export var answer = 42; (or let)\n\t\t\t\tcase 'namedFunction':  // export function answer () {...}\n\t\t\t\tcase 'namedClass':     // export class answer {...}\n\t\t\t\t\tbody.remove( x.start, x.valueStart );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'named':          // export { foo, bar };\n\t\t\t\t\tbody.remove( x.start, x.next );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tbody.replace( x.start, x.valueStart, 'exports[\\'default\\'] = ' );\n\t\t\t}\n\t\t}\n\t});\n\n\t// Append export block (this is the same for all module types, unlike imports)\n\tlet earlyExports = [];\n\tlet lateExports = [];\n\n\tObject.keys( exportNames ).forEach( name => {\n\t\tvar exportAs = exportNames[ name ];\n\n\t\tif ( chains.hasOwnProperty( name ) ) {\n\t\t\t// special case - a binding from another module\n\t\t\tif ( !options._evilES3SafeReExports ) {\n\t\t\t\tearlyExports.push( `Object.defineProperty(exports, '${exportAs}', { enumerable: true, get: function () { return ${chains[name]}; }});` );\n\t\t\t} else {\n\t\t\t\tlateExports.push( `exports.${exportAs} = ${chains[name]};` );\n\t\t\t}\n\t\t} else if ( ~mod.ast._topLevelFunctionNames.indexOf( name ) ) {\n\t\t\t// functions should be exported early, in\n\t\t\t// case of cyclic dependencies\n\t\t\tearlyExports.push( `exports.${exportAs} = ${name};` );\n\t\t} else {\n\t\t\tlateExports.push( `exports.${exportAs} = ${name};` );\n\t\t}\n\t});\n\n\t// Function exports should be exported immediately after 'use strict'\n\tif ( earlyExports.length ) {\n\t\tbody.trim().prepend( earlyExports.join( '\\n' ) + '\\n\\n' );\n\t}\n\n\t// Everything else should be exported at the end\n\tif ( lateExports.length ) {\n\t\tbody.trim().append( '\\n\\n' + lateExports.join( '\\n' ) );\n\t}\n\n\tif ( options.intro && options.outro ) {\n\t\tbody.indent().prepend( options.intro ).trimLines().append( options.outro );\n\t}\n}\n\nfunction deconflict ( name, declared ) {\n\twhile ( hasOwnProp.call( declared, name ) ) {\n\t\tname = '_' + name;\n\t}\n\n\treturn name;\n}\n","import packageResult from '../../../utils/packageResult';\nimport transformBody from './utils/transformBody';\nimport amdIntro from '../../../utils/amd/amdIntro';\n\nexport default function amd ( mod, options ) {\n\tlet intro = amdIntro({\n\t\tname: options.amdName,\n\t\tabsolutePaths: options.absolutePaths,\n\t\timports: mod.imports,\n\t\tindentStr: mod.body.getIndentString(),\n\t\thasExports: mod.exports.length,\n\t\tuseStrict: options.useStrict !== false\n\t});\n\n\ttransformBody( mod, mod.body, {\n\t\tintro,\n\t\toutro: '\\n\\n});',\n\t\t_evilES3SafeReExports: options._evilES3SafeReExports\n\t});\n\n\treturn packageResult( mod, mod.body, options, 'toAmd' );\n}\n","import packageResult from 'utils/packageResult';\nimport hasOwnProp from 'utils/hasOwnProp';\nimport transformBody from './utils/transformBody';\nimport { req } from 'utils/mappers';\n\nexport default function cjs ( mod, options ) {\n\tlet seen = {};\n\n\t// Create block of require statements\n\tlet importBlock = mod.imports.map( x => {\n\t\tif ( !hasOwnProp.call( seen, x.path ) ) {\n\t\t\tseen[ x.path ] = true;\n\n\t\t\tif ( x.isEmpty ) {\n\t\t\t\treturn `${req(x.path)};`;\n\t\t\t}\n\n\t\t\treturn `var ${x.name} = ${req(x.path)};`;\n\t\t}\n\t}).filter( Boolean ).join( '\\n' );\n\n\ttransformBody( mod, mod.body, {\n\t\theader: importBlock,\n\t\t_evilES3SafeReExports: options._evilES3SafeReExports\n\t});\n\n\tif ( options.useStrict !== false ) {\n\t\tmod.body.prepend( \"'use strict';\\n\\n\" ).trimLines();\n\t}\n\n\treturn packageResult( mod, mod.body, options, 'toCjs' );\n}\n","import packageResult from 'utils/packageResult';\nimport umdIntro from 'utils/umd/umdIntro';\nimport requireName from 'utils/umd/requireName';\nimport transformBody from './utils/transformBody';\n\nexport default function umd ( mod, options ) {\n\trequireName( options );\n\n\tlet intro = umdIntro({\n\t\thasExports: mod.exports.length > 0,\n\t\timports: mod.imports,\n\t\tamdName: options.amdName,\n\t\tabsolutePaths: options.absolutePaths,\n\t\tname: options.name,\n\t\tindentStr: mod.body.getIndentString(),\n\t\tstrict: true,\n\t\tuseStrict: options.useStrict !== false\n\t});\n\n\ttransformBody( mod, mod.body, {\n\t\tintro: intro,\n\t\toutro: '\\n\\n}));',\n\t\t_evilES3SafeReExports: options._evilES3SafeReExports\n\t});\n\n\treturn packageResult( mod, mod.body, options, 'toUmd' );\n}\n","import amd from './amd';\nimport cjs from './cjs';\nimport umd from './umd';\n\nexport default {\n\tamd: amd,\n\tcjs: cjs,\n\tumd: umd\n};\n","// TODO rewrite with named imports/exports\nimport defaultsMode from './defaultsMode';\nimport strictMode from './strictMode';\n\nexport default {\n\tdefaultsMode: defaultsMode,\n\tstrictMode: strictMode\n};\n","import packageResult from '../../../utils/packageResult';\nimport amdIntro from '../../../utils/amd/amdIntro';\n\nexport default function amd ( bundle, options ) {\n\tlet defaultName = bundle.entryModule.identifierReplacements.default;\n\tif ( defaultName ) {\n\t\tbundle.body.append( `\\n\\nreturn ${defaultName};` );\n\t}\n\n\tlet intro = amdIntro({\n\t\tname: options.amdName,\n\t\timports: bundle.externalModules,\n\t\tindentStr: bundle.body.getIndentString(),\n\t\tuseStrict: options.useStrict !== false\n\t});\n\n\tbundle.body.indent().prepend( intro ).trimLines().append( '\\n\\n});' );\n\treturn packageResult( bundle, bundle.body, options, 'toAmd', true );\n}","import packageResult from 'utils/packageResult';\nimport { req } from 'utils/mappers';\n\nexport default function cjs ( bundle, options ) {\n\tlet importBlock = bundle.externalModules.map( x => {\n\t\treturn `var ${x.name} = ${req(x.id)};`;\n\t}).join( '\\n' );\n\n\tif ( importBlock ) {\n\t\tbundle.body.prepend( importBlock + '\\n\\n' );\n\t}\n\n\tlet defaultName = bundle.entryModule.identifierReplacements.default;\n\tif ( defaultName ) {\n\t\tbundle.body.append( `\\n\\nmodule.exports = ${defaultName};` );\n\t}\n\n\tif ( options.useStrict !== false ) {\n\t\tbundle.body.prepend(\"'use strict';\\n\\n\").trimLines();\n\t}\n\n\treturn packageResult( bundle, bundle.body, options, 'toCjs', true );\n}\n","import packageResult from 'utils/packageResult';\nimport umdIntro from 'utils/umd/umdIntro';\nimport requireName from 'utils/umd/requireName';\n\nexport default function umd ( bundle, options ) {\n\trequireName( options );\n\n\tlet entry = bundle.entryModule;\n\n\tlet intro = umdIntro({\n\t\thasExports: entry.exports.length > 0,\n\t\timports: bundle.externalModules,\n\t\tamdName: options.amdName,\n\t\tname: options.name,\n\t\tindentStr: bundle.body.getIndentString(),\n\t\tuseStrict: options.useStrict !== false\n\t});\n\n\tif ( entry.defaultExport ) {\n\t\tbundle.body.append( `\\n\\nreturn ${entry.identifierReplacements.default};` );\n\t}\n\n\tbundle.body.indent().prepend( intro ).trimLines().append('\\n\\n}));');\n\n\treturn packageResult( bundle, bundle.body, options, 'toUmd', true );\n}\n","import amd from './amd';\nimport cjs from './cjs';\nimport umd from './umd';\n\nexport default {\n\tamd: amd,\n\tcjs: cjs,\n\tumd: umd\n};\n","export default function getExportBlock ( entry ) {\n\tlet name = entry.identifierReplacements.default;\n\treturn `exports['default'] = ${name};`;\n}\n","import packageResult from '../../../utils/packageResult';\nimport amdIntro from '../../../utils/amd/amdIntro';\nimport getExportBlock from './utils/getExportBlock';\n\nexport default function amd ( bundle, options ) {\n\tlet externalDefaults = bundle.externalModules.filter( needsDefault );\n\tlet entry = bundle.entryModule;\n\n\tif ( externalDefaults.length ) {\n\t\tlet defaultsBlock = externalDefaults.map( x => {\n\t\t\t// Case 1: default is used, and named is not\n\t\t\tif ( !x.needsNamed ) {\n\t\t\t\treturn `${x.name} = ('default' in ${x.name} ? ${x.name}['default'] : ${x.name});`;\n\t\t\t}\n\n\t\t\t// Case 2: both default and named are used\n\t\t\treturn `var ${x.name}__default = ('default' in ${x.name} ? ${x.name}['default'] : ${x.name});`;\n\t\t}).join( '\\n' );\n\n\t\tbundle.body.prepend( defaultsBlock + '\\n\\n' );\n\t}\n\n\tif ( entry.defaultExport ) {\n\t\tbundle.body.append( '\\n\\n' + getExportBlock( entry ) );\n\t}\n\n\tlet intro = amdIntro({\n\t\tname: options.amdName,\n\t\timports: bundle.externalModules,\n\t\thasExports: entry.exports.length,\n\t\tindentStr: bundle.body.getIndentString(),\n\t\tuseStrict: options.useStrict !== false\n\t});\n\n\tbundle.body.indent().prepend( intro ).trimLines().append( '\\n\\n});' );\n\treturn packageResult( bundle, bundle.body, options, 'toAmd', true );\n}\n\nfunction needsDefault ( externalModule ) {\n\treturn externalModule.needsDefault;\n}\n","import packageResult from 'utils/packageResult';\nimport getExportBlock from './utils/getExportBlock';\nimport { req } from 'utils/mappers';\n\nexport default function cjs ( bundle, options ) {\n\tlet entry = bundle.entryModule;\n\n\tlet importBlock = bundle.externalModules.map( x => {\n\t\tlet statement = `var ${x.name} = ${req(x.id)};`;\n\n\t\tif ( x.needsDefault ) {\n\t\t\tstatement += '\\n' +\n\t\t\t\t( x.needsNamed ? `var ${x.name}__default` : x.name ) +\n\t\t\t\t` = ('default' in ${x.name} ? ${x.name}['default'] : ${x.name});`;\n\t\t}\n\n\t\treturn statement;\n\t}).join( '\\n' );\n\n\tif ( importBlock ) {\n\t\tbundle.body.prepend( importBlock + '\\n\\n' );\n\t}\n\n\tif ( entry.defaultExport ) {\n\t\tbundle.body.append( '\\n\\n' + getExportBlock( entry ) );\n\t}\n\n\tif ( options.useStrict !== false ) {\n\t\tbundle.body.prepend(\"'use strict';\\n\\n\").trimLines();\n\t}\n\n\treturn packageResult( bundle, bundle.body, options, 'toCjs', true );\n}\n","import umdIntro from 'utils/umd/umdIntro';\nimport requireName from 'utils/umd/requireName';\nimport packageResult from 'utils/packageResult';\nimport getExportBlock from './utils/getExportBlock';\n\nexport default function umd ( bundle, options ) {\n\trequireName( options );\n\n\tlet entry = bundle.entryModule;\n\n\tlet intro = umdIntro({\n\t\thasExports: entry.exports.length > 0,\n\t\timports: bundle.externalModules,\n\t\texternalDefaults: bundle.externalModules.filter( needsDefault ),\n\t\tamdName: options.amdName,\n\t\tname: options.name,\n\t\tindentStr: bundle.body.getIndentString(),\n\t\tstrict: true,\n\t\tuseStrict: options.useStrict !== false\n\t});\n\n\tif ( entry.defaultExport ) {\n\t\tbundle.body.append( '\\n\\n' + getExportBlock( entry ) );\n\t}\n\n\tbundle.body.indent().prepend( intro ).trimLines().append('\\n\\n}));');\n\n\treturn packageResult( bundle, bundle.body, options, 'toUmd', true );\n}\n\nfunction needsDefault ( externalModule ) {\n\treturn externalModule.needsDefault;\n}\n","import amd from './amd';\nimport cjs from './cjs';\nimport umd from './umd';\n\nexport default {\n\tamd: amd,\n\tcjs: cjs,\n\tumd: umd\n};\n","// TODO rewrite with named imports/exports\nimport defaultsMode from './defaultsMode';\nimport strictMode from './strictMode';\n\nexport default {\n\tdefaultsMode: defaultsMode,\n\tstrictMode: strictMode\n};\n","import packageResult from 'utils/packageResult';\n\nexport default function concat ( bundle, options ) {\n\t// This bundle must be self-contained - no imports or exports\n\tif ( bundle.externalModules.length || bundle.entryModule.exports.length ) {\n\t\tthrow new Error( `bundle.concat() can only be used with bundles that have no imports/exports (imports: [${bundle.externalModules.map(x=>x.id).join(', ')}], exports: [${bundle.entryModule.exports.join(', ')}])` );\n\t}\n\n\t// TODO test these options\n\tlet intro = 'intro' in options ? options.intro : `(function () { 'use strict';\\n\\n`;\n\tlet outro = 'outro' in options ? options.outro : '\\n\\n})();';\n\tlet indent;\n\n\tif ( !( 'indent' in options ) || options.indent === true ) {\n\t\tindent = bundle.body.getIndentString();\n\t} else {\n\t\tindent = options.indent || '';\n\t}\n\n\tbundle.body.trimLines().indent( indent ).prepend( intro ).append( outro );\n\n\treturn packageResult( bundle, bundle.body, options, 'toString', true );\n}\n","import hasNamedImports from 'utils/hasNamedImports';\nimport hasNamedExports from 'utils/hasNamedExports';\nimport getStandaloneModule from 'standalone/getModule';\nimport getBundle from 'bundler/getBundle';\nimport moduleBuilders from 'standalone/builders';\nimport bundleBuilders from 'bundler/builders';\nimport concat from 'bundler/builders/concat';\nimport { getName } from 'utils/mappers';\n\nlet deprecateMessage = 'options.defaultOnly has been deprecated, and is now standard behaviour. To use named imports/exports, pass `strict: true`.';\nlet alreadyWarned = false;\n\nfunction transpileMethod ( format ) {\n\treturn function ( source, options = {} ) {\n\t\tlet mod = getStandaloneModule({\n\t\t\tsource,\n\t\t\tgetModuleName: options.getModuleName,\n\t\t\tstrict: options.strict\n\t\t});\n\n\t\tif ( 'defaultOnly' in options && !alreadyWarned ) {\n\t\t\t// TODO link to a wiki page explaining this, or something\n\t\t\tconsole.log( deprecateMessage );\n\t\t\talreadyWarned = true;\n\t\t}\n\n\t\tif ( options.absolutePaths && !options.amdName ) {\n\t\t\tthrow new Error( 'You must specify an `amdName` in order to use the `absolutePaths` option' );\n\t\t}\n\n\t\tlet builder;\n\n\t\tif ( !options.strict ) {\n\t\t\t// ensure there are no named imports/exports. TODO link to a wiki page...\n\t\t\tif ( hasNamedImports( mod ) || hasNamedExports( mod ) ) {\n\t\t\t\tthrow new Error( 'You must be in strict mode (pass `strict: true`) to use named imports or exports' );\n\t\t\t}\n\n\t\t\tbuilder = moduleBuilders.defaultsMode[ format ];\n\t\t} else {\n\t\t\tbuilder = moduleBuilders.strictMode[ format ];\n\t\t}\n\n\t\treturn builder( mod, options );\n\t};\n}\n\nexport default {\n\ttoAmd: transpileMethod( 'amd' ),\n\ttoCjs: transpileMethod( 'cjs' ),\n\ttoUmd: transpileMethod( 'umd' ),\n\n\tbundle: function ( options ) {\n\t\treturn getBundle( options ).then( function ( bundle ) {\n\t\t\treturn {\n\t\t\t\timports: bundle.externalModules.map( mod => mod.id ),\n\t\t\t\texports: flattenExports( bundle.entryModule.exports ),\n\n\t\t\t\ttoAmd: options => transpile( 'amd', options ),\n\t\t\t\ttoCjs: options => transpile( 'cjs', options ),\n\t\t\t\ttoUmd: options => transpile( 'umd', options ),\n\n\t\t\t\tconcat: options => concat( bundle, options || {} )\n\t\t\t};\n\n\t\t\tfunction transpile ( format, options = {} ) {\n\t\t\t\tif ( 'defaultOnly' in options && !alreadyWarned ) {\n\t\t\t\t\t// TODO link to a wiki page explaining this, or something\n\t\t\t\t\tconsole.log( deprecateMessage );\n\t\t\t\t\talreadyWarned = true;\n\t\t\t\t}\n\n\t\t\t\tlet builder;\n\n\t\t\t\tif ( !options.strict ) {\n\t\t\t\t\t// ensure there are no named imports/exports\n\t\t\t\t\tif ( hasNamedExports( bundle.entryModule ) ) {\n\t\t\t\t\t\tthrow new Error( 'Entry module can only have named exports in strict mode (pass `strict: true`)' );\n\t\t\t\t\t}\n\n\t\t\t\t\tbundle.modules.forEach( mod => {\n\t\t\t\t\t\tmod.imports.forEach( x => {\n\t\t\t\t\t\t\tif ( x.module.isExternal && ( !x.isDefault && !x.isBatch ) ) {\n\t\t\t\t\t\t\t\tthrow new Error( 'You can only have named external imports in strict mode (pass `strict: true`)' );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t\tbuilder = bundleBuilders.defaultsMode[ format ];\n\t\t\t\t} else {\n\t\t\t\t\tbuilder = bundleBuilders.strictMode[ format ];\n\t\t\t\t}\n\n\t\t\t\treturn builder( bundle, options );\n\t\t\t}\n\t\t});\n\t}\n};\n\nfunction flattenExports ( exports ) {\n\tlet flattened = [];\n\n\texports.forEach( x => {\n\t\tif ( x.isDefault ) {\n\t\t\tflattened.push( 'default' );\n\t\t}\n\n\t\telse if ( x.name ) {\n\t\t\tflattened.push( x.name );\n\t\t}\n\n\t\telse if ( x.specifiers ) {\n\t\t\tflattened.push.apply( flattened, x.specifiers.map( getName ) );\n\t\t}\n\t});\n\n\treturn flattened;\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;AAAe,SAAS,kBAAkB,MAAM;AAChD,CAAC,IAAI,IAAI,IAAI,QAAQ;;AAErB,CAAC,QAAQ,MAAM;AACf,EAAE,KAAK,IAAI,QAAQ,GAAG,UAAU;AAChC,GAAG,OAAO;AACV;AACA;AACA;;ACRe,SAAS,kBAAkB,MAAM;AAChD,CAAC,IAAI,IAAI,IAAI,QAAQ;;AAErB,CAAC,QAAQ,MAAM;AACf,EAAE,KAAK,CAAC,IAAI,QAAQ,GAAG,YAAY;AACnC,GAAG,OAAO;AACV;AACA;AACA;;ACRA,IAAA,oBAAc;AACd,IADA,qBACe;;AAEA,SAAS,OAAO,KAAK,EAAE,OAAO,SAAS;AACtD,CAJA,qBAIY,GAAG;AACf,CAAC,OAAO,KAAK,MAAM,OAAO;AAC1B;;AAEA,IARA,iBAQW,GAAG;AACd,CAAC,MAAM,MATP,oBASuB,GAAG;AAC1B,CAAC,OAAO,MAVR,qBAUyB,GAAG;AAC5B;;AAEA,IAbA,mBAaa,GAAG;;AAEhB,IAfA,kBAeY,GAAG,OAAO,UAAU;;AAEhC,SAAS,UAAU,QAAQ;AAC3B,CAAC,OAlBD,kBAkBgB,CAAC,MAAM,YAAY;AACnC;;AAEA,SAAS,QAAQ,MAAM,QAAQ,OAAO,QAAQ;AAC9C,CAAC,KAAK,CAAC,QAtBP,qBAsB0B,GAAG;;AAE7B,CAAC,KAAK,QAAQ;AACd,EAzBA,oBAyBY,GAAG;AACf,EAAE,MAAM,MA1BR,iBA0BqB,EAAE,MAAM;AAC7B,EAAE,KA3BF,oBA2BiB,IA3BjB,qBA2BgC,GAAG;AACnC;;AAEA,CAAC,IAAI,OA9BL,mBA8BqB,EAAE,KAAK;AAC5B,EA/BA,mBA+BW,EAAE,KAAK,SAAS,OAAO,MAAM,OAAO,QAAQ,OAAO,OAAO,MAAM,UAAU;AACrF;;AAEA,CAAC,IAAI,KAAK,OAAO,GAAG;;AAEpB,CAAC,IAAI,KAAK;AACV,CAAC,QAAQ,MAAM;AACf,EAAE,MAAM,KAAK;AACb,EAAE,QAAQ,MAAM;;AAEhB,EAAE,KAAK,SAAS,UAAU;AAC1B,GAAG,IAAI,MAAM;AACb,GAAG,QAAQ,MAAM;AACjB,IAAI,OAAO,MAAM,IAAI,MAAM,OAAO;AAClC;AACA;;AAEA,OAAO,KAAK,SAAS,MAAM,OAAO;AAClC,GAAG,OAAO,OAAO,MAAM,OAAO;AAC9B;AACA;;AAEA,CAAC,KAAK,SAAS,CArDf,qBAqD2B,GAAG;AAC9B,EAAE,OAAO,MAAM;AACf;AACA;;ACxDO,SAAS,QAAQ,IAAI;AAC5B,CAAC,OAAO,EAAE;AACV;;AAEO,SAAS,UAAU,IAAI;AAC9B,CAAC,OAAO,EAAE;AACV;;AAEO,SAAS,QAAQ,MAAM;AAC9B,CAAC,OAAO,MAAM,KAAK,UAAU,KAAK,MAAM,GAAG,CAAC,GAAG,QAAQ,MAAM,SAAS;AACtE;;AAEO,SAAS,MAAM,OAAO;AAC7B,CAAC,OAAO,CAAC,UAAU,MAAM,MAAM;AAC/B;;AAEO,SAAS,YAAY,OAAO;AACnC,GAAG,KAAK,eAAe,MAAM,SAAS;AACtC,EAAE,OAAO;AACT,QAAQ;AACR,EAAE,OAAO,CAAC,SAAS,KAAK;AACxB;AACA;;ACtBA;AACA;AACA;AACA;AACA;;AAKA,SAAS,QAAQ,UAAU;AAC3B,CAAC,UAAU,WAAW;;AAEtB,CAAC,KAAK,SAAS,QAAQ;AACvB,CAAC,KAAK,QAAQ,QAAQ,UAAU;AAChC;;AAEA,MAAM,YAAY;AAClB,CAAC,KAAK,WAAW,OAAO;AACxB,EAAE,KAAK,MAAM,MAAM;AACnB;;AAEA,CAAC,UAAU,WAAW,MAAM,iBAAiB;AAC7C,EAAE,KAAK,kBAAkB,CAAC,KAAK,SAAS;AACxC,GAAG,OAAO;AACV;;AAEA,EAAE,KAAK,CAAC,KAAK,MAAM,SAAS,SAAS;AACrC,GAAG,OAAO;AACV;;AAEA,EAAE,KAAK,KAAK,SAAS;AACrB,GAAG,OAAO,KAAK,OAAO,UAAU,MAAM;AACtC;;AAEA,EAAE,OAAO;AACT;AACA;;AAEe,SAAS,cAAc,MAAM;AAC5C,CAAC,IAAI,QAAQ,IAAI;AACjB,CAAC,IAAI,aAAa,IAAI;AACtB,CAAC,IAAI,WAAW;AAChB,CAAC,IAAI,wBAAwB;AAC7B,CAAC,IAAI,wBAAwB;;AAE7B,CAAC,IAAI,WAAW;;AAEhB,CAAC,MAAM,KAAK;AACZ,EAAE,MAAM,EAAE,OAAO;AACjB,GAAG,KAAK,KAAK,SAAS,uBAAuB,KAAK,SAAS,oBAAoB;AAC/E,IAAI,KAAK,QAAQ;AACjB;;AAEA,GAAG,KAAK,KAAK,QAAQ;AACrB,IAAI,OAAO,KAAK;AAChB;;AAEA,GAAG,SAAS,KAAK;AACjB,IAAI,KAAK;AACT,IAAI,KAAK;;AAET,KAAK,YAAY;;AAEjB;;AAEA,IAAI,KAAK;AACT,KAAK,KAAK,KAAK,KAAK;AACpB,MAAM,YAAY;;AAElB;AACA;AACA,MAAM,KAAK,CAAC,MAAM,UAAU,KAAK,SAAS,wBAAwB;AAClE,OAAO,sBAAsB,MAAM,KAAK,GAAG;AAC3C;AACA;;AAEA,KAAK,IAAI,QAAQ,KAAK,OAAO,KAAK;;AAElC,KAAK,MAAM,SAAS,QAAQ,UAAU,SAAS;;AAE/C,KAAK,QAAQ,KAAK,SAAS,IAAI,MAAM;AACrC,MAAM,QAAQ;AACd,MAAM,QAAQ;AACd;;AAEA,KAAK;;AAEL,IAAI,KAAK;AACT,KAAK,aAAa,KAAK,cAAc,IAAI,MAAM;AAC/C,MAAM,QAAQ;AACd;;AAEA,KAAK;;AAEL,IAAI,KAAK;AACT,KAAK,KAAK,aAAa,SAAS,KAAK,SAAS,QAAQ,kBAAkB;AACxE,KAAK;;AAEL,IAAI,KAAK;AACT,IAAI,KAAK;AACT,KAAK,YAAY;AACjB,KAAK;;AAEL,IAAI,KAAK;AACT,KAAK,KAAK,aAAa,KAAK,KAAK,OAAO,SAAS,mBAAmB;AACpE,MAAM,MAAM,IAAI,MAAM;AACtB;AACA,KAAK,CAAC,KAAK,cAAc,KAAK,SAAS,QAAQ;AAC/C,KAAK;;AAEL,IAAI,KAAK;AACT,KAAK,KAAK,IAAI,QAAQ;AACtB,KAAK;;AAEL,IAAI,KAAK;AACT,KAAK,sBAAsB,KAAK,EAAE,KAAK,OAAO,KAAK;AACnD,KAAK;;AAEL,IAAI,KAAK;AACT,KAAK,IAAI,aAAa,GAAG;AACzB,MAAM,KAAK,YAAY;AACvB;AACA,KAAK;AACL;AACA;AACA,EAAE,MAAM,EAAE,OAAO;AACjB,GAAG,SAAS,KAAK;AACjB,IAAI,KAAK;AACT,IAAI,KAAK;;AAET,KAAK,YAAY;;AAEjB;;AAEA,IAAI,KAAK;;AAET,KAAK,QAAQ,MAAM;;AAEnB,KAAK;;AAEL,IAAI,KAAK;AACT,KAAK,aAAa,WAAW;AAC7B,KAAK;AACL;AACA;AACA;;AAEA,CAAC,SAAS,aAAa,aAAa;AACpC,EAAE,IAAI,OAAO,WAAW,GAAG;;AAE3B,EAAE,MAAM,KAAK;AACb,EAAE,UAAU,SAAS;AACrB;;AAEA,CAAC,SAAS,kBAAkB,aAAa;AACzC,EAAE,IAAI,OAAO,WAAW,GAAG;;AAE3B,EAAE,WAAW,KAAK;AAClB,EAAE,UAAU,SAAS;AACrB;;AAEA,CAAC,IAAI,SAAS;AACd,CAAC,IAAI,cAAc;AACnB,CAAC,IAAI,iBAAiB,IAAI,OAAO,MAAM,QAAQ,IAAI,YAAY;AAC/D,CAAC,IAAI,yBAAyB;AAC9B,CAAC,IAAI,YAAY;AACjB,CAAC,IAAI,yBAAyB;AAC9B;;ACvKA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAAS,wBAAwB,KAAK,QAAQ,MAAM;AACnE,CAAC,IAAI,UAAU,IAAI,UAAU,IAAI;;AAEjC,CAAC,IAAI,KAAK,SAAS,QAAQ;AAC3B,EAAE,IAAI,aAAa;;AAEnB,EAAE,KAAK,sBAAsB;AAC7B,GAAG,oBAAoB,OAAO,KAAK;;AAEnC,GAAG,KAAK,KAAK,SAAS,mBAAmB;AACzC,IAAI,sBAAsB;AAC1B;AACA;;AAEA,EAAE,KAAK,KAAK,SAAS,sBAAsB;AAC3C,GAAG,cAAc,eAAe;AAChC,GAAG,QAAQ,MAAM;AACjB;;AAEA,OAAO,KAAK,KAAK,SAAS,6BAA6B;AACvD,GAAG,cAAc,sBAAsB,MAAM;AAC7C,GAAG,QAAQ,MAAM;;AAEjB,GAAG,KAAK,IAAI,gBAAgB;AAC5B,IAAI,MAAM,IAAI,OAAO;AACrB;AACA,GAAG,IAAI,gBAAgB;AACvB;;AAEA,OAAO,KAAK,KAAK,SAAS,2BAA2B;AACrD,GAAG,cAAc,eAAe,MAAM;AACtC,GAAG,QAAQ,MAAM;;AAEjB,GAAG,KAAK,KAAK,SAAS;AACtB;AACA;AACA,IAAI,cAAc,eAAe,MAAM;AACvC,IAAI,QAAQ,MAAM;;AAElB,IAAI,YAAY,cAAc;AAC9B;AACA;;AAEA,EAAE,KAAK,cAAc;AACrB,GAAG,sBAAsB;AACzB;AACA;;AAEA;AACA,CAAC,KAAK,sBAAsB;AAC5B,EAAE,oBAAoB,OAAO,OAAO;AACpC,EAAE,oBAAoB,UAAU;AAChC;;AAEA,CAAC,OAAO,EAAE,SAAS;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,gBAAgB,MAAM,cAAc;AAC7C,CAAC,IAAI,IAAI;AACT,EAAE,QAAQ;AACV,EAAE,MAAM;AACR,EAAE,OAAO,KAAK;AACd,EAAE,KAAK,KAAK;AACZ,EAAE,aAAa,CAAC,CAAC;;AAEjB,EAAE,MAAM,KAAK,OAAO;AACpB,EAAE,YAAY,KAAK,WAAW,KAAK,KAAK;AACxC,GAAG,KAAK,EAAE,SAAS,6BAA6B;AAChD,IAAI,OAAO;AACX,KAAK,SAAS;AACd,KAAK,MAAM,EAAE,MAAM;AACnB,KAAK,IAAI,EAAE,MAAM;AACjB;AACA;;AAEA,GAAG,KAAK,EAAE,SAAS,2BAA2B;AAC9C,IAAI,OAAO;AACX,KAAK,WAAW;AAChB,KAAK,MAAM;AACX,KAAK,IAAI,EAAE,MAAM;AACjB;AACA;;AAEA,GAAG,OAAO;AACV,IAAI,MAAM,EAAE,CAAC,CAAC,cAAc,EAAE,WAAW,EAAE,WAAW;AACtD,IAAI,IAAI,EAAE,MAAM;AAChB;AACA;AACA;;AAEA;AACA,CAAC,KAAK,EAAE,WAAW,WAAW,IAAI;AAClC,EAAE,EAAE,UAAU;AACd,QAAQ,KAAK,EAAE,WAAW,WAAW,KAAK,EAAE,WAAW,GAAG,YAAY;AACtE,EAAE,EAAE,YAAY;AAChB,EAAE,EAAE,KAAK,EAAE,WAAW,GAAG;;AAEzB,QAAQ,KAAK,EAAE,WAAW,WAAW,KAAK,EAAE,WAAW,GAAG,UAAU;AACpE,EAAE,EAAE,UAAU;AACd,EAAE,EAAE,KAAK,EAAE,WAAW,GAAG;AACzB,QAAQ;AACR,EAAE,EAAE,UAAU;AACd;;AAEA,CAAC,OAAO;AACR;;AAEA,SAAS,uBAAuB,MAAM,SAAS;AAC/C,CAAC,IAAI,SAAS;AACd,EAAE,WAAW;AACb,EAAE,MAAM;AACR,EAAE,OAAO,KAAK;AACd,EAAE,KAAK,KAAK;AACZ;;AAEA,CAAC,IAAI,IAAI,KAAK;;AAEd,CAAC,KAAK,EAAE,SAAS,uBAAuB;AACxC;AACA,EAAE,OAAO,iBAAiB;AAC1B,EAAE,OAAO,OAAO;AAChB;;AAEA,MAAM,KAAK,EAAE,SAAS,wBAAwB;AAC9C;AACA,EAAE,OAAO,iBAAiB;AAC1B,EAAE,OAAO,OAAO;AAChB,EAAE,OAAO,OAAO,EAAE,GAAG;AACrB;;AAEA,MAAM,KAAK,EAAE,SAAS,oBAAoB;AAC1C;AACA,EAAE,OAAO,iBAAiB;AAC1B,EAAE,OAAO,OAAO;AAChB;;AAEA,MAAM,KAAK,EAAE,SAAS,qBAAqB;AAC3C;AACA,EAAE,OAAO,iBAAiB;AAC1B,EAAE,OAAO,OAAO;AAChB,EAAE,OAAO,OAAO,EAAE,GAAG;AACrB;;AAEA,MAAM;AACN,EAAE,OAAO,OAAO;AAChB,EAAE,OAAO,OAAO;AAChB;;AAEA,CAAC,OAAO,QAAQ,OAAO,OAAO,EAAE,OAAO,EAAE;AACzC,CAAC,OAAO,aAAa,EAAE;;AAEvB,CAAC,OAAO;AACR;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,gBAAgB,MAAM,SAAS;AACxC,CAAC,IAAI,QAAQ;;AAEb,CAAC,SAAS;AACV,EAAE,MAAM;AACR,EAAE,OAAO,KAAK;AACd,EAAE,KAAK,KAAK;AACZ;;AAEA,CAAC,KAAK,IAAI,KAAK,cAAc;AAC7B,EAAE,OAAO,QAAQ,OAAO,OAAO,EAAE,OAAO,EAAE;AAC1C,EAAE,OAAO,aAAa,EAAE;;AAExB;AACA,EAAE,KAAK,EAAE,SAAS,wBAAwB;AAC1C,GAAG,OAAO,iBAAiB;AAC3B,GAAG,OAAO,OAAO;AACjB,GAAG,OAAO,OAAO,EAAE,aAAa,GAAG,GAAG;AACtC;;AAEA;AACA,OAAO,KAAK,EAAE,SAAS,wBAAwB;AAC/C,GAAG,OAAO,iBAAiB;AAC3B,GAAG,OAAO,OAAO;AACjB,GAAG,OAAO,OAAO,EAAE,GAAG;AACtB;;AAEA;AACA,OAAO,KAAK,EAAE,SAAS,qBAAqB;AAC5C,GAAG,OAAO,iBAAiB;AAC3B,GAAG,OAAO,OAAO;AACjB,GAAG,OAAO,OAAO,EAAE,GAAG;AACtB;AACA;;AAEA;AACA,MAAM;AACN,EAAE,OAAO,OAAO;AAChB,EAAE,OAAO,aAAa,KAAK,WAAW,KAAK,KAAK;AAChD,GAAG,OAAO;AACV,IAAI,MAAM,EAAE,MAAM;AAClB,IAAI,IAAI,EAAE,SAAS;AACnB;AACA;AACA;;AAEA,CAAC,OAAO;AACR;;AC5NA,IAAI,aAAa,OAAO,UAAU;AAAlC;;ACGe,SAAS,mBAAmB,MAAM;AACjD,CAAC,IAAI,WAAW,IAAI,eAAe;;AAEnC,CAAC,SAAS,WAAW,OAAO;AAC5B,EAAE,KAAK,CAAC,gBAAgB;AACxB,GAAG,gBAAgB;AACnB,GAAG,IAAI,QAAQ,SAAS,KAAK;AAC7B,IAAI,CAAC,EAAE,eAAe,EAAE,WAAW,SAAS,KAAK;AACjD,KAAK,eAAe,EAAE,OAAO;AAC7B;AACA;AACA;AACA,EAAE,OAfF,gBAemB,CAAC,MAAM,eAAe;AACzC;;AAEA,CAAC,MAAM,IAAI,KAAK;AAChB,EAAE,MAAM,EAAE,OAAO;AACjB;AACA,GAAG,KAAK,KAAK,QAAQ,OAAO,KAAK;;AAEjC,GAAG,KAAK,KAAK,SAAS;AACtB,IAAI,QAAQ,KAAK;AACjB;;AAEA,GAAG,KAAK,KAAK,SAAS;AACtB,MAAM,CAAC,MAAM,UAAU,KAAK;AAC5B,MAAM,CAAC,UAAU,KAAK;AACtB,MAAM,CAAC,CAAC,SAAS,SAAS,KAAK,SAAS;AACxC,IAAI,SAAS,MAAM,KAAK;AACxB;AACA;;AAEA,EAAE,MAAM,EAAE,OAAO;AACjB,GAAG,KAAK,KAAK,SAAS,YAAY;AAClC,IAAI;AACJ;;AAEA,GAAG,KAAK,KAAK,SAAS;AACtB,IAAI,QAAQ,MAAM;AAClB;AACA;AACA;;AAEA,CAAC,OAAO;AACR;;AC7Ce,SAAS,6BAA6B,UAAU;AAC/D,CAAC,IAAI,YAAY;;AAEjB,CAAC,QAAQ,SAAS,KAAK;AACvB,EAAE,KAAK,EAAE,cAAc;;AAEvB,EAAE,KAAK,EAAE,KAAK;AACd,GAAG,WAAW,EAAE;AAChB,SAAS;AACT,GAAG,EAAE,WAAW,SAAS;AACzB;AACA;;AAEA,CAAC,SAAS,iBAAiB,IAAI;AAC/B,EAAE,WAAW,EAAE;AACf;;AAEA,CAAC,SAAS,YAAY,OAAO;AAC7B,EAAE,KApBF,gBAoBiB,CAAC,MAAM,WAAW,SAAS;AAC5C,GAAG,MAAM,IAAI,aAAa,CAAC,sBAAsB,KAAK;AACtD;;AAEA,EAAE,WAAW,SAAS;AACtB;AACA;;AC1BA,MAAM,WAAW,gNAAgN,OAAO;AACxO,MAAM,eAAe;AACrB,MAAM,uBAAuB;;AAE7B;AACA;AACA;AACA;AACA;AACe,SAAS,WAAW,OAAO;AAC1C,CAAC,OAAO,KAAK,SAAS,cAAc;;AAEpC,CAAC,KAAK,qBAAqB,MAAM,KAAK,QAAQ,CAAC,SAAS,SAAS,SAAS;AAC1E,EAAE,OAAO,CAAC,GAAG,KAAK;AAClB;;AAEA,CAAC,OAAO;AACR;;AAEA,IAAI,cAAc;AACX,SAAS,YAAY,OAAO;AACnC,CAAC,OAAO,KAAK,OAAO;AACpB;;ACbA,MAAM,yBAAyB;;AAEhB,SAAS,sBAAsB,UAAU;AACxD,CAAC,IAAI,MAAM;;AAEX,CAAC,KAAK,OAAO,QAAQ,WAAW,WAAW;AAC3C,EAAE,OAAO,QAAQ,OAAO;AACxB,EAAE,MAAM,QAAQ,OAAO;AACvB,QAAQ;AACR,EAAE,OAAO,QAAQ;AACjB;;AAEA,CAAC,IAAI,WAAW;;AAEhB,CAAC,IAAI,MAAM;AACX,EAAE,MAAM,IAAI,aAAa;AACzB,EAAE,KAAK,SAAS,MAAM,OAAO,MAAM;AACnC,GAAG,aAAa;AAChB,GAAG,YAAY;AACf,GAAG,UAAU,EAAE,OAAO,MAAM,OAAO,MAAM;AACzC;AACA,IAAI,KAAK,CAAC,SAAS,uBAAuB,MAAM,SAAS;AACzD,KAAK,SAAS,KAAK,EAAE,OAAO;AAC5B;AACA;AACA;AACA;;AAEA,CAAC,SAAS,SAAS,CAAC,EAAE,OAAO,UAAU,IAAI,KAAK,QAAQ,OAAO;;AAE/D,CAAC,IAAI,EAAE,SAAS,YAAY,uBAAuB,KAAK,MAAM,IAAI;;AAElE,CAAC,4BAA4B;;AAE7B,CAAC,IAAI,UAAU;AACf,CAAC,IAAI,UAAU;;AAEf,CAAC,IAAI,YAAY;;AAEjB,CAAC,KAAK,QAAQ,SAAS;AACvB,EAAE,aAAa,IAAI;;AAEnB;AACA,EAAE,OAAO,MAAM,IAAI,IAAI,YAAY,QAAQ,kBAAkB,QAAQ,SAAS,KAAK;AACnF,GAAG,UAAU,KAAK;AAClB;AACA;;AAEA,CAAC,sBAAsB,SAAS,QAAQ,eAAe;;AAEvD,CAAC,OAAO;AACR;;AAEA,SAAS,uBAAuB,SAAS,QAAQ,YAAY;AAC7D,CAAC,IAAI,WAAW;AAChB,CAAC,IAAI,gBAAgB;;AAErB,CAAC,QAAQ,SAAS,KAAK;AACvB,EAAE,IAAI,WAAW,EAAE;AACnB,EAAE,IAAI;;AAEN,EAAE,WAAW,EAAE;;AAEf;AACA,EAAE,KAzEF,gBAyEiB,CAAC,MAAM,UAAU,aAAa;AAC/C,GAAG,EAAE,OAAO,UAAU;AACtB,GAAG;AACH;;AAEA;AACA,EAAE,KAAK,YAAY,OAAO,QAAQ,eAAe;AACjD,GAAG,OAAO,UAAU;;AAEpB,GAAG,KAlFH,gBAkFkB,CAAC,MAAM,WAAW,SAAS;AAC7C;AACA,IAAI,MAAM,IAAI,OAAO,CAAC,2BAA2B,SAAS,oBAAoB,KAAK;AACnF;AACA;;AAEA,OAAO;AACP,GAAG,IAAI,QAAQ,WAAW;AAC1B,GAAG,IAAI;AACP,GAAG,IAAI,SAAS;AAChB,GAAG,IAAI;;AAEP,GAAG,GAAG;AACN,IAAI,IAAI,MAAM;AACd,IAAI,QAAQ,MAAM,IAAI;AACtB,KAAK,YAAY,SAAS,UAAU,MAAM,OAAO,IAAI,MAAM;;AAE3D,KAAK,KAAK,CAnGV,gBAmGqB,CAAC,MAAM,WAAW,cAAc;AACrD,MAAM,OAAO;AACb,MAAM;AACN;AACA;;AAEA,IAAI,UAAU;AACd,aAAa,CAAC;AACd;;AAEA,EAAE,WAAW,SAAS;AACtB,EAAE,UAAU,aAAa;;AAEzB,EAAE,EAAE,OAAO;AACX;;AAEA;AACA;AACA,CAAC,QAAQ,SAAS,KAAK;AACvB,EAAE,KAAK,EAAE,MAAM,CAtHf,gBAsH0B,CAAC,MAAM,WAAW,EAAE,OAAO;AACrD,GAAG,eAAe,EAAE,SAAS,EAAE;AAC/B;AACA;;AAEA,CAAC,QAAQ,SAAS,KAAK;AACvB,EAAE,KA5HF,gBA4HiB,CAAC,MAAM,eAAe,EAAE,SAAS;AAClD,GAAG,EAAE,OAAO,eAAe,EAAE;AAC7B;AACA;AACA;;ACxHe,SAAS,YAAY,YAAY,eAAe;AAC/D,CAAC,IAAI,UAAU,eAAe;;AAE9B,CAAC,KAAK,WAAW,OAAO,MAAM;AAC9B,EAAE,WAAW;AACb,QAAQ;AACR,EAAE,gBAAgB,WAAW;AAC7B,EAAE,cAAc,WAAW;;AAE3B,EAAE,KAAK,YAAY,OAAO,MAAM;AAChC,GAAG,YAAY;AACf;;AAEA,EAAE,cAAc;AAChB,EAAE,QAAQ,YAAY,OAAO,OAAO;AACpC,GAAG,YAAY;AACf,GAAG,cAAc;AACjB;;AAEA,EAAE,QAAQ,YAAY,OAAO,MAAM;AACnC,GAAG,YAAY;AACf;;AAEA,EAAE,WAAW,cAAc,QAAQ,cAAc,MAAM;AACvD;;AAEA,CAAC,OAAO;AACR;;AAEO,SAAS,iBAAiB,eAAe;AAChD,CAAC,OAAO,WAAW,aAAa;AAChC,EAAE,OAAO,WAAW,YAAY;AAChC;AACA;;ACtCe,SAAS,cAAc,QAAQ;AAC9C,CAAC,IAAI,OAAO;AACZ,CAAC,IAAI,UAAU;AACf,CAAC,IAAI;;AAEL,CAAC,IAAI,aAAa;AAClB,CAAC,IAAI,oBAAoB;;AAEzB,CAAC,SAAS,QAAQ,MAAM;AACxB,EAAE,MAAM,EAAE,OAAO;;AAEjB,EAAE,MAAM,OAAO;;AAEf,EAAE,YAAY,OAAO;AACrB,EAAE,mBAAmB,OAAO;;AAE5B,EAAE,IAAI,QAAQ,SAAS,KAAK;AAC5B,GAAG,MAAM,WAAW,EAAE;;AAEtB,GAAG,KAAK,SAAS,cAAc,SAAS,YAAY;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,KAAK,sBAAsB,KAAK,aAAa;AAChD,IAAI,YAAY,KAAK,MAAM;AAC3B;;AAEA,GAAG,KAlCH,gBAkCkB,CAAC,MAAM,MAAM,SAAS,OAAO;AAC/C;AACA;AACA,IAAI,YAAY;AAChB,IAAI;AACJ;;AAEA,GAAG,OAAO;AACV;;AAEA;AACA,EAAE,SAAS,wBAAwB,aAAa;AAChD,GAAG,KA9CH,gBA8CkB,CAAC,MAAM,mBAAmB,MAAM,WAAW,OAAO;;AAEpE,GAAG,mBAAmB,MAAM,WAAW,OAAO;AAC9C,GAAG,YAAY,WAAW,KAAK,SAAS;AACxC;;AAEA,EAAE,YAAY,KAAK,SAAS;;AAE5B,EAAE,QAAQ,MAAM;AAChB;;AAEA,CAAC,OAAO;;AAER,CAAC,IAAI;;AAEL,CAAC,KAAK,YAAY;AAClB,EAAE,YAAY;AACd,EAAE,UAAU;;AAEZ;AACA,EAAE,UAAU,SAAS,KAAK;AAC1B;AACA,GAAG,YAAY,EAAE,KAAK,SAAS;;AAE/B,GAAG,SAAS,QAAQ,MAAM;AAC1B,IAAI,KAAK,CAAC,mBAAmB,IAAI,MAAM,EAAE,QAAQ,CAAC,CAAC,QAAQ,SAAS,QAAQ;AAC5E,KAAK,YAAY,IAAI,KAAK,SAAS;AACnC,KAAK,QAAQ,MAAM;AACnB;AACA;;AAEA,GAAG,KAAK,CAAC,CAAC,QAAQ,SAAS,MAAM;AACjC,IAAI,QAAQ,MAAM;AAClB;AACA;AACA;;AAEA,CAAC,OAAO;AACR;;AAEA,SAAS,uBAAuB,GAAG,IAAI;AACvC,CAAC,IAAI,WAAW;;AAEhB;AACA,CAAC,IAAI,IAAI,EAAE,QAAQ;AACnB,CAAC,QAAQ,MAAM;AACf,EAAE,KAAK,EAAE,QAAQ,GAAG,WAAW,IAAI;AACnC,GAAG,SAAS,KAAK,OAAO,UAAU,EAAE,QAAQ,GAAG,WAAW,KAAK,KAAK,EAAE;AACtE;AACA;;AAEA;AACA,CAAC,IAAI,uBAAuB;;AAE5B,CAAC,MAAM,EAAE,KAAK;AACd,EAAE,MAAM,EAAE,OAAO;AACjB,GAAG,KAAK,UAAU,MAAM,KAAK,YAAY,KAAK,UAAU,KAAK,OAAO,WAAW;AAC/E,IAAI,OAAO,KAAK;AAChB;;AAEA,GAAG,KAAK,KAAK,SAAS,gBAAgB,CAAC,SAAS,SAAS,KAAK,SAAS;AACvE,IAAI,uBAAuB;AAC3B,IAAI,KAAK;AACT;AACA;AACA;;AAEA,CAAC,OAAO;AACR;;AChHe,SAAS,gBAAgB,SAAS,eAAe;AAChE,CAAC,IAAI,SAAS;;AAEd;AACA,CAAC,QAAQ,SAAS,OAAO;AACzB,EAAE,IAAI,SAAS;;AAEf,EAAE,IAAI,QAAQ,SAAS,KAAK;AAC5B,GAAG,MAAM,WAAW,EAAE;;AAEtB,GAAG,EAAE,WAAW,SAAS,KAAK;AAC9B,IAAI,KAAK,EAAE,UAAU;AACrB;AACA,KAAK,SAAS,oBAAoB;AAClC,KAAK;AACL;;AAEA,IAAI,QAAQ,EAAE,OAAO,CAAC,EAAE,EAAE,KAAK,GAAG,SAAS,GAAG;AAC9C;AACA;;AAEA,EAAE,IAAI,QAAQ,SAAS,KAAK;AAC5B,GAAG,KAAK,CAAC,EAAE,aAAa;;AAExB,GAAG,EAAE,WAAW,SAAS,KAAK;AAC9B,IAAI,KA3BJ,gBA2BmB,CAAC,MAAM,QAAQ,EAAE,SAAS;AAC7C,KAAK,QAAQ,CAAC,EAAE,EAAE,KAAK,GAAG,IAAI,GAAG,MAAM,QAAQ,EAAE;AACjD;AACA;AACA;AACA;;AAEA;AACA,CAAC,QAAQ,SAAS,OAAO;AACzB,EAAE,IAAI,QAAQ,SAAS,KAAK;AAC5B,GAAG,MAAM,WAAW,EAAE;;AAEtB,GAAG,EAAE,WAAW,SAAS,KAAK;AAC9B,IAAI,KAAK,EAAE,UAAU;AACrB,KAAK;AACL;;AAEA,IAAI,WAAW,GAAG,CAAC,EAAE,EAAE,KAAK,GAAG,SAAS,GAAG,GAAG,QAAQ;AACtD;AACA;;AAEA,EAAE,IAAI,QAAQ,SAAS,KAAK;AAC5B,GAAG,KAAK,CAAC,EAAE,aAAa;;AAExB,GAAG,EAAE,WAAW,SAAS,KAAK;AAC9B,IAAI,WAAW,GAAG,CAAC,EAAE,EAAE,KAAK,GAAG,IAAI,GAAG,GAAG,QAAQ;AACjD;AACA;AACA;AACA;;AAEA,SAAS,YAAY,WAAW,MAAM,QAAQ,eAAe;AAC7D,CAAC,IAAI;;AAEL,CAAC,QA7DD,gBA6DmB,CAAC,MAAM,QAAQ,SAAS;AAC3C,EAAE,OAAO,QAAQ;AACjB,EAAE,YAAY;AACd;;AAEA,CAAC,KAAK,YAAY;AAClB,EAAE,MAAM,EAAE,MAAM,aAAa,KAAK,OAAO;AACzC,EAAE,UAAU,SAAS,EAAE,QAAQ,cAAc,YAAY;AACzD;AACA;;ACtEA;AACA;AADA,eAEe,0jBAA0jB,OAAO;;ACEjkB,SAAS,iBAAiB,SAAS;AAClD,CAAC,IAAI,EAAE,SAAS,oBAAoB;AACpC,CAAC,IAAI,YAAY,OAAO;AACxB,CAAC,IAAI,QAAQ;;AAEb,CAAC,IAAI,OAAO,QAAQ,QAAQ,EAAE,UAAU,SAAS;AACjD,EAAE,OAAO,MAAM,IAAI,IAAI,YAAY,SAAS,KAAK,SAAS,KAAK;AAC/D,EAAE,OAAO;AACT,IAAI;;AAEJ;AACA,CAAC,SAAS,SAAS,KAAK,KAAK,KAAK;;AAElC;AACA,CAAC,KAAK,YAAY;AAClB,EAAE,OAAO,MAAM,YAAY,SAAS,MAAM;AAC1C,GAAG,OAAO,OAAO,WAAW;AAC5B,GAAG,MAAM,WAAW,SAAS;AAC7B;AACA;;AAEA;AACA;AACA,CAAC,SAAS,YAAY,IAAI;AAC1B,EAAE,KAAK,EAAE,aAAa,CA5BtB,gBA4BiC,CAAC,MAAM,OAAO,EAAE,OAAO,QAAQ,CA5BhE,gBA4B2E,CAAC,MAAM,MAAM,EAAE,OAAO;AACjG,GAAG,OAAO,EAAE,OAAO,OAAO,EAAE;AAC5B,GAAG,MAAM,EAAE,OAAO;AAClB;AACA;AACA,CAAC,QAAQ,SAAS,OAAO;AACzB,EAAE,IAAI,QAAQ,SAAS;AACvB;;AAEA;AACA;AACA,CAAC,QAAQ,QAAQ,kBAAkB,SAAS,OAAO;AACnD;AACA,EAAE,KAzCF,gBAyCiB,CAAC,MAAM,OAAO,IAAI,OAAO;AAC1C,GAAG,IAAI,OAAO,OAAO,IAAI;AACzB,GAAG;AACH;;AAEA,EAAE,IAAI;AACN,EAAE,IAAI,QAAQ,WAAW,IAAI;AAC7B,EAAE,IAAI,IAAI,MAAM;;AAEhB,EAAE,QAAQ,MAAM;AAChB,GAAG,OAAO,UAAU,MAAM,OAAO,IAAI,MAAM;;AAE3C,GAAG,KAAK,CArDR,gBAqDmB,CAAC,MAAM,MAAM,SAAS;AACzC,IAAI;AACJ;AACA;;AAEA,EAAE,QA1DF,gBA0DoB,CAAC,MAAM,MAAM,SAAS;AAC1C,GAAG,OAAO,MAAM;AAChB;;AAEA,EAAE,MAAM,SAAS;AACjB,EAAE,IAAI,OAAO;AACb;;AAEA,CAAC,OAAO;AACR;;ACnEe,SAAS,gCAAgC,SAAS;AACjE,CAAC,OAAO,QAAQ,SAAS,OAAO;AAChC,EAAE,IAAI,QAAQ,SAAS,KAAK;AAC5B,GAAG,MAAM,iBAAiB,EAAE;;AAE5B,GAAG,KAAK,CAAC,eAAe,aAAa;AACrC,IAAI;AACJ;;AAEA,GAAG,EAAE,WAAW,SAAS,KAAK;AAC9B,IAAI,KAAK,EAAE,YAAY;AACvB,KAAK,eAAe,eAAe;AACnC,WAAW;AACX,KAAK,eAAe,aAAa;AACjC;AACA;AACA;AACA;AACA;;AClBe,SAAS,oBAAoB,MAAM;AAClD,CAAC,IAAI,UAAU;;AAEf,CAAC,IAAI,QAAQ,SAAS,KAAK;AAC3B,EAAE,KAAK,EAAE,aAAa;AACtB,GAAG,EAAE,WAAW,SAAS,KAAK;AAC9B,IAAI,KAAK,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC,QAAQ,SAAS,EAAE,SAAS;AAC1D,KAAK,QAAQ,MAAM,EAAE;AACrB;AACA;AACA;AACA;;AAEA,CAAC,OAAO;AACR;;ACRe,SAAS,yBAAyB,SAAS;AAC1D,CAAC,IAAI,YAAY;AACjB,CAAC,IAAI,WAAW;AAChB,CAAC,IAAI,cAAc,OAAO,gBAAgB,KAAK;;AAE/C,CAAC,OAAO,QAAQ,SAAS,OAAO;AAChC,EAAE,IAAI,QAAQ;;AAEd;AACA,IAAI,QAAQ,IAAI,IAAI;;AAEpB;AACA,IAAI,QAAQ,kBAAkB;;AAE9B,IAAI,QAAQ;;AAEZ,IAAI,QAAQ,mBAAmB;;AAE/B,EAAE,KAAK,IAAI,oBAAoB;AAC/B,GAAG,WAAW,IAAI,SAAS;AAC3B;;AAEA;AACA,EAAE,MAAM,SAAS,QAAQ;AACzB,GAAG,KA9BH,gBA8BkB,CAAC,MAAM,UAAU,SAAS;AAC5C,IAAI,WAAW,SAAS;AACxB,UAAU;AACV,IAAI,UAAU,SAAS;AACvB;AACA;AACA;;AAEA,CAAC,OAAO;AACR;;AC9Be,SAAS,iCAAiC,SAAS;AAClE;AACA,CAAC,IAAI,YAAY,wBAAwB;;AAEzC;AACA;AACA,CAAC,OAAO,QAAQ,SAAS,OAAO;AAChC,EAAE,IAAI,IAAI,IAAI;;AAEd,EAAE,KAAK,IAAI;AACX,GAAG,IAAI;;AAEP,GAAG,KAAK,EAAE,kBAAkB,EAAE,OAAO;AACrC,IAAI,SAtBJ,gBAsBuB,CAAC,MAAM,WAAW,EAAE,UAAU,qBAAqB,KAAK,EAAE;AACjF,KAAK,CAAC,EAAE,IAAI,KAAK,IAAI,EAAE,KAAK;AAC5B,KAAK,EAAE;AACP,UAAU;AACV,IAAI,SA1BJ,gBA0BuB,CAAC,MAAM,WAAW,IAAI,YAAY,EAAE,UAAU,IAAI,QAAQ,CAAC,IAAI,IAAI,eAAe,SAAS,IAAI,WAAW,qBAAqB,KAAK,IAAI;AAC/J,KAAK,CAAC,EAAE,IAAI,KAAK;AACjB,KAAK,IAAI;AACT;;AAEA,GAAG,IAAI,uBAAuB,UAAU;AACxC;AACA;;AAEA;AACA;AACA,CAAC,OAAO,QAAQ,SAAS,OAAO;AAChC,EAAE,IAAI,oBAAoB,IAAI;;AAE9B,EAAE,IAAI,IAAI,eAAe,SAAS,KAAK;AACvC,GAAG,kBAAkB,KAzCrB,gBAyCoC,CAAC,MAAM,WAAW;AACtD,IAAI,CAAC,EAAE,IAAI,KAAK,IAAI,EAAE;AACtB,IAAI;AACJ;;AAEA,EAAE,IAAI,QAAQ,SAAS,KAAK;AAC5B,GAAG,KAAK,EAAE,cAAc;AACxB,IAAI;AACJ;;AAEA,GAAG,MAAM,WAAW,EAAE;;AAEtB,GAAG,EAAE,WAAW,SAAS,KAAK;AAC9B,IAAI,IAAI;;AAER,IAAI,KAAK,EAAE,UAAU;AACrB,KAAK,cAAc,EAAE,OAAO;AAC5B;;AAEA,SAAS;AACT,KAAK,IAAI;AACT,KAAK,IAAI;;AAET,KAAK,KAAK,EAAE,SAAS;AACrB;AACA,MAAM,MAAM,EAAE,OAAO;AACrB,MAAM,gBAAgB,EAAE,OAAO;AAC/B,YAAY;AACZ,MAAM,MAAM;AACZ,MAAM,gBAAgB,EAAE;AACxB;;AAEA,KAAK,MAAM,aAAa,OAAO,IAAI;;AAEnC,KAAK,KAAK,kBAAkB,YAAY;AACxC;AACA;AACA,MAAM,KAAK,SAAS,aAAa;AACjC,OAAO,cAAc,SAAS,aAAa,CAAC,EAAE,WAAW,aAAa;AACtE;;AAEA;AACA;AACA;AACA,WAAW,KAAK,OAAO,CAAC,IAAI,YAAY;AACxC,OAAO,cAAc,IAAI,uBAAuB;AAChD;AACA,YAAY,KAAK,CAAC,SAAS,aAAa;AACxC,MAAM,cAzFN,gBAyF8B,CAAC,MAAM,WAAW;AAChD,OAAO,CAAC,EAAE,WAAW,IAAI,cAAc;AACvC,OAAO;AACP,YAAY;AACZ,MAAM,cAAc,aAAa,MAAM;AACvC;AACA;;AAEA,IAAI,KAAK,gBAAgB,EAAE,KAAK;AAChC,KAAK,mBAAmB,EAAE,OAAO;AACjC;AACA;AACA;AACA;;AAEA,CAAC,SAAS,sBAAsB,KAAK,cAAc;AACnD,EAAE,IAAI,GAAG;;AAET,EAAE,IAAI,OAAO,QAAQ;AACrB,EAAE,QAAQ,MAAM;AAChB,GAAG,WAAW,OAAO,QAAQ;;AAE7B,GAAG,KAAK,QAAQ,WAAW;AAC3B,IAAI;AACJ;;AAEA,GAAG,KAnHH,gBAmHkB,CAAC,MAAM,SAAS,IAAI,WAAW,gBAAgB;AACjE,IAAI,OAAO;AACX;AACA;AACA;AACA;;ACxHe,SAAS,iBAAiB,SAAS;AAClD,CAAC,IAAI,gBAAgB;;AAErB,CAAC,OAAO,YAAY,QAAQ,SAAS,KAAK;AAC1C,EAAE,KAAK,EAAE,aAAa;AACtB,GAAG,EAAE,WAAW,SAAS,KAAK;AAC9B,IAAI,IAAI;AACR,IAAI,IAAI;;AAER,IAAI,KAAK,EAAE,SAAS;AACpB,KAAK,SAAS,EAAE,OAAO;AACvB,KAAK,OAAO,EAAE,OAAO;AACrB,WAAW;AACX,KAAK,SAAS,OAAO;AACrB,KAAK,OAAO,EAAE;AACd;;AAEA,IAAI,WAAW,QAAQ,MAAM,EAAE;AAC/B;AACA;;AAEA,OAAO,KAAK,CAAC,EAAE,aAAa,EAAE,OAAO;AACrC,GAAG,WAAW,OAAO,aAAa,EAAE,MAAM,EAAE;AAC5C;AACA;;AAEA,CAAC,SAAS,YAAY,QAAQ,MAAM,KAAK;AACzC,EAAE,KAAK,CAAC,eAAe,OAAO,OAAO;AACrC,GAAG,eAAe,OAAO,OAAO;AAChC;;AAEA,EAAE,eAAe,OAAO,MAAM,SAAS;AACvC;;AAEA,CAAC,OAAO;AACR;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAAS,yBAAyB,UAAU;AAC3D,CAAC,IAAI,mBAAmB,IAAI,qBAAqB;;AAEjD,CAAC,QAAQ,SAAS,KAAK;AACvB,EAAE,KAAK,EAAE,cAAc;;AAEvB,EAAE,EAAE,WAAW,SAAS,KAAK;AAC7B,GAAG,KAAK,EAAE,UAAU;AACpB,IAAI,oBAAoB,EAAE,OAAO;AACjC,UAAU;AACV,IAAI,kBAAkB,EAAE,OAAO;AAC/B;AACA;AACA;;AAEA,CAAC,OAAO,EAAE,kBAAkB;AAC5B;;ACtBA,IAAI,iBAAiB;AACrB,CAAC,mBAAmB;;AAEL,SAAS,8BAA8B,MAAM,kBAAkB,oBAAoB,QAAQ;AAC1G,CAAC,IAAI,UAAU;;AAEf,CAAC,KAAK,KAAK,SAAS,yBAAyB;AAC7C,EAAE,WAAW,KAAK;AAClB,QAAQ,KAAK,KAAK,SAAS,qBAAqB;AAChD,EAAE,WAAW,KAAK;AAClB,QAAQ;AACR,EAAE;AACF;;AAEA,CAAC,KAAK,SAAS,SAAS,qBAAqB;AAC7C,EAAE,WAAW,SAAS;AACtB,EAAE,wBAAwB;AAC1B;;AAEA,CAAC,KAAK,SAAS,SAAS,eAAe;AACvC,EAAE;AACF;;AAEA,CAAC,IAAI,OAAO,SAAS;;AAErB,CAAC,KA3BD,gBA2BgB,CAAC,MAAM,wBAAwB,qBAAqB,kBAAkB,UAAU,CAAC,MAAM,UAAU,SAAS;AAC1H,EAAE,MAAM,IAAI,OAAO,EAAE,wBAAwB,mBAAmB,mBAAmB,MAAM,OAAO;AAChG;AACA;;AC5Be,SAAS,qBAAqB,MAAM,MAAM,wBAAwB,QAAQ;AACzF,CAAC,IAAI,OAAO,KAAK;AACjB,CAAC,IAAI,cAJL,gBAI6B,CAAC,MAAM,wBAAwB,UAAU,wBAAwB;;AAE9F;AACA;AACA,CAAC,KAAK,eAAe,gBAAgB,QAAQ,CAAC,MAAM,UAAU,MAAM,SAAS;AAC7E;AACA,EAAE,KAAK,SAAS,KAAK,OAAO,KAAK,KAAK;AACtC;AACA;;ACVe,SAAS,2BAA2B,MAAM,MAAM,QAAQ,SAAS,OAAO,kBAAkB;AACzG,CAAC,IAAI;;AAEL,CAAC,KAAK,KAAK,SAAS,yBAAyB;AAC7C,EAAE,WAAW,KAAK;AAClB,QAAQ,KAAK,KAAK,SAAS,qBAAqB;AAChD,EAAE,WAAW,KAAK;AAClB,QAAQ;AACR,EAAE;AACF;;AAEA,CAAC,KAAK,SAAS,SAAS,eAAe;AACvC,EAAE;AACF;;AAEA,CAAC,IAAI,OAAO,SAAS;;AAErB,CAAC,KAAK,MAAM,UAAU,MAAM,SAAS;AACrC,EAAE;AACF;;AAEA,CAAC,KAAK,WAvBN,gBAuB2B,CAAC,MAAM,SAAS,SAAS;AACpD,EAAE,IAAI,WAAW,SAAS;;AAE1B,EAAE,KAAK,CAAC,CAAC,kBAAkB;AAC3B,GAAG,gBAAgB,KAAK,EAAE,MAAM;AAChC,GAAG;AACH;;AAEA;AACA,EAAE,KAAK,KAAK,aAAa,QAAQ,KAAK,aAAa,OAAO;AAC1D,GAAG,IAAI,SAAS,CAAC;AACjB,GAAG,IAAI,SAAS,CAAC,YAAY,SAAS,KAAK,KAAK;AAChD,GAAG,KAAK,OAAO,SAAS,wBAAwB;AAChD,IAAI,KAAK,CAAC,KAAK,SAAS;AACxB,KAAK,UAAU,CAAC,IAAI,KAAK,GAAG,KAAK,aAAa,OAAO,MAAM,IAAI;AAC/D;AACA,IAAI,UAAU,CAAC;AACf,IAAI,UAAU,CAAC;AACf;AACA,GAAG,KAAK,QAAQ,KAAK,OAAO;AAC5B,GAAG,KAAK,QAAQ,KAAK,KAAK;AAC1B,SAAS;AACT,GAAG,KAAK,QAAQ,KAAK,OAAO,CAAC,UAAU,SAAS;AAChD;AACA;AACA;;AC3Ce,SAAS,cAAc,KAAK,MAAM,wBAAwB,kBAAkB,oBAAoB,cAAc;AAC7H,CAAC,IAAI,QAAQ,IAAI;AACjB,CAAC,IAAI,aAAa,IAAI;AACtB,CAAC,IAAI,kBAAkB;AACvB,CAAC,IAAI,0BAA0B;;AAE/B,CAAC,MAAM,KAAK;AACZ,EAAE,MAAM,EAAE,MAAM,SAAS;AACzB;AACA,GAAG,KAAK,KAAK,QAAQ,OAAO,KAAK;;AAEjC,GAAG,KAAK,KAAK,SAAS;AACtB,IAAI,QAAQ,KAAK;AACjB,UAAU,KAAK,KAAK,cAAc;AAClC,IAAI,aAAa,KAAK;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,KAAK,KAAK,SAAS,wBAAwB;AAC9C,IAAI,0BAA0B;AAC9B,IAAI,kBAAkB;AACtB,IAAI;AACJ;;AAEA,GAAG,6BAA6B,MAAM,kBAAkB,oBAAoB;;AAE5E;AACA;AACA,GAAG,KAAK,UAAU,IAAI,SAAS;AAC/B,IAAI,0BAA0B,MAAM,MAAM,QAAQ,aAAa,OAAO;AACtE;;AAEA,GAAG,KAAK,KAAK,SAAS,gBAAgB,OAAO,SAAS,uBAAuB;AAC7E,IAAI,oBAAoB,MAAM,MAAM,wBAAwB;AAC5D;;AAEA;AACA,GAAG,KAAK,KAAK,SAAS,oBAAoB,KAAK,YAAY;AAC3D,IAAI,KAAK,SAAS,KAAK,OAAO,KAAK,KAAK;AACxC;AACA;;AAEA,EAAE,MAAM,EAAE,OAAO;AACjB;AACA,GAAG,KAAK,KAAK,SAAS,wBAAwB;AAC9C,IAAI,KAAK,gBAAgB,SAAS;AAClC,KAAK,KAAK,QAAQ,KAAK,KAAK,gBAAgB,KAAK,uBAAuB,MAAM;AAC9E;;AAEA,IAAI,kBAAkB;AACtB;;AAEA,GAAG,KAAK,KAAK,SAAS;AACtB,IAAI,QAAQ,MAAM;AAClB,UAAU,KAAK,KAAK,cAAc;AAClC,IAAI,aAAa,WAAW;AAC5B;AACA;AACA;AACA;;AAEA,SAAS,uBAAuB,IAAI;AACpC,CAAC,OAAO,CAAC,WAAW,EAAE,SAAS,KAAK,EAAE,KAAK;AAC3C;;ACrEe,SAJf,oCAIqC,GAAG,QAAQ,KAAK,OAAO;AAC5D,CAAC,IAAI,yBAAyB,IAAI;AAClC,CAAC,IAAI,EAAE,kBAAkB,uBAAuB,wBAAwB,IAAI;;AAE5E,CAAC,IAAI,cARL,gBAQ6B,CAAC,MAAM,OAAO,SAAS,IAAI,QAAQ,OAAO,SAAS,IAAI;;AAEpF,CAAC,aAAa,IAAI,KAAK,MAAM,wBAAwB,kBAAkB,oBAAoB;;AAE3F;AACA,CAAC,IAAI,QAAQ,SAAS,KAAK;AAC3B,EAAE,KAAK,CAAC,EAAE,cAAc;AACxB,GAAG,KAAK,QAAQ,EAAE,OAAO,EAAE;AAC3B;AACA;;AAEA,CAAC,IAAI,oBAAoB;;AAEzB;AACA,CAAC,IAAI,QAAQ,SAAS,KAAK;AAC3B,EAAE,IAAI;;AAEN,EAAE,KAAK,EAAE,YAAY;AACrB,GAAG,KAAK,EAAE,SAAS,mBAAmB,EAAE,SAAS,eAAe;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI,KAAK,QAAQ,EAAE,OAAO,EAAE;AAC5B;;AAEA,QAAQ,KAAK,EAAE,KAAK,iBAAiB,OAAO,EAAE,KAAK,YAAY,SAAS;AACxE,IAAI,KAAK,SAAS,uBAAuB,UAAU;AACnD,KAAK,KAAK,QAAQ,EAAE,OAAO,EAAE;AAC7B,WAAW;AACX,KAAK,IAAI,WA9CT,gBA8C8B,CAAC,MAAM,wBAAwB,SAAS,wBAAwB,SAAS;AACvG,KAAK,KAAK,SAAS,EAAE,OAAO,EAAE,KAAK,CAAC,MAAM,uBAAuB,QAAQ,KAAK,SAAS;AACvF;AACA;;AAEA,QAAQ;AACR,IAAI,KAAK,SAAS,EAAE,OAAO,EAAE,YAAY,CAAC,MAAM,uBAAuB,QAAQ;AAC/E;;AAEA,GAAG;AACH;;AAEA,EAAE,KAAK,EAAE,iBAAiB;AAC1B,GAAG,KAAK,EAAE,SAAS,kBAAkB;AACrC,IAAI,mBAAmB,EAAE,SAAS;AAClC;;AAEA,GAAG,KAAK,QAAQ,EAAE,OAAO,EAAE;AAC3B,SAAS;AACT,GAAG,KAAK,QAAQ,EAAE,OAAO,EAAE;AAC3B;AACA;;AAEA;AACA;AACA;AACA,CAAC,IAAI,YAAY,KAAK;AACtB,CAAC,KAAK,IAAI,oBAAoB;AAC9B,EAAE,IAAI,uBAAuB,CAAC,MAAM,IAAI,KAAK;AAC7C,GAAG,mBAAmB;;AAEtB,EAAE,IAAI,QAAQ,SAAS,KAAK;AAC5B,GAAG,KAAK,EAAE,iBAAiB;AAC3B,IAAI,iBAAiB,MAAM,YAAY,CAAC,MAAM,EAAE,KAAK,eAAe,uBAAuB,EAAE,MAAM;AACnG;;AAEA,QAAQ,KAAK,EAAE,YAAY;AAC3B,IAAI,iBAAiB,MAAM,YAAY,CAAC,0BAA0B,uBAAuB,QAAQ;AACjG;;AAEA,QAAQ;AACR,IAAI,EAAE,WAAW,SAAS,KAAK;AAC/B,KAAK,iBAAiB,MAAM,YAAY,CAAC,MAAM,EAAE,KAAK,eAAe,EAAE,KAAK;AAC5E;AACA;AACA;;AAEA,EAAE,wBAAwB,iBAAiB,MAAM,UAAU;;AAE3D,EAAE,KAAK,SAAS;AAChB;;AAEA;AACA;AACA;AACA,CAAC,KAAK,cAAc;AACpB,EAAE,IAAI,cAAc;;AAEpB,EAAE,OAAO,MAAM,cAAc,SAAS,QAAQ;AAC9C,GAAG,IAAI,WAAW,aAAa;AAC/B,GAAG,YAAY,MAAM,CAAC,UAAU,SAAS,KAAK,uBAAuB,MAAM;AAC3E;;AAEA,EAAE,KAAK,YAAY,SAAS;AAC5B,GAAG,KAAK,OAAO,QAAQ,SAAS,YAAY,MAAM;AAClD;AACA;;AAEA,CAAC,OAAO,KAAK;AACb;;AC5Ge,SAAS,UAAU,SAAS;AAC3C,CAAC,OAAO,OAAO,IAAI,YAAY,OAAO;AACtC,EAAE,WAAW;AACb;;AAEA;AACA,CAbA,cAaoB,EAAE;;AAEtB;AACA;AACA,CAAC,+BAA+B;;AAEhC;AACA;AACA,CAAC,gCAAgC;;AAEjC,CAAC,OAAO,UAAU,gBAAgB;;AAElC,CAAC,OAAO,QAAQ,SAAS,OAAO;AAChC;AACA,EAAE,IAAI,QAAQ,SAAS,KAAK;AAC5B,GAAG,MAAM,WAAW,EAAE;;AAEtB,GAAG,KAAK,SAAS,cAAc,SAAS,aAAa,EAAE,UAAU;AACjE,IAAI;AACJ;;AAEA,GAAG,EAAE,WAAW,SAAS,KAAK;AAC9B,IAAI,KAAK,CAAC,SAAS,YAAY,EAAE,SAAS;AAC1C,KAAK,MAAM,IAAI,OAAO,CAAC,UAAU,SAAS,GAAG,qBAAqB,EAAE,KAAK,kBAAkB,IAAI,GAAG;AAClG;AACA;AACA;;AAEA,EAAE,OAAO,KAAK,UAAU;AACxB,GAAG,UAAU,IAAI;AACjB,GAAG,SA3CH,oCA2CyB,EAAE,QAAQ,KAAK,IAAI;AAC5C,GAAG,uBAAuB,IAAI,IAAI;AAClC;AACA;AACA;;ACzCe,SAAS,YAAY,MAAM;AAC1C,CAAC,IAAI,OAAO,IAAI,aAAa,IAAI;;AAEjC,CAAC,IAAI,WAAW;;AAEhB,CAAC,IAAI;AACL,EAAE,IAAI,MAAM,IAAI,SAAS,MAAM,OAAO,IAAI,MAAM;AAChD,GAAG,aAAa;AAChB,GAAG,YAAY;AACf,GAAG,UAAU,EAAE,OAAO,MAAM,OAAO,MAAM;AACzC;AACA,IAAI,KAAK,CAAC,SAAS,uBAAuB,MAAM,SAAS;AACzD,KAAK,SAAS,KAAK,EAAE,OAAO;AAC5B;AACA;AACA;;AAEA,EAAE,SAAS,SAAS,CAAC,EAAE,OAAO,UAAU,IAAI,KAAK,QAAQ,OAAO;AAChE,EAAE,aAAa,IAAI;AACnB,GAAG,QAAQ,MAAM;AACjB;AACA;AACA,EAAE,KAAK,IAAI,MAAM;AACjB,GAAG,IAAI,OAAO,IAAI;AAClB;;AAEA,EAAE,MAAM;AACR;;AAEA,CAAC,IAAI,EAAE,SAAS,YAAY,uBAAuB,KAAK,IAAI,MAAM,IAAI;;AAEtE,CAAC,4BAA4B;;AAE7B,CAAC,IAAI,UAAU;AACf,CAAC,IAAI,UAAU;;AAEf;AACA;AACA,CAAC,IAAI,yBAAyB;;AAE9B;AACA;AACA,CAAC,IAAI,aAAa;;AAElB,CAAC,QAAQ,SAAS,KAAK;AACvB,EAAE,KAAK,EAAE,YAAY;AACrB,GAAG,IAAI,WAAW,UAAU;AAC5B;;AAEA,OAAO,KAAK,EAAE,OAAO;AACrB,GAAG,IAAI,YAAY,EAAE,SAAS;AAC9B;;AAEA,OAAO,KAAK,EAAE,aAAa;AAC3B,GAAG,EAAE,WAAW,SAAS,KAAK;AAC9B,IAAI,IAAI,YAAY,EAAE,SAAS;AAC/B;AACA;;AAEA,OAAO;AACP,GAAG,MAAM,IAAI,OAAO;AACpB;AACA;;AAEA,CAAC,OAAO;AACR;;AC9DA,MATA,0BASa,GAAG,OAAO;;AAER,SAAS,YAAY,UAAU;AAC9C,CAAC,IAAI,QAAQ,QAAQ,MAAM,SAAS,SAAS;AAC7C,CAAC,IAAI,cAAc,QAAQ,WAAW;AACtC,CAAC,IAAI,UAAU;AACf,CAAC,IAAI,eAAe;AACpB,CAAC,IAAI,gBAAgB;AACrB,CAAC,IAAI,OAAO,QAAQ;AACpB,CAAC,IAAI,QAAQ,QAAQ;AACrB,CAAC,IAAI,OAAO,EAAE,QAAQ,OAnBtB,KAmBiC,CAAC,SAAS,QAAQ,SAAS,QAAQ,UAAU;AAC9E,CAAC,IAAI,kBAAkB;AACvB,CAAC,IAAI,uBAAuB;;AAE5B,CAAC,KAAK,CAAC,MAAM,SAAS,SAAS;AAC/B,EAAE,QAAQ,MAAM,WAAW,KAAK;AAChC;;AAEA;AACA,CAAC,QAAQ,WAAW,OAAO,MAAM,QAAQ,UAAU,SAAS,gBAAgB;AAC5E,EAAE,aA7BF,KA6BmB,CAAC,SAAS,MAAM,mBAAmB,QAAQ,SAAS;AACvE;;AAEA,CAAC,IAAI,kBAAkB;;AAEvB,CAAC,OAAO,aAAa,MAAM,aAAa,OAAO,OAAO,MAAM,gBAAgB;AAC5E,EAAE,OAAO,aAAa,OAAO,eAAe,MAAM,eAAe;AACjE,GAAG,OApCH,0BAoCiB,CAAC,KAAK,kBAAkB,MAAM,MAAM;AACrD,IAAI,UAAU,aAAa;;AAE3B,IAAI,IAAI,SAAS;AACjB,KAAK;AACL,KAAK;AACL,KAAK;AACL,KAAK;AACL;;AAEA,IAAI,eAAe,SAAS;AAC5B,IAAI,SAAS;;AAEb,IAAI,OAAO;AACX;;AAEA;AACA,IAAI,WAAW,MAAM;AACrB,EAAE,KAAK,IAAI,SAAS,WAAW;AAC/B,GAAG,MAAM,IAAI,OAAO,kCAAkC,QAAQ;AAC9D;;AAEA,EAAE,MAAM;AACR;;AAEA,CAAC,SAAS,cAAc,UAAU,eAAe;AACjD,EAAE,KAAK,CA9DP,gBA8DkB,CAAC,MAAM,eAAe,iBAAiB;AACzD,GAAG,eAAe,iBAAiB;AACnC,IAhEA,gBAgEc,CAAC,MAAM,aAAa;AAClC,KAjEA,0BAiEY,CAAC,SAAS,aAAa;AACnC,KAAK,OAAO,UAAU,eAAe,MAAM;AAC3C,KAAK,MAAM,WAAW,SAAS;AAC/B,IAAI,IAAI,MAAM;;AAEd;AACA,IAAI,KAAK,OAAO,WAAW,WAAW;AACtC,KAAK,OAAO,OAAO;AACnB,KAAK,MAAM,OAAO;AAClB,WAAW;AACX,KAAK,OAAO;AACZ,KAAK,MAAM;AACX;;AAEA,IAAI,KAAK,QAAQ,YAAY;AAC7B,KAAK,OAAO,QAAQ,WAAW,MAAM;;AAErC,KAAK,KAAK,OAAO,SAAS,YAAY,CAAC,YAAY,SAAS;AAC5D,MAAM,MAAM,IAAI,OAAO;AACvB;AACA;;AAEA,IAAI,IAAI,SAAS,UAAU;AAC3B,KAAK,IAAI;AACT,KAAK,MAAM;AACX,KAAK;AACL,KAAK;;AAEL;AACA,KAAK,cA9FL,KA8FuB,CAAC,UAAU,MAAM;AACxC;;AAEA,IAAI,QAAQ,MAAM;AAClB,IAAI,cAAc,aAAa;;AAE/B,IAAI,IAAI,WAAW,OAAO,QAAQ,KAAK,KAAK;AAC5C;AACA,KAAK,MAAM,KAAK,WAAW,EAAE,MAAM,OAAO;;AAE1C,KAAK,KAAK,OAAO,WAAW;AAC5B,MAAM,MAAM,IAAI,OAAO,eAAe,WAAW;AACjD;;AAEA;AACA,KAAK,KAAK,QAAQ,CAAC,KAAK,SAAS,OAAO;AACxC,MAAM,MAAM,gBAAgB;AAC5B,OAAO;AACP,OAAO,WAAW;AAClB;;AAEA,MAAM,EAAE,SAAS;AACjB,MAAM,OAAO;AACb;;AAEA,KAAK,OAAO,aAAa,MAAM,aAAa,IAAI,cAAc,QAAQ,cAAc,MAAM,gBAAgB;AAC1G,MAAM,IAAI,UAxHV,gBAwH8B,CAAC,MAAM,eAAe,kBAAkB,eAAe;AACrF,MAAM,IAAI,WAAW,CAAC,CAAC;;AAEvB,MAAM,KAAK,WAAW;AACtB;AACA;AACA,OAAO,gBAAgB;AACvB,QAAQ,QAAQ,MAAM,UAAU,EAAE,SAAS;AAC3C;;AAEA;AACA,OAAO;AACP;;AAEA,MAAM,OAAO,aAAa,IAAI,eAAe,MAAM,UAAU,EAAE,SAAS;AACxE,QAAQ,SAAS,cAAc,MAAM;AACrC,MAAM,KAAK,IAAI,SAAS,WAAW;AACnC;AACA,OAAO,IAAI,iBA1IX,gBA0IsC,CAAC,MAAM,sBAAsB,QAAQ,sBAAsB;;AAEjG,OAAO,KAAK,CAAC,iBAAiB;AAC9B,QAAQ,iBAAiB;AACzB,SAAS;AACT,SAAS,YAAY;AACrB;;AAEA,QAAQ,gBAAgB,MAAM;AAC9B,QAAQ,sBAAsB,OAAO;AACrC;;AAEA,OAAO,EAAE,SAAS;AAClB,aAAa;AACb,OAAO,MAAM;AACb;AACA;AACA;;AAEA,IAAI,OA7JJ,0BA6JkB,CAAC,KAAK;AACxB,MAAM,MAAM,MAAM;AAClB;AACA;;AAEA,EAAE,OAAO,eAAe;AACxB;AACA;;AAEA,SAAS,cAAc,MAAM,aAAa,UAAU,cAAc,WAAW;AAC7E,CAAC,MAAM,QAAQ,SAAS,SAAS,SAAS;;AAE1C,CAAC,OAAO,SAAS,MAAM,QAAQ,OAAO;AACtC,GAAG,OAAO,MAAM,SAAS,MAAM,QA1K/B,KA0K2C,CAAC,MAAM,YAAY;AAC9D,GAAG,OAAO,WAAW,MAAM;AAC3B,GAAG,MAAM,kBAAkB,YA5K3B,0BA4K8C,CAAC,SAAS,UAAU,UAAU;;AAE5E,GAAG,KAAK,kBAAkB;AAC1B,IAAI,OAAO,gBAAgB,MAAM,gBAAgB;AACjD,KAAK,KAAK,CAAC,eAAe;AAC1B;AACA,MAAM,IAAI,MAAM,IAAI;AACpB,MAAM,IAAI,OAAO;AACjB,MAAM,MAAM;AACZ;;AAEA,KAAK,OAAO,OAAO,MAAM,eAAe,MAAM,MAvL9C,KAuLwD,CAAC,SAAS,MAAM;AACxE;AACA,UAAU;AACV,IAAI,MAAM;AACV;AACA;AACA;;AAEA,SAAS,UAAU,MAAM,UAAU,cAAc;AACjD,CAAC,MAAM,eAhMP,KAgM0B,CAAC,SAAS,MAAM;;AAE1C,CAAC,KAlMD,gBAkMgB,CAAC,MAAM,aAAa,iBAAiB;AACrD,EAAE,OAnMF,0BAmMgB,CAAC,SAAS;AAC1B;AACA,CAAC,OAAO,OAAO,MAAM,eAAe,MAAM,MAAM;AAChD;;AAEA,SAAS,aAAa,MAAM;AAC5B,CAAC,OAAO,OAAO,OAAO,IAAI,SAAS;AACnC;;AC1Me,SAAS,6BAA6B,aAAa,OAAO;AACzE,CAAC,KAAK,CAAC,cAAc;AACrB,EAAE;AACF;;AAEA,CAAC,IAAI;;AAEL,CAAC,SAAS,YAAY;AACtB,EAAE,KAAK;AACP,EAAE,KAAK;AACP,GAAG,KAAK,QAAQ,YAAY,OAAO,YAAY;AAC/C,GAAG,gBAAgB,YAAY;AAC/B,GAAG;;AAEH,EAAE,KAAK;AACP,EAAE,KAAK;AACP,GAAG,KAAK,YAAY,UAAU;AAC9B,IAAI,KAAK,SAAS,YAAY,OAAO,YAAY,YAAY;AAC7D,UAAU;AACV,IAAI,KAAK,SAAS,YAAY,OAAO,YAAY,YAAY;AAC7D,IAAI,gBAAgB;AACpB;;AAEA;AACA;AACA;AACA,GAAG,KAAK,KAAK,UAAU,YAAY,MAAM,QAAQ,MAAM;AACvD,IAAI,KAAK,QAAQ,YAAY,KAAK;AAClC;;AAEA,GAAG;;AAEH,EAAE,KAAK;AACP,GAAG,KAAK,QAAQ,YAAY,OAAO,YAAY;AAC/C,GAAG,gBAAgB,YAAY;AAC/B,GAAG;;AAEH,EAAE;AACF,GAAG,MAAM,IAAI,OAAO,CAAC,0BAA0B,YAAY,KAAK;AAChE;;AAEA,CAAC,KAAK,gBAAgB;AACtB,EAAE,KAAK,QAAQ,CAAC,WAAW,cAAc;AACzC;AACA;;ACzCA,MAAM,gBAAgB;;AAEtB,IALA,2BAKU,GAAG;;AAEE,SAAS,gBAAgB,gBAAgB,MAAM,SAAS,YAAY,WAAW;AAC9F;AACA,CAAC,KAAK,QAAQ,SAAS,KAAK,SAAS,QAAQ;AAC7C,CAAC,KAAK,QAAQ,SAAS,KAAK,QAAQ,QAAQ;;AAE5C,CAAC,IAAI,OAAO,KAAK;AACjB,CAAC,IAAI;;AAEL,CAAC,KAAK,CAAC,CAAC,QAAQ,YAAY;AAC5B,EAAE,KAAK,QAAQ,cAAc,YAAY,CAAC,QAAQ,gBAAgB;AAClE,GAAG,MAAM,IAAI,OAAO;AACpB;;AAEA,EAAE,KAAK,CAAC,YAAY,CAAC,QAAQ,kBAAkB;AAC/C,GAAG,MAAM,IAAI,OAAO;AACpB;;AAEA,EAAE,IAAI;AACN,EAAE,KAAK,QAAQ,cAAc,WAAW;AACxC,GAAG,gBAAgB;AACnB,SAAS;AACT,GAAG,gBAAgB,cAAc,MAAM,QAAQ,kBAAkB,QAAQ,gBAAgB,OAAO,WAAW,QAAQ,gBAAgB;AACnI;;AAEA,EAAE,KAAK,WAAW;AAClB,GAAG,8BAA8B;AACjC,SAAS;AACT,GAAG,8BAA8B;AACjC;;AAEA,EAAE,MAAM,KAAK,YAAY;AACzB,GAAG,gBAAgB;AACnB,GAAG,MAAM;AACT,GAAG,QAAQ,EAAE,iBAAiB,CAAC,aAAa,iBAAiB,eAAe,QAAQ,oBAAoB;AACxG;;AAEA,EAAE,KAAK,QAAQ,cAAc,WAAW;AACxC,GAAG,QAAQ,mBAAmB,cAAc,IAAI;AAChD,GAAG,MAAM;AACT,SAAS;AACT,GAAG,QAAQ,mBAAmB,cAAc,gBAAgB;AAC5D;AACA,QAAQ;AACR,EAAE,MAAM;AACR;;AAEA,CAAC,OAAO;AACR,EAAE;AACF,EAAE;AACF,EAAE,SAAS,GAAG;AACd,GAAG,KAAK,CAzDR,2BAyDe,EAAE,eAAe;AAChC,IAAI,QAAQ,KAAK,CAAC,qBAAqB,WAAW;AAClD,IA3DA,2BA2DU,EAAE,eAAe;AAC3B;;AAEA,GAAG,OAAO;AACV;AACA;AACA;;AAEA,SAAS,kBAAkB,MAAM,KAAK;AACtC,CAAC,IAAI,WAAW,SAAS;;AAEzB,CAAC,YAAY,WAAW;AACxB,CAAC,UAAU,WAAW;;AAEtB,CAAC,UAAU;;AAEX,CAAC,QAAQ,UAAU,OAAO,MAAM;AAChC,EAAE,UAAU;AACZ;;AAEA,CAAC,QAAQ,UAAU,OAAO,QAAQ,KAAK;AACvC,EAAE,UAAU;AACZ,EAAE,QAAQ;AACV;;AAEA,CAAC,KAAK,UAAU,SAAS;AACzB,EAAE,IAAI,UAAU;AAChB,EAAE,QAAQ,MAAM,UAAU,KAAK;;AAE/B,EAAE,OAAO,UAAU,QAAQ,UAAU,MAAM;AAC3C,QAAQ;AACR,EAAE,QAAQ,SAAS;AACnB,EAAE,OAAO,QAAQ,MAAM;AACvB;AACA;;AAEA,SAAS,+BAA+B,SAAS;AACjD,CAAC,OAAO,QAAQ,SAAS,OAAO;AAChC,EAAE,MAAM,IAAI,KAAK;AACjB,GAAG,OAAO,QAAQ;AAClB,IAAI,IAAI,KAAK,sBAAsB,KAAK;AACxC;AACA;AACA;AACA;;AAEA,SAAS,+BAA+B,MAAM;AAC9C,CAAC,MAAM,IAAI,KAAK;AAChB,EAAE,OAAO,QAAQ;AACjB,GAAG,IAAI,KAAK,sBAAsB,KAAK;AACvC;AACA;AACA;;AC7Ge,SAAS,kBAAkB,EAAE,SAAS,eAAe,QAAQ;AAC5E,CAAC,IAAI,QAAQ;AACb,CAAC,IAAI,QAAQ;AACb,CAAC,IAAI,OAAO;AACZ,CAAC,IAAI,eAAe;;AAEpB,CAAC,QAAQ,SAAS,KAAK;AACvB,EAAE,IAAI,OAAO,EAAE,MAAM,EAAE;;AAEvB,EAAE,KAAK,CAAC,MAAM,SAAS;AACvB,GAAG,MAAM,SAAS;;AAElB,GAAG,MAAM,MAAM;;AAEf;AACA;AACA;AACA,GAAG,KAAK,EAAE,EAAE,gBAAgB,EAAE,kBAAkB,EAAE,cAAc,EAAE,WAAW,WAAW;AACxF,IAAI,QAAQ,eAAe;AAC3B,KAAK,MAAM,MAAM,CAAC,OAAO,MAAM,OAAO;AACtC,KAAK;AACL;AACA,IAAI,MAAM,MAAM,EAAE;AAClB,UAAU;AACV,IAAI;AACJ;AACA;AACA;;AAEA,CAAC,IAAI,MAAM,gBAAgB,MAAM,KAAK,gBAAgB,WAAW,cAAc,WAAW,MAAM;;AAEhG,CAAC,OAAO,EAAE,KAAK,OAAO;AACtB;;AChCe,SAAS,cAAc,OAAO;AAC7C,CAAC,OAAO,OAAO,OAAO,SAAS,OAAO;AACtC;;ACFe,SAAS,aAAa,MAAM;AAC3C,CAAC,OAAO,IAAI,SAAS,MAAM,IAAI,KAAK,QAAQ,MAAM,SAAS,QAAQ;AACnE;;ACAe,SAAS,UAAU,EAAE,MAAM,SAAS,YAAY,WAAW,eAAe,aAAa;AACtG,CAAC,IAAI,EAAE,KAAK,UAAU,iBAAiB,EAAE,MAAM,SAAS;;AAExD,CAAC,KAAK,aAAa;AACnB,EAAE,IAAI,SAAS;AACf,EAAE,MAAM,SAAS;AACjB;;AAEA,CAAC,IAAI,QAAQ;AACb,SAAS,YAAY,MAAM,EAAE,WAAW,KAAK,YAAY,MAAM,MAAM,QAAQ;;AAE7E;;AAEA,CAAC,KAAK,YAAY;AAClB,EAAE,SAAS,CAAC,EAAE,UAAU;AACxB;;AAEA,CAAC,OAAO;AACR;;AClBe,SAJf,qBAI2B,GAAG,KAAK,UAAU;AAC7C,CAAC,IAAI,QAAQ,SAAS,KAAK;AAC3B,EAAE,IAAI,KAAK,QAAQ,EAAE,OAAO,EAAE;AAC9B;;AAEA,CAAC,4BAA4B,IAAI,QAAQ,IAAI,IAAI;;AAEjD,CAAC,IAAI,QAAQ,SAAS;AACtB,EAAE,MAAM,QAAQ;AAChB,EAAE,SAAS,IAAI;AACf,EAAE,eAAe,QAAQ;AACzB,EAAE,WAAW,IAAI,KAAK;AACtB,EAAE,WAAW,QAAQ,cAAc;AACnC;;AAEA,CAAC,IAAI,KAAK;AACV,GAAG;AACH,GAAG,SAAS;AACZ,GAAG;AACH,GAAG,QAAQ;;AAEX,CAAC,OAAO,eAAe,KAAK,IAAI,MAAM,SAAS;AAC/C;;ACtBe,SAJf,qBAI2B,GAAG,KAAK,UAAU;AAC7C,CAAC,IAAI,OAAO;;AAEZ,CAAC,IAAI,QAAQ,SAAS,KAAK;AAC3B,EAAE,KAAK,CARP,gBAQkB,CAAC,MAAM,MAAM,EAAE,SAAS;AAC1C,GAAG,IAAI,cAAc,EAAE,UAAU,CAAC,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC,MAAM,EAAE,GAAG,KAAK,IAAI,EAAE,MAAM;AAClF,GAAG,IAAI,KAAK,SAAS,EAAE,OAAO,EAAE,KAAK;;AAErC,GAAG,MAAM,EAAE,SAAS;AACpB,SAAS;AACT,GAAG,IAAI,KAAK,QAAQ,EAAE,OAAO,EAAE;AAC/B;AACA;;AAEA,CAAC,IAAI,oBAAoB,IAAI,QAAQ;;AAErC,CAAC,KAAK,oBAAoB;AAC1B,EAAE,SAAS,kBAAkB;AAC7B,GAAG,KAAK;AACR,GAAG,KAAK;AACR,IAAI,IAAI,KAAK,QAAQ,kBAAkB,OAAO,kBAAkB;AAChE,IAAI,IAAI,KAAK,SAAS,kBAAkB,KAAK,kBAAkB,KAAK,CAAC,qBAAqB,kBAAkB,KAAK,YAAY,GAAG,KAAK;AACrI,IAAI;;AAEJ,GAAG;AACH,IAAI,IAAI,KAAK,SAAS,kBAAkB,OAAO,kBAAkB,YAAY;AAC7E,IAAI;AACJ;AACA;;AAEA,CAAC,KAAK,QAAQ,cAAc,QAAQ;AACpC,EAAE,IAAI,KAAK,SAAS,sBAAsB;AAC1C;;AAEA,CAAC,OAAO,eAAe,KAAK,IAAI,MAAM,SAAS;AAC/C;;AClCe,SAAS,UAAU,EAAE,SAAS,MAAM,YAAY,SAAS,eAAe,kBAAkB,WAAW,QAAQ,aAAa;AACzI,CAAC,MAAM,kBAAkB,YAAY,CAAC,kBAAkB;AACxD,CAAC,IAAI;;AAEL,CAAC,KAAK,CAAC,cAAc,CAAC,QAAQ,SAAS;AACvC,EAAE;AACF,GAAG,CAAC;AACJ;AACA,0DAA0D,YAAY,SAAS;AAC/E;AACA,oBAAoB;;AAEpB;AACA;;AAEA,MAAM;AACN,EAAE,IAAI,EAAE,KAAK,OAAO,UAAU,iBAAiB,EAAE,SAAS,MAAM,SAAS;;AAEzE,EAAE,IAAI,WAAW,WAAW,cAAc;;AAE1C,EAAE,KAAK,SAAS;AAChB,GAAG,YAAY,CAAC,UAAU,EAAE,aAAa,EAAE,cAAc,KAAK,QAAQ,MAAM,KAAK,QAAQ,MAAM,OAAO;AACtG,GAAG,IAAI,aAAa,EAAE,aAAa,EAAE,CAAC,UAAU,KAAK,YAAY,KAAK,QAAQ,MAAM,KAAK,cAAc,MAAM;AAC7G,GAAG,eAAe,CAAC,UAAU,WAAW;;AAExC,GAAG,KAAK,aAAa;AACrB,IAAI,IAAI,SAAS;AACjB,IAAI,MAAM,SAAS;AACnB;;AAEA,GAAG,YAAY,CAAC,SAAS,YAAY,SAAS,EAAE,WAAW,KAAK;AAChE,GAAG,gBAAgB;AACnB,GAAG,KAAK,oBAAoB,iBAAiB,SAAS,IAAI;AAC1D,IAAI,gBAAgB,iBAAiB,KAAK;AAC1C,KAAK,SAAS,EAAE,aAAa,CAAC,MAAM,EAAE,KAAK,aAAa,EAAE;AAC1D,MAAM,CAAC,mBAAmB,EAAE,KAAK,KAAK,EAAE,KAAK,gBAAgB,EAAE,KAAK;AACpE,MAAM,KAAK,QAAQ;AACnB;AACA,SAAS;AACT,GAAG,YAAY,CAAC,SAAS,YAAY,SAAS,EAAE,WAAW,KAAK;AAChE,GAAG,YAAY,EAAE,aAAa,sBAAsB,OAAO,CAAC,UAAU,MAAM,KAAK,MAAM,MAAM,OAAO;AACpG,GAAG,eAAe,EAAE,aAAa,CAAC,SAAS,KAAK,OAAO,OAAO,CAAC,UAAU,MAAM,KAAK,YAAY,MAAM,OAAO;;AAE7G,GAAG,gBAAgB;AACnB;;AAEA,EAAE;AACF,GAAG,CAAC;AACJ,qEAAqE,UAAU;AAC/E,mDAAmD,UAAU;AAC7D,MAAM;AACN,uBAAuB,MAAM,MAAM,OAAO,KAAK;;AAE/C,KAAK,cAAc;;AAEnB;;AAEA,CAAC,OAAO,MAAM,SAAS,aAAa,KAAK,SAAS,OAAO;AACzD;;AC/DA,IAAI,iBAAiB,WAAW,SAAS,OAAO;AAChD,CAAC,IAAI;;AAEL,CAAC,KAAK,UAAU;AAChB,CAAC,KAAK,QAAQ,CAAC,IAAI,SAAS;;AAE5B,CAAC,MAAM,QAAQ,OAAO;AACtB,EAAE,KAAK,KAAK,gBAAgB,SAAS;AACrC,GAAG,MAAM,SAAS,MAAM;AACxB;AACA;AACA;;AAEA,eAAe,YAAY,IAAI;AAC/B,eAAe,UAAU,cAAc;AACvC,eAAe,UAAU,OAAO;;AAfhC;;ACEe,SAAS,cAAc,UAAU;AAChD,CAAC,KAAK,CAAC,QAAQ,OAAO;AACtB,EAAE,MAAM,IAJR,oBAI0B,EAAE,mDAAmD;AAC/E,GAAG,MAAM;AACT;AACA;AACA;;ACHe,SALf,qBAK2B,GAAG,KAAK,UAAU;AAC7C,CAAC,aAAa;;AAEd,CAAC,IAAI,QAAQ,SAAS,KAAK;AAC3B,EAAE,IAAI,KAAK,QAAQ,EAAE,OAAO,EAAE;AAC9B;;AAEA,CAAC,IAAI,QAAQ,SAAS;AACtB,EAAE,YAAY,IAAI,QAAQ,SAAS;AACnC,EAAE,SAAS,IAAI;AACf,EAAE,SAAS,QAAQ;AACnB,EAAE,eAAe,QAAQ;AACzB,EAAE,MAAM,QAAQ;AAChB,EAAE,WAAW,IAAI,KAAK;AACtB,EAAE,WAAW,QAAQ,cAAc;AACnC;;AAEA,CAAC,4BAA4B,IAAI,QAAQ,IAAI,IAAI;;AAEjD,CAAC,IAAI,KAAK,SAAS,SAAS,QAAQ,YAAY,QAAQ;;AAExD,CAAC,OAAO,eAAe,KAAK,IAAI,MAAM,SAAS;AAC/C;;AC3BA,mBAIe;AACf,CAAC,KALD,qBAKS;AACT,CAAC,KAND,qBAMS;AACT,CAAC,KAPD;AAQA;;ACRe,SAAS,gBAAgB,UAAU;AAClD,CAAC,IAAI,SAAS;AACd,CAAC,IAAI,yBAAyB;;AAE9B,CAAC,QAAQ,SAAS,KAAK;AACvB,EAAE,EAAE,WAAW,SAAS,KAAK;AAC7B,GAAG,KAAK,EAAE,UAAU;AACpB,IAAI;AACJ;;AAEA,GAAG,IAAI,OAAO,EAAE;AAChB,GAAG,IAAI,cAAc,EAAE,SAAS,EAAE,YAAY,CAAC,eAAe,CAAC,GAAG,EAAE,KAAK;;AAEzE,GAAG,KAAK,CAAC,EAAE,cAAc;AACzB,IAAI,wBAAwB,SAAS;AACrC;;AAEA,GAAG,QAAQ,SAAS;AACpB;AACA;;AAEA,CAAC,OAAO,EAAE,QAAQ;AAClB;;ACtBe,SAAS,iBAAiB,UAAU;AACnD,CAAC,IAAI,SAAS;;AAEd,CAAC,QAAQ,SAAS,KAAK;AACvB,EAAE,KAAK,EAAE,YAAY;;AAErB,EAAE,KAAK,EAAE,iBAAiB;AAC1B,GAAG,QAAQ,EAAE,SAAS,EAAE;AACxB,GAAG;AACH;;AAEA,EAAE,EAAE,WAAW,SAAS,KAAK;AAC7B,GAAG,QAAQ,EAAE,SAAS,EAAE;AACxB;AACA;;AAEA,CAAC,OAAO;AACR;;ACXe,SANf,kCAMqC,GAAG,KAAK,MAAM,UAAU;AAC7D,CAAC,IAAI,EAAE,QAAQ,2BAA2B,eAAe,IAAI;AAC7D,CAAC,IAAI,cAAc,gBAAgB,IAAI;;AAEvC,CAAC,IAAI,EAAE,kBAAkB,uBAAuB,wBAAwB,IAAI;;AAE5E;AACA,CAAC,uBAAuB,UAAU,YAAY,WAAW,IAAI,IAAI;;AAEjE,CAAC,aAAa,IAAI,KAAK,MAAM,wBAAwB,kBAAkB,oBAAoB;;AAE3F;AACA,CAAC,IAAI,QAAQ,SAAS,KAAK;AAC3B,EAAE,KAAK,QAAQ,EAAE,OAAO,EAAE;AAC1B;;AAEA;AACA,CAAC,KAAK,QAAQ,SAAS;AACvB,EAAE,KAAK,SAAS,QAAQ,SAAS;AACjC;;AAEA;AACA,CAAC,IAAI,QAAQ,SAAS,KAAK;AAC3B,EAAE,KAAK,EAAE,YAAY;AACrB,GAAG,KAAK,SAAS,MAAM,EAAE,SAAS;AAClC;AACA,IAAI,KAAK,QAAQ,EAAE,OAAO,EAAE;AAC5B,IAAI,KAAK,QAAQ,EAAE,KAAK,CAAC,yBAAyB,EAAE,KAAK;AACzD,UAAU;AACV;AACA,IAAI,KAAK,SAAS,EAAE,OAAO,EAAE,YAAY;AACzC;AACA;;AAEA,OAAO;AACP,GAAG,SAAS,EAAE;AACd,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,KAAK,KAAK,QAAQ,EAAE,OAAO,EAAE;AAC7B,KAAK;;AAEL,IAAI,KAAK;AACT,KAAK,KAAK,QAAQ,EAAE,OAAO,EAAE;AAC7B,KAAK;;AAEL,IAAI;AACJ,KAAK,KAAK,SAAS,EAAE,OAAO,EAAE,YAAY;AAC1C;AACA;AACA;;AAEA;AACA,CAAC,IAAI,eAAe;AACpB,CAAC,IAAI,cAAc;;AAEnB,CAAC,OAAO,MAAM,cAAc,SAAS,QAAQ;AAC7C,EAAE,IAAI,WAAW,aAAa;;AAE9B,EAAE,KAAK,OAAO,gBAAgB,SAAS;AACvC;AACA,GAAG,KAAK,CAAC,QAAQ,wBAAwB;AACzC,IAAI,aAAa,MAAM,CAAC,kCAAkC,SAAS,mDAAmD,OAAO,MAAM;AACnI,UAAU;AACV,IAAI,YAAY,MAAM,CAAC,UAAU,SAAS,KAAK,OAAO,MAAM;AAC5D;AACA,SAAS,KAAK,CAAC,IAAI,IAAI,uBAAuB,SAAS,SAAS;AAChE;AACA;AACA,GAAG,aAAa,MAAM,CAAC,UAAU,SAAS,KAAK,KAAK;AACpD,SAAS;AACT,GAAG,YAAY,MAAM,CAAC,UAAU,SAAS,KAAK,KAAK;AACnD;AACA;;AAEA;AACA,CAAC,KAAK,aAAa,SAAS;AAC5B,EAAE,KAAK,OAAO,SAAS,aAAa,MAAM,SAAS;AACnD;;AAEA;AACA,CAAC,KAAK,YAAY,SAAS;AAC3B,EAAE,KAAK,OAAO,QAAQ,SAAS,YAAY,MAAM;AACjD;;AAEA,CAAC,KAAK,QAAQ,SAAS,QAAQ,QAAQ;AACvC,EAAE,KAAK,SAAS,SAAS,QAAQ,QAAQ,YAAY,QAAQ,QAAQ;AACrE;AACA;;AAEA,SAAS,aAAa,MAAM,WAAW;AACvC,CAAC,QAjGD,gBAiGmB,CAAC,MAAM,UAAU,SAAS;AAC7C,EAAE,OAAO,MAAM;AACf;;AAEA,CAAC,OAAO;AACR;;AClGe,SAJf,mBAI2B,GAAG,KAAK,UAAU;AAC7C,CAAC,IAAI,QAAQ,SAAS;AACtB,EAAE,MAAM,QAAQ;AAChB,EAAE,eAAe,QAAQ;AACzB,EAAE,SAAS,IAAI;AACf,EAAE,WAAW,IAAI,KAAK;AACtB,EAAE,YAAY,IAAI,QAAQ;AAC1B,EAAE,WAAW,QAAQ,cAAc;AACnC;;AAEA,CAdA,kCAcc,EAAE,KAAK,IAAI,MAAM;AAC/B,EAAE;AACF,EAAE,OAAO;AACT,EAAE,uBAAuB,QAAQ;AACjC;;AAEA,CAAC,OAAO,eAAe,KAAK,IAAI,MAAM,SAAS;AAC/C;;AChBe,SALf,mBAK2B,GAAG,KAAK,UAAU;AAC7C,CAAC,IAAI,OAAO;;AAEZ;AACA,CAAC,IAAI,cAAc,IAAI,QAAQ,KAAK,KAAK;AACzC,EAAE,KAAK,CAVP,gBAUkB,CAAC,MAAM,MAAM,EAAE,SAAS;AAC1C,GAAG,MAAM,EAAE,SAAS;;AAEpB,GAAG,KAAK,EAAE,UAAU;AACpB,IAAI,OAAO,CAAC,EAAE,IAAI,EAAE,MAAM;AAC1B;;AAEA,GAAG,OAAO,CAAC,MAAM,EAAE,KAAK,KAAK,IAAI,EAAE,MAAM;AACzC;AACA,IAAI,QAAQ,UAAU,MAAM;;AAE5B,CArBA,kCAqBc,EAAE,KAAK,IAAI,MAAM;AAC/B,EAAE,QAAQ;AACV,EAAE,uBAAuB,QAAQ;AACjC;;AAEA,CAAC,KAAK,QAAQ,cAAc,QAAQ;AACpC,EAAE,IAAI,KAAK,SAAS,sBAAsB;AAC1C;;AAEA,CAAC,OAAO,eAAe,KAAK,IAAI,MAAM,SAAS;AAC/C;;AC1Be,SALf,mBAK2B,GAAG,KAAK,UAAU;AAC7C,CAAC,aAAa;;AAEd,CAAC,IAAI,QAAQ,SAAS;AACtB,EAAE,YAAY,IAAI,QAAQ,SAAS;AACnC,EAAE,SAAS,IAAI;AACf,EAAE,SAAS,QAAQ;AACnB,EAAE,eAAe,QAAQ;AACzB,EAAE,MAAM,QAAQ;AAChB,EAAE,WAAW,IAAI,KAAK;AACtB,EAAE,QAAQ;AACV,EAAE,WAAW,QAAQ,cAAc;AACnC;;AAEA,CAnBA,kCAmBc,EAAE,KAAK,IAAI,MAAM;AAC/B,EAAE,OAAO;AACT,EAAE,OAAO;AACT,EAAE,uBAAuB,QAAQ;AACjC;;AAEA,CAAC,OAAO,eAAe,KAAK,IAAI,MAAM,SAAS;AAC/C;;AC1BA,iBAIe;AACf,CAAC,KALD,mBAKS;AACT,CAAC,KAND,mBAMS;AACT,CAAC,KAPD;AAQA;;ACRA;AAAA,qBAIe;AACf,CAAC,cAAc;AACf,CAAC,YAAY;AACb;;ACJe,SAHf,8BAG2B,GAAG,QAAQ,UAAU;AAChD,CAAC,IAAI,cAAc,OAAO,YAAY,uBAAuB;AAC7D,CAAC,KAAK,cAAc;AACpB,EAAE,OAAO,KAAK,QAAQ,CAAC,aAAa,YAAY;AAChD;;AAEA,CAAC,IAAI,QAAQ,SAAS;AACtB,EAAE,MAAM,QAAQ;AAChB,EAAE,SAAS,OAAO;AAClB,EAAE,WAAW,OAAO,KAAK;AACzB,EAAE,WAAW,QAAQ,cAAc;AACnC;;AAEA,CAAC,OAAO,KAAK,SAAS,SAAS,QAAQ,YAAY,QAAQ;AAC3D,CAAC,OAAO,eAAe,QAAQ,OAAO,MAAM,SAAS,SAAS;AAC9D;;ACfe,SAHf,8BAG2B,GAAG,QAAQ,UAAU;AAChD,CAAC,IAAI,cAAc,OAAO,gBAAgB,KAAK,KAAK;AACpD,EAAE,OAAO,CAAC,MAAM,EAAE,KAAK,KAAK,IAAI,EAAE,IAAI;AACtC,IAAI,MAAM;;AAEV,CAAC,KAAK,cAAc;AACpB,EAAE,OAAO,KAAK,SAAS,cAAc;AACrC;;AAEA,CAAC,IAAI,cAAc,OAAO,YAAY,uBAAuB;AAC7D,CAAC,KAAK,cAAc;AACpB,EAAE,OAAO,KAAK,QAAQ,CAAC,uBAAuB,YAAY;AAC1D;;AAEA,CAAC,KAAK,QAAQ,cAAc,QAAQ;AACpC,EAAE,OAAO,KAAK,QAAQ,qBAAqB;AAC3C;;AAEA,CAAC,OAAO,eAAe,QAAQ,OAAO,MAAM,SAAS,SAAS;AAC9D;;AClBe,SAJf,8BAI2B,GAAG,QAAQ,UAAU;AAChD,CAAC,aAAa;;AAEd,CAAC,IAAI,QAAQ,OAAO;;AAEpB,CAAC,IAAI,QAAQ,SAAS;AACtB,EAAE,YAAY,MAAM,QAAQ,SAAS;AACrC,EAAE,SAAS,OAAO;AAClB,EAAE,SAAS,QAAQ;AACnB,EAAE,MAAM,QAAQ;AAChB,EAAE,WAAW,OAAO,KAAK;AACzB,EAAE,WAAW,QAAQ,cAAc;AACnC;;AAEA,CAAC,KAAK,MAAM,gBAAgB;AAC5B,EAAE,OAAO,KAAK,QAAQ,CAAC,aAAa,MAAM,uBAAuB,QAAQ;AACzE;;AAEA,CAAC,OAAO,KAAK,SAAS,SAAS,QAAQ,YAAY,OAAO;;AAE1D,CAAC,OAAO,eAAe,QAAQ,OAAO,MAAM,SAAS,SAAS;AAC9D;;ACzBA,4BAIe;AACf,CAAC,KALD,8BAKS;AACT,CAAC,KAND,8BAMS;AACT,CAAC,KAPD;AAQA;;ACRe,SAAS,iBAAiB,QAAQ;AACjD,CAAC,IAAI,OAAO,MAAM,uBAAuB;AACzC,CAAC,OAAO,CAAC,uBAAuB,KAAK;AACrC;;ACCe,SAJf,4BAI2B,GAAG,QAAQ,UAAU;AAChD,CAAC,IAAI,mBAAmB,OAAO,gBAAgB,QAL/C,qCAKmE;AACnE,CAAC,IAAI,QAAQ,OAAO;;AAEpB,CAAC,KAAK,iBAAiB,SAAS;AAChC,EAAE,IAAI,gBAAgB,iBAAiB,KAAK,KAAK;AACjD;AACA,GAAG,KAAK,CAAC,EAAE,aAAa;AACxB,IAAI,OAAO,CAAC,EAAE,EAAE,KAAK,mBAAmB,EAAE,KAAK,KAAK,EAAE,KAAK,gBAAgB,EAAE,KAAK;AAClF;;AAEA;AACA,GAAG,OAAO,CAAC,MAAM,EAAE,KAAK,4BAA4B,EAAE,KAAK,KAAK,EAAE,KAAK,gBAAgB,EAAE,KAAK;AAC9F,KAAK,MAAM;;AAEX,EAAE,OAAO,KAAK,SAAS,gBAAgB;AACvC;;AAEA,CAAC,KAAK,MAAM,gBAAgB;AAC5B,EAAE,OAAO,KAAK,QAAQ,SAAS,gBAAgB;AAC/C;;AAEA,CAAC,IAAI,QAAQ,SAAS;AACtB,EAAE,MAAM,QAAQ;AAChB,EAAE,SAAS,OAAO;AAClB,EAAE,YAAY,MAAM,QAAQ;AAC5B,EAAE,WAAW,OAAO,KAAK;AACzB,EAAE,WAAW,QAAQ,cAAc;AACnC;;AAEA,CAAC,OAAO,KAAK,SAAS,SAAS,QAAQ,YAAY,QAAQ;AAC3D,CAAC,OAAO,eAAe,QAAQ,OAAO,MAAM,SAAS,SAAS;AAC9D;;AAEA,SAtCA,qCAsCqB,GAAG,iBAAiB;AACzC,CAAC,OAAO,eAAe;AACvB;;ACpCe,SAJf,4BAI2B,GAAG,QAAQ,UAAU;AAChD,CAAC,IAAI,QAAQ,OAAO;;AAEpB,CAAC,IAAI,cAAc,OAAO,gBAAgB,KAAK,KAAK;AACpD,EAAE,IAAI,YAAY,CAAC,MAAM,EAAE,KAAK,KAAK,IAAI,EAAE,IAAI;;AAE/C,EAAE,KAAK,EAAE,eAAe;AACxB,GAAG,aAAa;AAChB,MAAM,EAAE,aAAa,CAAC,MAAM,EAAE,KAAK,aAAa,EAAE;AAClD,IAAI,CAAC,mBAAmB,EAAE,KAAK,KAAK,EAAE,KAAK,gBAAgB,EAAE,KAAK;AAClE;;AAEA,EAAE,OAAO;AACT,IAAI,MAAM;;AAEV,CAAC,KAAK,cAAc;AACpB,EAAE,OAAO,KAAK,SAAS,cAAc;AACrC;;AAEA,CAAC,KAAK,MAAM,gBAAgB;AAC5B,EAAE,OAAO,KAAK,QAAQ,SAAS,gBAAgB;AAC/C;;AAEA,CAAC,KAAK,QAAQ,cAAc,QAAQ;AACpC,EAAE,OAAO,KAAK,QAAQ,qBAAqB;AAC3C;;AAEA,CAAC,OAAO,eAAe,QAAQ,OAAO,MAAM,SAAS,SAAS;AAC9D;;AC3Be,SALf,4BAK2B,GAAG,QAAQ,UAAU;AAChD,CAAC,aAAa;;AAEd,CAAC,IAAI,QAAQ,OAAO;;AAEpB,CAAC,IAAI,QAAQ,SAAS;AACtB,EAAE,YAAY,MAAM,QAAQ,SAAS;AACrC,EAAE,SAAS,OAAO;AAClB,EAAE,kBAAkB,OAAO,gBAAgB,QAb3C,qCAa+D;AAC/D,EAAE,SAAS,QAAQ;AACnB,EAAE,MAAM,QAAQ;AAChB,EAAE,WAAW,OAAO,KAAK;AACzB,EAAE,QAAQ;AACV,EAAE,WAAW,QAAQ,cAAc;AACnC;;AAEA,CAAC,KAAK,MAAM,gBAAgB;AAC5B,EAAE,OAAO,KAAK,QAAQ,SAAS,gBAAgB;AAC/C;;AAEA,CAAC,OAAO,KAAK,SAAS,SAAS,QAAQ,YAAY,OAAO;;AAE1D,CAAC,OAAO,eAAe,QAAQ,OAAO,MAAM,SAAS,SAAS;AAC9D;;AAEA,SA9BA,qCA8BqB,GAAG,iBAAiB;AACzC,CAAC,OAAO,eAAe;AACvB;;AChCA,0BAIe;AACf,CAAC,KALD,4BAKS;AACT,CAAC,KAND,4BAMS;AACT,CAAC,KAPD;AAQA;;ACRA;AAAA,qBAIe;AACf,CAAC,cALD,qBAK2B;AAC3B,CAAC,YAND;AAOA;;ACLe,SAAS,SAAS,QAAQ,UAAU;AACnD;AACA,CAAC,KAAK,OAAO,gBAAgB,UAAU,OAAO,YAAY,QAAQ,SAAS;AAC3E,EAAE,MAAM,IAAI,OAAO,CAAC,wFAAwF,OAAO,gBAAgB,IAAI,GAAG,EAAE,IAAI,KAAK,MAAM,eAAe,OAAO,YAAY,QAAQ,KAAK,MAAM;AAChN;;AAEA;AACA,CAAC,IAAI,QAAQ,WAAW,UAAU,QAAQ,QAAQ,CAAC;AACnD,CAAC,IAAI,QAAQ,WAAW,UAAU,QAAQ,QAAQ;AAClD,CAAC,IAAI;;AAEL,CAAC,KAAK,GAAG,YAAY,aAAa,QAAQ,WAAW,OAAO;AAC5D,EAAE,SAAS,OAAO,KAAK;AACvB,QAAQ;AACR,EAAE,SAAS,QAAQ,UAAU;AAC7B;;AAEA,CAAC,OAAO,KAAK,YAAY,QAAQ,SAAS,SAAS,QAAQ,QAAQ;;AAEnE,CAAC,OAAO,eAAe,QAAQ,OAAO,MAAM,SAAS,YAAY;AACjE;;ACbA,IATA,2BASoB,GAAG;AACvB,IAVA,wBAUiB,GAAG;;AAEpB,SAAS,kBAAkB,SAAS;AACpC,CAAC,OAAO,WAAW,QAAQ,UAAU,KAAK;AAC1C,EAAE,IAAI,MAAM,oBAAoB;AAChC,GAAG;AACH,GAAG,eAAe,QAAQ;AAC1B,GAAG,QAAQ,QAAQ;AACnB;;AAEA,EAAE,KAAK,iBAAiB,WAAW,CApBnC,wBAoBiD,GAAG;AACpD;AACA,GAAG,QAAQ,KAtBX,2BAsBgC;AAChC,GAvBA,wBAuBgB,GAAG;AACnB;;AAEA,EAAE,KAAK,QAAQ,iBAAiB,CAAC,QAAQ,UAAU;AACnD,GAAG,MAAM,IAAI,OAAO;AACpB;;AAEA,EAAE,IAAI;;AAEN,EAAE,KAAK,CAAC,QAAQ,SAAS;AACzB;AACA,GAAG,KAAK,iBAAiB,SAAS,iBAAiB,QAAQ;AAC3D,IAAI,MAAM,IAAI,OAAO;AACrB;;AAEA,GAAG,UAAU,eAAe,cAAc;AAC1C,SAAS;AACT,GAAG,UAAU,eAAe,YAAY;AACxC;;AAEA,EAAE,OAAO,SAAS,KAAK;AACvB;AACA;;AA7CA,gBA+Ce;AACf,CAAC,OAAO,iBAAiB;AACzB,CAAC,OAAO,iBAAiB;AACzB,CAAC,OAAO,iBAAiB;;AAEzB,CAAC,QAAQ,WAAW,UAAU;AAC9B,EAAE,OAAO,WAAW,UAAU,MAAM,WAAW,SAAS;AACxD,GAAG,OAAO;AACV,IAAI,SAAS,OAAO,gBAAgB,KAAK,OAAO,IAAI;AACpD,IAAI,SAAS,gBAAgB,OAAO,YAAY;;AAEhD,IAAI,OAAO,WAAW,WAAW,OAAO;AACxC,IAAI,OAAO,WAAW,WAAW,OAAO;AACxC,IAAI,OAAO,WAAW,WAAW,OAAO;;AAExC,IAAI,QAAQ,WAAW,QAAQ,QAAQ,WAAW;AAClD;;AAEA,GAAG,SAAS,YAAY,QAAQ,UAAU,KAAK;AAC/C,IAAI,KAAK,iBAAiB,WAAW,CAlErC,wBAkEmD,GAAG;AACtD;AACA,KAAK,QAAQ,KApEb,2BAoEkC;AAClC,KArEA,wBAqEkB,GAAG;AACrB;;AAEA,IAAI,IAAI;;AAER,IAAI,KAAK,CAAC,QAAQ,SAAS;AAC3B;AACA,KAAK,KAAK,iBAAiB,OAAO,gBAAgB;AAClD,MAAM,MAAM,IAAI,OAAO;AACvB;;AAEA,KAAK,OAAO,QAAQ,SAAS,OAAO;AACpC,MAAM,IAAI,QAAQ,SAAS,KAAK;AAChC,OAAO,KAAK,EAAE,OAAO,gBAAgB,CAAC,EAAE,aAAa,CAAC,EAAE,YAAY;AACpE,QAAQ,MAAM,IAAI,OAAO;AACzB;AACA;AACA;;AAEA,KAAK,UAAU,eAAe,cAAc;AAC5C,WAAW;AACX,KAAK,UAAU,eAAe,YAAY;AAC1C;;AAEA,IAAI,OAAO,SAAS,QAAQ;AAC5B;AACA;AACA;AACA;;AAEA,SAAS,iBAAiB,UAAU;AACpC,CAAC,IAAI,YAAY;;AAEjB,CAAC,QAAQ,SAAS,KAAK;AACvB,EAAE,KAAK,EAAE,YAAY;AACrB,GAAG,UAAU,MAAM;AACnB;;AAEA,OAAO,KAAK,EAAE,OAAO;AACrB,GAAG,UAAU,MAAM,EAAE;AACrB;;AAEA,OAAO,KAAK,EAAE,aAAa;AAC3B,GAAG,UAAU,KAAK,OAAO,WAAW,EAAE,WAAW,KAAK;AACtD;AACA;;AAEA,CAAC,OAAO;AACR;;"}